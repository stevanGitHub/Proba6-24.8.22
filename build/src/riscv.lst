GAS LISTING /tmp/ccad2L7I.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB42:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by os on 8/13/22.
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** #include "printing.hpp"
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../lib/console.h"
   7:src/riscv.cpp **** #include "../h/scauseCode.hpp"
   8:src/riscv.cpp **** #include "../h/syscallCode.hpp"
   9:src/riscv.cpp **** #include "../h/memoryAllocator.hpp"
  10:src/riscv.cpp **** #include "../h/tcb.hpp"
  11:src/riscv.cpp **** 
  12:src/riscv.cpp **** //uint64  timerCounter = 0;
  13:src/riscv.cpp **** 
  14:src/riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 14 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  15:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra"); // ne treba da se vrati u prekidnu posle dispatcha,
  20              		.loc 1 15 5
  21              		.loc 1 15 39 is_stmt 0
  22              	#APP
  23              	# 15 "src/riscv.cpp" 1
  16              	                                        // vec odmah posle poziva ove f-je u tgreadWrapper
  17:src/riscv.cpp ****     __asm__ volatile ("sret"); // sret sig je popovati spp, tj upisati..
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 17 5 is_stmt 1
  27              		.loc 1 17 30 is_stmt 0
  28              	# 17 "src/riscv.cpp" 1
  18              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 18 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE42:
GAS LISTING /tmp/ccad2L7I.s 			page 2


  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
  45 0000 0A555341 		.string	"\nUSAO U CHANGE MOD IZ USER\n"
  45      4F205520 
  45      4348414E 
  45      4745204D 
  45      4F442049 
  46 001c 00000000 		.align	3
  47              	.LC1:
  48 0020 0A555341 		.string	"\nUSAO U CHANGE MOD IZ SISTEMSKOG\n"
  48      4F205520 
  48      4348414E 
  48      4745204D 
  48      4F442049 
  49 0042 00000000 		.align	3
  49      0000
  50              	.LC2:
  51 0048 0A556E65 		.string	"\nUnexpected trap cause; value of scause = "
  51      78706563 
  51      74656420 
  51      74726170 
  51      20636175 
  52 0073 00000000 		.align	3
  52      00
  53              	.LC3:
  54 0078 3B200A76 		.string	"; \nvalue of sepc(pc) = "
  54      616C7565 
  54      206F6620 
  54      73657063 
  54      28706329 
  55              		.align	3
  56              	.LC4:
  57 0090 3B207661 		.string	"; value of sstatus = "
  57      6C756520 
  57      6F662073 
  57      73746174 
  57      7573203D 
  58 00a6 0000     		.align	3
  59              	.LC5:
  60 00a8 3B200A76 		.string	"; \nvalue of stval = "
  60      616C7565 
  60      206F6620 
  60      73747661 
  60      6C203D20 
  61              		.text
  62              		.align	2
  63              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  65              	_ZN5Riscv20handleSupervisorTrapEv:
  66              	.LFB43:
  19:src/riscv.cpp **** 
  20:src/riscv.cpp **** void Riscv::handleSupervisorTrap() {
  67              		.loc 1 20 36 is_stmt 1
  68              		.cfi_startproc
  69 0020 130101EE 		addi	sp,sp,-288
  70              		.cfi_def_cfa_offset 288
  71 0024 233C1110 		sd	ra,280(sp)
GAS LISTING /tmp/ccad2L7I.s 			page 3


  72 0028 23388110 		sd	s0,272(sp)
  73 002c 23349110 		sd	s1,264(sp)
  74 0030 23302111 		sd	s2,256(sp)
  75              		.cfi_offset 1, -8
  76              		.cfi_offset 8, -16
  77              		.cfi_offset 9, -24
  78              		.cfi_offset 18, -32
  79 0034 13040112 		addi	s0,sp,288
  80              		.cfi_def_cfa 8, 0
  21:src/riscv.cpp ****     uint64 scause = r_scause();
  81              		.loc 1 21 5
  82              	.LBB146:
  83              	.LBB147:
  84              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 8/12/22.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROBA3_PROJECT_BASE_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROBA3_PROJECT_BASE_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** #define MASK_INTR uint64 sstatus = Riscv::r_sstatus(); Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
  11:src/../h/riscv.hpp **** #define UMASK_INTR Riscv::ms_sstatus(sstatus & Riscv::SSTATUS_SIE ? Riscv::SSTATUS_SIE : 0);
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp **** class Riscv {
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp **** public:
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // pop sstatus, spp and sstatus, spie bits
  18:src/../h/riscv.hpp ****     static void popSppSpie();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     //read register scause
  21:src/../h/riscv.hpp ****     static uint64 r_scause();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     //write register scause
  24:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     //read register sepc
  27:src/../h/riscv.hpp ****     static uint64 r_sepc();
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     //write register sepc
  30:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     //read register stvec
  33:src/../h/riscv.hpp ****     static uint64 r_stvec();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     //write register stvec
  36:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     //read register stval
  39:src/../h/riscv.hpp ****     static uint64 r_stval();
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     //write register stval
  42:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  43:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccad2L7I.s 			page 4


  44:src/../h/riscv.hpp ****     enum BitMaskSip {
  45:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1), // P kao pending
  46:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  47:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  48:src/../h/riscv.hpp ****     };
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     enum BitMaskSstatus {
  51:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  52:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  53:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  54:src/../h/riscv.hpp ****     };
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // mask set register sip
  58:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     // mask clear register sip
  61:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // read register sstatus
  64:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // write register sstatus
  67:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     // mask clear register sip
  72:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     // read register sip
  75:src/../h/riscv.hpp ****     static uint64 r_sip();
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     //write register sip
  78:src/../h/riscv.hpp ****     static void w_sip(uint64 stval);
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // supervisor trap
  81:src/../h/riscv.hpp ****     static void supervisorTrap();
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp **** private:
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     // supervisor trap handler
  86:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** };
  89:src/../h/riscv.hpp **** 
  90:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  91:src/../h/riscv.hpp ****     uint64 volatile scause;
  85              		.loc 2 91 5
  92:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r" (scause));
  86              		.loc 2 92 5
  87              		.loc 2 92 73 is_stmt 0
  88              	#APP
  89              	# 92 "src/../h/riscv.hpp" 1
  93              	    return scause;
  90              		csrr a5, scause
  91              	# 0 "" 2
GAS LISTING /tmp/ccad2L7I.s 			page 5


  92              	#NO_APP
  93 003c 2330F4EE 		sd	a5,-288(s0)
  94              		.loc 2 93 5 is_stmt 1
  95              		.loc 2 93 12 is_stmt 0
  96 0040 033704EE 		ld	a4,-288(s0)
  97              	.LVL0:
  98              	.LBE147:
  99              	.LBE146:
  22:src/riscv.cpp **** 
  23:src/riscv.cpp ****     uint64 pc;
 100              		.loc 1 23 5 is_stmt 1
  24:src/riscv.cpp **** 
  25:src/riscv.cpp ****     uint64 sepc, sstatus;
 101              		.loc 1 25 5
  26:src/riscv.cpp ****     thread_t *handle;
 102              		.loc 1 26 5
  27:src/riscv.cpp ****     TCB::Body body;
 103              		.loc 1 27 5
  28:src/riscv.cpp ****     TCB* tcb;
 104              		.loc 1 28 5
  29:src/riscv.cpp ****     void* arg, *stack_space;
 105              		.loc 1 29 5
  30:src/riscv.cpp **** 
  31:src/riscv.cpp ****     uint64 code, par1, ret;
 106              		.loc 1 31 5
  32:src/riscv.cpp ****     void* ptr, *pr;
 107              		.loc 1 32 5
  33:src/riscv.cpp ****     MemoryAllocator* mem = MemoryAllocator::getInstance();
 108              		.loc 1 33 5
 109              	.LBB148:
 110              	.LBB149:
 111              		.file 3 "src/../h/../h/../h/memoryAllocator.hpp"
   1:src/../h/../h/../h/memoryAllocator.hpp **** //
   2:src/../h/../h/../h/memoryAllocator.hpp **** // Created by os on 8/14/22.
   3:src/../h/../h/../h/memoryAllocator.hpp **** //
   4:src/../h/../h/../h/memoryAllocator.hpp **** 
   5:src/../h/../h/../h/memoryAllocator.hpp **** #ifndef PROBA3_PROJECT_BASE_MEMORYALLOCATOR_HPP
   6:src/../h/../h/../h/memoryAllocator.hpp **** #define PROBA3_PROJECT_BASE_MEMORYALLOCATOR_HPP
   7:src/../h/../h/../h/memoryAllocator.hpp **** 
   8:src/../h/../h/../h/memoryAllocator.hpp **** #include "../lib/hw.h"
   9:src/../h/../h/../h/memoryAllocator.hpp **** 
  10:src/../h/../h/../h/memoryAllocator.hpp **** class MemoryAllocator {
  11:src/../h/../h/../h/memoryAllocator.hpp **** private:
  12:src/../h/../h/../h/memoryAllocator.hpp **** 
  13:src/../h/../h/../h/memoryAllocator.hpp ****     int countSizeBytes(int blockNum){
  14:src/../h/../h/../h/memoryAllocator.hpp ****         return blockNum * MEM_BLOCK_SIZE;
  15:src/../h/../h/../h/memoryAllocator.hpp ****     }
  16:src/../h/../h/../h/memoryAllocator.hpp **** 
  17:src/../h/../h/../h/memoryAllocator.hpp ****     MemoryAllocator() {
  18:src/../h/../h/../h/memoryAllocator.hpp ****         freeList=(struct metaData*)HEAP_START_ADDR;
  19:src/../h/../h/../h/memoryAllocator.hpp ****         // ```` Pocetni size je velicina pocetnog memorijskog prostora
  20:src/../h/../h/../h/memoryAllocator.hpp ****         freeList->size = ((char *)HEAP_END_ADDR - (char *)HEAP_START_ADDR) - sizeof(struct metaData
  21:src/../h/../h/../h/memoryAllocator.hpp ****         freeList->free = 1;
  22:src/../h/../h/../h/memoryAllocator.hpp ****         freeList->next = 0;
  23:src/../h/../h/../h/memoryAllocator.hpp ****     }
  24:src/../h/../h/../h/memoryAllocator.hpp **** 
  25:src/../h/../h/../h/memoryAllocator.hpp ****     struct metaData{
GAS LISTING /tmp/ccad2L7I.s 			page 6


  26:src/../h/../h/../h/memoryAllocator.hpp ****         size_t size;
  27:src/../h/../h/../h/memoryAllocator.hpp ****         int free;
  28:src/../h/../h/../h/memoryAllocator.hpp ****         struct metaData *next;
  29:src/../h/../h/../h/memoryAllocator.hpp ****     } ;
  30:src/../h/../h/../h/memoryAllocator.hpp **** 
  31:src/../h/../h/../h/memoryAllocator.hpp ****     struct metaData* freeList;
  32:src/../h/../h/../h/memoryAllocator.hpp **** 
  33:src/../h/../h/../h/memoryAllocator.hpp ****     void split(struct metaData *fitting_slot,size_t size);
  34:src/../h/../h/../h/memoryAllocator.hpp **** 
  35:src/../h/../h/../h/memoryAllocator.hpp **** public:
  36:src/../h/../h/../h/memoryAllocator.hpp ****     static MemoryAllocator* getInstance(){
  37:src/../h/../h/../h/memoryAllocator.hpp ****         // using static variable
  38:src/../h/../h/../h/memoryAllocator.hpp ****         static MemoryAllocator instance;
 112              		.loc 3 38 9
 113              		.loc 3 38 32 is_stmt 0
 114 0044 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 114      83C70700 
 115 004c 63960704 		bnez	a5,.L4
 116              	.LVL1:
 117              	.LBB150:
 118              	.LBB151:
 119              	.LBB152:
  18:src/../h/../h/../h/memoryAllocator.hpp ****         // ```` Pocetni size je velicina pocetnog memorijskog prostora
 120              		.loc 3 18 9 is_stmt 1
  18:src/../h/../h/../h/memoryAllocator.hpp ****         // ```` Pocetni size je velicina pocetnog memorijskog prostora
 121              		.loc 3 18 17 is_stmt 0
 122 0050 97070000 		la	a5,HEAP_START_ADDR
 122      83B70700 
 123 0058 83B60700 		ld	a3,0(a5)
 124 005c 17060000 		lla	a2,_ZZN15MemoryAllocator11getInstanceEvE8instance
 124      13060600 
 125 0064 2330D600 		sd	a3,0(a2)
  20:src/../h/../h/../h/memoryAllocator.hpp ****         freeList->free = 1;
 126              		.loc 3 20 9 is_stmt 1
  20:src/../h/../h/../h/memoryAllocator.hpp ****         freeList->free = 1;
 127              		.loc 3 20 27 is_stmt 0
 128 0068 97070000 		la	a5,HEAP_END_ADDR
 128      83B70700 
 129 0070 83B70700 		ld	a5,0(a5)
  20:src/../h/../h/../h/memoryAllocator.hpp ****         freeList->free = 1;
 130              		.loc 3 20 49
 131 0074 B387D740 		sub	a5,a5,a3
  20:src/../h/../h/../h/memoryAllocator.hpp ****         freeList->free = 1;
 132              		.loc 3 20 76
 133 0078 938787FE 		addi	a5,a5,-24
  20:src/../h/../h/../h/memoryAllocator.hpp ****         freeList->free = 1;
 134              		.loc 3 20 24
 135 007c 23B0F600 		sd	a5,0(a3)
  21:src/../h/../h/../h/memoryAllocator.hpp ****         freeList->next = 0;
 136              		.loc 3 21 9 is_stmt 1
 137 0080 83360600 		ld	a3,0(a2)
  21:src/../h/../h/../h/memoryAllocator.hpp ****         freeList->next = 0;
 138              		.loc 3 21 24 is_stmt 0
 139 0084 93071000 		li	a5,1
 140 0088 23A4F600 		sw	a5,8(a3)
  22:src/../h/../h/../h/memoryAllocator.hpp ****     }
 141              		.loc 3 22 9 is_stmt 1
GAS LISTING /tmp/ccad2L7I.s 			page 7


  22:src/../h/../h/../h/memoryAllocator.hpp ****     }
 142              		.loc 3 22 24 is_stmt 0
 143 008c 23B80600 		sd	zero,16(a3)
 144              	.LVL2:
 145              	.LBE152:
 146              	.LBE151:
 147              	.LBE150:
 148              		.loc 3 38 32
 149 0090 97060000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a3
 149      2380F600 
 150              	.L4:
  39:src/../h/../h/../h/memoryAllocator.hpp ****         return &instance;
 151              		.loc 3 39 9 is_stmt 1
 152              	.LVL3:
 153              	.LBE149:
 154              	.LBE148:
  34:src/riscv.cpp **** 
  35:src/riscv.cpp ****     switch (scause) {
 155              		.loc 1 35 5
 156              	.LBB153:
 157 0098 9307F0FF 		li	a5,-1
 158 009c 9397F703 		slli	a5,a5,63
 159 00a0 93871700 		addi	a5,a5,1
 160 00a4 6304F706 		beq	a4,a5,.L5
 161 00a8 9307F0FF 		li	a5,-1
 162 00ac 9397F703 		slli	a5,a5,63
 163 00b0 93871700 		addi	a5,a5,1
 164 00b4 63EEE702 		bgtu	a4,a5,.L6
 165 00b8 93078000 		li	a5,8
 166 00bc 6306F70C 		beq	a4,a5,.L7
 167 00c0 93079000 		li	a5,9
 168 00c4 6316F74E 		bne	a4,a5,.L9
 169              	.LBB154:
  36:src/riscv.cpp ****         case SOFTW_INTR:  // desio se prekid od tajmera = softw interrupt
  37:src/riscv.cpp ****              TCB::timeSliceCounter++;
  38:src/riscv.cpp ****             if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
  39:src/riscv.cpp ****                 uint64 sepc = r_sepc(); uint64 sstatus = r_sstatus();
  40:src/riscv.cpp ****                 TCB::timeSliceCounter = 0; // nit krece da se izvrsava iz pocetka
  41:src/riscv.cpp ****                 TCB::dispatch();
  42:src/riscv.cpp ****                 w_sstatus(sstatus); w_sepc(sepc);
  43:src/riscv.cpp ****             }
  44:src/riscv.cpp ****             // ova asihrona promena konteksta ce raditi samo za niti koje su vec napravljane
  45:src/riscv.cpp ****             __asm__ volatile ("csrc sip, 0x02"); // prekid obradjen
  46:src/riscv.cpp ****             break;
  47:src/riscv.cpp **** 
  48:src/riscv.cpp ****         case HW_INTR: // Spoljasnji hardverski prekid
  49:src/riscv.cpp **** 
  50:src/riscv.cpp ****             console_handler();
  51:src/riscv.cpp **** 
  52:src/riscv.cpp ****             break;
  53:src/riscv.cpp **** 
  54:src/riscv.cpp ****         case ECALL_USER: // ecall iz korisnickog rezima
  55:src/riscv.cpp ****            // printString("\nUsao u ecall iz korisnickog rezima\n");
  56:src/riscv.cpp **** 
  57:src/riscv.cpp ****             // dodat deo
  58:src/riscv.cpp ****             __asm__ volatile ("ld %[code], 10 * 8(fp)" : [code] "=r" (code)); // procita code iz a0
  59:src/riscv.cpp **** 
GAS LISTING /tmp/ccad2L7I.s 			page 8


  60:src/riscv.cpp ****             switch (code) {
  61:src/riscv.cpp ****                 case MEM_ALLOC:
  62:src/riscv.cpp ****                     // printString("\nUsao u MEM_ALLOC\n");
  63:src/riscv.cpp **** 
  64:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 11 * 8(fp)" : [par1] "=r" (par1) ); // pop a1 fr
  65:src/riscv.cpp **** 
  66:src/riscv.cpp ****                     //  printString("\n par1: ");
  67:src/riscv.cpp ****                     //  printInt(par1);
  68:src/riscv.cpp ****                     //   printString("\n");
  69:src/riscv.cpp **** 
  70:src/riscv.cpp ****                     ptr = (void*)mem->myMalloc(par1);
  71:src/riscv.cpp **** 
  72:src/riscv.cpp ****                     //   printString("Vrednost ptr:");
  73:src/riscv.cpp ****                     //   printInt((uint64)ptr);
  74:src/riscv.cpp ****                     //   printString("\n");
  75:src/riscv.cpp **** 
  76:src/riscv.cpp ****                     __asm__ volatile ("sd %[xx], 10*8(fp)" : : [xx] "r" (ptr) ); // store a0 on sta
  77:src/riscv.cpp **** 
  78:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
  79:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
  80:src/riscv.cpp **** 
  81:src/riscv.cpp ****                     //   printString("\nIzlazi iz MEM_ALLOC\n");
  82:src/riscv.cpp ****                     break;
  83:src/riscv.cpp **** 
  84:src/riscv.cpp ****                 case MEM_FREE:
  85:src/riscv.cpp **** 
  86:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 11 * 8(fp)" : [par1] "=r" (pr) ); // pop a1 from
  87:src/riscv.cpp **** 
  88:src/riscv.cpp ****                     ret = mem->myFree(pr);
  89:src/riscv.cpp **** 
  90:src/riscv.cpp ****                     __asm__ volatile ("sd %[xx], 10*8(fp)" : : [xx] "r" (ret) ); // store a0 on sta
  91:src/riscv.cpp **** 
  92:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
  93:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
  94:src/riscv.cpp **** 
  95:src/riscv.cpp ****                     break;
  96:src/riscv.cpp ****                 case THREAD_CREATE:
  97:src/riscv.cpp ****                     //  printString("Usao u THREAD_CREATE");
  98:src/riscv.cpp **** 
  99:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 11 * 8(fp)" : [par1] "=r" (handle) ); // pop a1 
 100:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 12 * 8(fp)" : [par1] "=r" (body) ); // pop a2 fr
 101:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 13 * 8(fp)" : [par1] "=r" (arg) ); // pop a3 fro
 102:src/riscv.cpp ****                     __asm__ volatile ("ld %[stack_space], 14 * 8(fp)" : [stack_space] "=r" (stack_s
 103:src/riscv.cpp **** 
 104:src/riscv.cpp ****                     *handle = TCB::createThread(body, arg, stack_space);
 105:src/riscv.cpp ****                     if(*handle) ret =  0;
 106:src/riscv.cpp ****                     else ret = -3;
 107:src/riscv.cpp **** 
 108:src/riscv.cpp **** //                    printString("\nhandle: ");
 109:src/riscv.cpp **** //                    printInt((uint64)handle, 16, 0);
 110:src/riscv.cpp **** 
 111:src/riscv.cpp ****                     __asm__ volatile ("sd %[xx], 10*8(fp)" : : [xx] "r" (ret) ); // store a0 on sta
 112:src/riscv.cpp **** 
 113:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
 114:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 115:src/riscv.cpp **** 
 116:src/riscv.cpp ****                     //  printString("\nIzlazi iz THREAD_CREATE\n");
GAS LISTING /tmp/ccad2L7I.s 			page 9


 117:src/riscv.cpp **** 
 118:src/riscv.cpp ****                     break;
 119:src/riscv.cpp ****                 case THREAD_EXIT:
 120:src/riscv.cpp **** 
 121:src/riscv.cpp ****                     sepc = r_sepc() + 4; sstatus = r_sstatus(); // ovo ne treba?
 122:src/riscv.cpp **** 
 123:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 124:src/riscv.cpp ****                     TCB::running->setFinished(true);
 125:src/riscv.cpp ****                     TCB::dispatch();
 126:src/riscv.cpp **** 
 127:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc); // ovo ne treba?
 128:src/riscv.cpp **** 
 129:src/riscv.cpp ****                     break;
 130:src/riscv.cpp ****                 case THREAD_DISPATCH:
 131:src/riscv.cpp **** 
 132:src/riscv.cpp ****                     sepc = r_sepc() + 4; sstatus = r_sstatus();
 133:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 134:src/riscv.cpp ****             //        printString("\nIde dispatch iz user\n");
 135:src/riscv.cpp ****                     TCB::dispatch();
 136:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 137:src/riscv.cpp **** 
 138:src/riscv.cpp ****                     break;
 139:src/riscv.cpp **** 
 140:src/riscv.cpp ****                 case PUT_THREAD:
 141:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 11 * 8(fp)" : [par1] "=r" (tcb) ); // pop a1 fro
 142:src/riscv.cpp **** 
 143:src/riscv.cpp ****                     tcb->putTCBinQueue(tcb);
 144:src/riscv.cpp **** 
 145:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
 146:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 147:src/riscv.cpp **** 
 148:src/riscv.cpp ****                     break;
 149:src/riscv.cpp ****                 case SEM_OPEN:
 150:src/riscv.cpp **** 
 151:src/riscv.cpp ****                     break;
 152:src/riscv.cpp ****                 case SEM_CLOSE:
 153:src/riscv.cpp **** 
 154:src/riscv.cpp ****                     break;
 155:src/riscv.cpp ****                 case SEM_WAIT:
 156:src/riscv.cpp **** 
 157:src/riscv.cpp ****                     break;
 158:src/riscv.cpp ****                 case SEM_SIGNAL:
 159:src/riscv.cpp **** 
 160:src/riscv.cpp ****                     break;
 161:src/riscv.cpp ****                 case TIME_SLEEP:
 162:src/riscv.cpp **** 
 163:src/riscv.cpp ****                     break;
 164:src/riscv.cpp ****                 case GETC:
 165:src/riscv.cpp **** 
 166:src/riscv.cpp ****                     break;
 167:src/riscv.cpp ****                 case PUTC:
 168:src/riscv.cpp **** 
 169:src/riscv.cpp ****                     break;
 170:src/riscv.cpp ****                 case CHANGE_MOD:
 171:src/riscv.cpp ****                     printString("\nUSAO U CHANGE MOD IZ USER\n");
 172:src/riscv.cpp ****                     Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 173:src/riscv.cpp **** 
GAS LISTING /tmp/ccad2L7I.s 			page 10


 174:src/riscv.cpp **** 
 175:src/riscv.cpp ****                         w_sepc(r_sepc() + 4UL);
 176:src/riscv.cpp ****                         __asm__ volatile ("csrc sip, 0x02");
 177:src/riscv.cpp ****                     break;
 178:src/riscv.cpp ****                 default:
 179:src/riscv.cpp ****                     // interrupt: no; cause code: environment call from S-mode(9) == YIELD
 180:src/riscv.cpp ****                     uint64 sepc = r_sepc() + 4; uint64 sstatus = r_sstatus();
 181:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 182:src/riscv.cpp ****                     TCB::dispatch();
 183:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 184:src/riscv.cpp **** 
 185:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
 186:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 187:src/riscv.cpp **** 
 188:src/riscv.cpp ****                     break;
 189:src/riscv.cpp **** 
 190:src/riscv.cpp ****             }
 191:src/riscv.cpp **** 
 192:src/riscv.cpp ****             w_sepc(r_sepc() + 4UL);
 193:src/riscv.cpp ****             __asm__ volatile ("csrc sip, 0x02");
 194:src/riscv.cpp **** 
 195:src/riscv.cpp ****             break;
 196:src/riscv.cpp **** 
 197:src/riscv.cpp ****         case ECALL_SYST: // ecall iz sistemskog rezima ** ulazice se ovde zbog sys_calla i yielda
 170              		.loc 1 197 9
 198:src/riscv.cpp **** //            printString("\nUsao u ecall syst\n");
 199:src/riscv.cpp ****         //   __asm__ volatile ("mv %[code], a0" : [code] "=r" (code) );
 200:src/riscv.cpp ****            __asm__ volatile ("ld %[code], 10 * 8(fp)" : [code] "=r" (code)); // procita code iz a0 
 171              		.loc 1 200 12
 172              		.loc 1 200 76 is_stmt 0
 173              	#APP
 174              	# 200 "src/riscv.cpp" 1
 201              	
 175              		ld a5, 10 * 8(fp)
 176              	# 0 "" 2
 177              	.LVL4:
 202:src/riscv.cpp ****             switch (code) {
 178              		.loc 1 202 13 is_stmt 1
 179              	#NO_APP
 180 00cc 13073004 		li	a4,67
 181              	.LVL5:
 182 00d0 6366F748 		bgtu	a5,a4,.L24
 183 00d4 93972700 		slli	a5,a5,2
 184              	.LVL6:
 185 00d8 17070000 		lla	a4,.L26
 185      13070700 
 186 00e0 B387E700 		add	a5,a5,a4
 187 00e4 83A70700 		lw	a5,0(a5)
 188 00e8 B387E700 		add	a5,a5,a4
 189 00ec 67800700 		jr	a5
 190              		.section	.rodata
 191              		.align	2
 192              		.align	2
 193              	.L26:
 194 0000 00000000 		.word	.L24-.L26
 195 0004 00000000 		.word	.L32-.L26
 196 0008 00000000 		.word	.L31-.L26
GAS LISTING /tmp/ccad2L7I.s 			page 11


 197 000c 00000000 		.word	.L24-.L26
 198 0010 00000000 		.word	.L24-.L26
 199 0014 00000000 		.word	.L24-.L26
 200 0018 00000000 		.word	.L24-.L26
 201 001c 00000000 		.word	.L24-.L26
 202 0020 00000000 		.word	.L24-.L26
 203 0024 00000000 		.word	.L24-.L26
 204 0028 00000000 		.word	.L24-.L26
 205 002c 00000000 		.word	.L24-.L26
 206 0030 00000000 		.word	.L24-.L26
 207 0034 00000000 		.word	.L24-.L26
 208 0038 00000000 		.word	.L24-.L26
 209 003c 00000000 		.word	.L24-.L26
 210 0040 00000000 		.word	.L24-.L26
 211 0044 00000000 		.word	.L30-.L26
 212 0048 00000000 		.word	.L29-.L26
 213 004c 00000000 		.word	.L28-.L26
 214 0050 00000000 		.word	.L27-.L26
 215 0054 00000000 		.word	.L24-.L26
 216 0058 00000000 		.word	.L24-.L26
 217 005c 00000000 		.word	.L24-.L26
 218 0060 00000000 		.word	.L24-.L26
 219 0064 00000000 		.word	.L24-.L26
 220 0068 00000000 		.word	.L24-.L26
 221 006c 00000000 		.word	.L24-.L26
 222 0070 00000000 		.word	.L24-.L26
 223 0074 00000000 		.word	.L24-.L26
 224 0078 00000000 		.word	.L24-.L26
 225 007c 00000000 		.word	.L24-.L26
 226 0080 00000000 		.word	.L24-.L26
 227 0084 00000000 		.word	.L3-.L26
 228 0088 00000000 		.word	.L3-.L26
 229 008c 00000000 		.word	.L3-.L26
 230 0090 00000000 		.word	.L3-.L26
 231 0094 00000000 		.word	.L24-.L26
 232 0098 00000000 		.word	.L24-.L26
 233 009c 00000000 		.word	.L24-.L26
 234 00a0 00000000 		.word	.L24-.L26
 235 00a4 00000000 		.word	.L24-.L26
 236 00a8 00000000 		.word	.L24-.L26
 237 00ac 00000000 		.word	.L24-.L26
 238 00b0 00000000 		.word	.L24-.L26
 239 00b4 00000000 		.word	.L24-.L26
 240 00b8 00000000 		.word	.L24-.L26
 241 00bc 00000000 		.word	.L24-.L26
 242 00c0 00000000 		.word	.L24-.L26
 243 00c4 00000000 		.word	.L3-.L26
 244 00c8 00000000 		.word	.L24-.L26
 245 00cc 00000000 		.word	.L24-.L26
 246 00d0 00000000 		.word	.L24-.L26
 247 00d4 00000000 		.word	.L24-.L26
 248 00d8 00000000 		.word	.L24-.L26
 249 00dc 00000000 		.word	.L24-.L26
 250 00e0 00000000 		.word	.L24-.L26
 251 00e4 00000000 		.word	.L24-.L26
 252 00e8 00000000 		.word	.L24-.L26
 253 00ec 00000000 		.word	.L24-.L26
GAS LISTING /tmp/ccad2L7I.s 			page 12


 254 00f0 00000000 		.word	.L24-.L26
 255 00f4 00000000 		.word	.L24-.L26
 256 00f8 00000000 		.word	.L24-.L26
 257 00fc 00000000 		.word	.L24-.L26
 258 0100 00000000 		.word	.L24-.L26
 259 0104 00000000 		.word	.L3-.L26
 260 0108 00000000 		.word	.L3-.L26
 261 010c 00000000 		.word	.L25-.L26
 262              		.text
 263              	.LVL7:
 264              	.L6:
 265              	.LBE154:
  35:src/riscv.cpp ****         case SOFTW_INTR:  // desio se prekid od tajmera = softw interrupt
 266              		.loc 1 35 5 is_stmt 0
 267 00f0 9307F0FF 		li	a5,-1
 268 00f4 9397F703 		slli	a5,a5,63
 269 00f8 93879700 		addi	a5,a5,9
 270 00fc 631AF74A 		bne	a4,a5,.L9
 271              	.LBB287:
  48:src/riscv.cpp **** 
 272              		.loc 1 48 9 is_stmt 1
  50:src/riscv.cpp **** 
 273              		.loc 1 50 13
  50:src/riscv.cpp **** 
 274              		.loc 1 50 28 is_stmt 0
 275 0100 97000000 		call	console_handler@plt
 275      E7800000 
 276              	.LVL8:
  52:src/riscv.cpp **** 
 277              		.loc 1 52 13 is_stmt 1
 278 0108 6F000003 		j	.L3
 279              	.LVL9:
 280              	.L5:
  36:src/riscv.cpp ****              TCB::timeSliceCounter++;
 281              		.loc 1 36 9
  37:src/riscv.cpp ****             if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 282              		.loc 1 37 14
  37:src/riscv.cpp ****             if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 283              		.loc 1 37 35 is_stmt 0
 284 010c 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 284      03370700 
 285              	.LVL10:
 286 0114 83370700 		ld	a5,0(a4)
 287 0118 93871700 		addi	a5,a5,1
 288 011c 2330F700 		sd	a5,0(a4)
  38:src/riscv.cpp ****                 uint64 sepc = r_sepc(); uint64 sstatus = r_sstatus();
 289              		.loc 1 38 13 is_stmt 1
 290              	.LBB155:
  38:src/riscv.cpp ****                 uint64 sepc = r_sepc(); uint64 sstatus = r_sstatus();
 291              		.loc 1 38 68 is_stmt 0
 292 0120 17070000 		la	a4,_ZN3TCB7runningE
 292      03370700 
 293 0128 03370700 		ld	a4,0(a4)
 294              	.LVL11:
 295              	.LBB156:
 296              	.LBB157:
 297              		.file 4 "src/../h/../h/tcb.hpp"
GAS LISTING /tmp/ccad2L7I.s 			page 13


   1:src/../h/../h/tcb.hpp **** //
   2:src/../h/../h/tcb.hpp **** // Created by os on 8/17/22.
   3:src/../h/../h/tcb.hpp **** //
   4:src/../h/../h/tcb.hpp **** 
   5:src/../h/../h/tcb.hpp **** #ifndef PROBA3_PROJECT_BASE_TCB_HPP
   6:src/../h/../h/tcb.hpp **** #define PROBA3_PROJECT_BASE_TCB_HPP
   7:src/../h/../h/tcb.hpp **** 
   8:src/../h/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/../h/tcb.hpp **** #include "../h/scheduler.hpp"
  10:src/../h/../h/tcb.hpp **** #include "../h/memoryAllocator.hpp"
  11:src/../h/../h/tcb.hpp **** #include "../lib/mem.h"
  12:src/../h/../h/tcb.hpp **** 
  13:src/../h/../h/tcb.hpp **** 
  14:src/../h/../h/tcb.hpp **** 
  15:src/../h/../h/tcb.hpp **** #define THREADS_NUM 64
  16:src/../h/../h/tcb.hpp **** 
  17:src/../h/../h/tcb.hpp **** //  IZLASKOM IZ F-JA WOKRERA NITI SE IMPLICINTNO ZAVRSAVAJU
  18:src/../h/../h/tcb.hpp **** 
  19:src/../h/../h/tcb.hpp **** extern void printString(char const *string);
  20:src/../h/../h/tcb.hpp **** 
  21:src/../h/../h/tcb.hpp **** 
  22:src/../h/../h/tcb.hpp **** void *operator new(uint64 n);
  23:src/../h/../h/tcb.hpp **** void *operator new[](uint64 n);
  24:src/../h/../h/tcb.hpp **** 
  25:src/../h/../h/tcb.hpp **** typedef TCB* thread_t;
  26:src/../h/../h/tcb.hpp **** 
  27:src/../h/../h/tcb.hpp **** class TCB {
  28:src/../h/../h/tcb.hpp **** public:
  29:src/../h/../h/tcb.hpp **** 
  30:src/../h/../h/tcb.hpp **** 
  31:src/../h/../h/tcb.hpp **** 
  32:src/../h/../h/tcb.hpp ****     static void dispatch();
  33:src/../h/../h/tcb.hpp **** 
  34:src/../h/../h/tcb.hpp ****     ~TCB() { delete[] stack;
  35:src/../h/../h/tcb.hpp ****       //  printString("\nDestructor is executed\n");
  36:src/../h/../h/tcb.hpp ****     }
  37:src/../h/../h/tcb.hpp **** 
  38:src/../h/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  39:src/../h/../h/tcb.hpp **** 
  40:src/../h/../h/tcb.hpp ****     bool isSuspended() const { return suspended; }
  41:src/../h/../h/tcb.hpp **** 
  42:src/../h/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
  43:src/../h/../h/tcb.hpp **** 
  44:src/../h/../h/tcb.hpp ****     void setSuspended(bool value) { suspended = value; }
  45:src/../h/../h/tcb.hpp **** 
  46:src/../h/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 298              		.loc 4 46 35 is_stmt 1
 299              		.loc 4 46 42 is_stmt 0
 300 012c 03378702 		ld	a4,40(a4)
 301              	.LVL12:
 302              	.LBE157:
 303              	.LBE156:
  38:src/riscv.cpp ****                 uint64 sepc = r_sepc(); uint64 sstatus = r_sstatus();
 304              		.loc 1 38 13
 305 0130 63F0E702 		bgeu	a5,a4,.L37
 306              	.L11:
 307              	.LBE155:
GAS LISTING /tmp/ccad2L7I.s 			page 14


  45:src/riscv.cpp ****             break;
 308              		.loc 1 45 13 is_stmt 1
  45:src/riscv.cpp ****             break;
 309              		.loc 1 45 48 is_stmt 0
 310              	#APP
 311              	# 45 "src/riscv.cpp" 1
  46:src/riscv.cpp **** 
 312              		csrc sip, 0x02
 313              	# 0 "" 2
 314              		.loc 1 46 13 is_stmt 1
 315              	#NO_APP
 316              	.L3:
 317              	.LBE287:
 318              	.LBE153:
 203:src/riscv.cpp ****                 case MEM_ALLOC:
 204:src/riscv.cpp ****                    // printString("\nUsao u MEM_ALLOC\n");
 205:src/riscv.cpp **** 
 206:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 11 * 8(fp)" : [par1] "=r" (par1) ); // pop a1 fr
 207:src/riscv.cpp **** 
 208:src/riscv.cpp ****                   //  printString("\n par1: ");
 209:src/riscv.cpp ****                   //  printInt(par1);
 210:src/riscv.cpp ****                  //   printString("\n");
 211:src/riscv.cpp **** 
 212:src/riscv.cpp ****                     ptr = (void*)mem->myMalloc(par1);
 213:src/riscv.cpp **** 
 214:src/riscv.cpp ****                  //   printString("Vrednost ptr:");
 215:src/riscv.cpp ****                  //   printInt((uint64)ptr);
 216:src/riscv.cpp ****                  //   printString("\n");
 217:src/riscv.cpp **** 
 218:src/riscv.cpp ****                     __asm__ volatile ("sd %[xx], 10*8(fp)" : : [xx] "r" (ptr) ); // store a0 on sta
 219:src/riscv.cpp **** 
 220:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
 221:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 222:src/riscv.cpp **** 
 223:src/riscv.cpp ****                  //   printString("\nIzlazi iz MEM_ALLOC\n");
 224:src/riscv.cpp ****                     break;
 225:src/riscv.cpp **** 
 226:src/riscv.cpp ****                 case MEM_FREE:
 227:src/riscv.cpp **** 
 228:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 11 * 8(fp)" : [par1] "=r" (pr) ); // pop a1 from
 229:src/riscv.cpp **** 
 230:src/riscv.cpp ****                     ret = mem->myFree(pr);
 231:src/riscv.cpp **** 
 232:src/riscv.cpp ****                     __asm__ volatile ("sd %[xx], 10*8(fp)" : : [xx] "r" (ret) ); // store a0 on sta
 233:src/riscv.cpp **** 
 234:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
 235:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 236:src/riscv.cpp **** 
 237:src/riscv.cpp ****                     break;
 238:src/riscv.cpp ****                 case THREAD_CREATE:
 239:src/riscv.cpp ****                   //  printString("Usao u THREAD_CREATE");
 240:src/riscv.cpp **** 
 241:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 11 * 8(fp)" : [par1] "=r" (handle) ); // pop a1 
 242:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 12 * 8(fp)" : [par1] "=r" (body) ); // pop a2 fr
 243:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 13 * 8(fp)" : [par1] "=r" (arg) ); // pop a3 fro
 244:src/riscv.cpp ****                     __asm__ volatile ("ld %[stack_space], 14 * 8(fp)" : [stack_space] "=r" (stack_s
 245:src/riscv.cpp **** 
GAS LISTING /tmp/ccad2L7I.s 			page 15


 246:src/riscv.cpp ****                     *handle = TCB::createThread(body, arg, stack_space);
 247:src/riscv.cpp ****                     if(*handle) ret =  0;
 248:src/riscv.cpp ****                     else ret = -3;
 249:src/riscv.cpp **** 
 250:src/riscv.cpp **** //                    printString("\nhandle: ");
 251:src/riscv.cpp **** //                    printInt((uint64)handle, 16, 0);
 252:src/riscv.cpp **** 
 253:src/riscv.cpp ****                     __asm__ volatile ("sd %[xx], 10*8(fp)" : : [xx] "r" (ret) ); // store a0 on sta
 254:src/riscv.cpp **** 
 255:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
 256:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 257:src/riscv.cpp **** 
 258:src/riscv.cpp ****                   //  printString("\nIzlazi iz THREAD_CREATE\n");
 259:src/riscv.cpp **** 
 260:src/riscv.cpp ****                     break;
 261:src/riscv.cpp ****                 case THREAD_EXIT:
 262:src/riscv.cpp **** 
 263:src/riscv.cpp ****                     sepc = r_sepc() + 4; sstatus = r_sstatus(); // ovo ne treba?
 264:src/riscv.cpp **** 
 265:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 266:src/riscv.cpp ****                     TCB::running->setFinished(true);
 267:src/riscv.cpp ****                     TCB::dispatch();
 268:src/riscv.cpp **** 
 269:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc); // ovo ne treba?
 270:src/riscv.cpp **** 
 271:src/riscv.cpp ****                     break;
 272:src/riscv.cpp ****                 case THREAD_DISPATCH:
 273:src/riscv.cpp **** 
 274:src/riscv.cpp ****                     sepc = r_sepc() + 4; sstatus = r_sstatus();
 275:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 276:src/riscv.cpp ****                     TCB::dispatch();
 277:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 278:src/riscv.cpp **** 
 279:src/riscv.cpp ****                     break;
 280:src/riscv.cpp **** 
 281:src/riscv.cpp ****                 case PUT_THREAD:
 282:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 11 * 8(fp)" : [par1] "=r" (tcb) ); // pop a1 fro
 283:src/riscv.cpp **** 
 284:src/riscv.cpp ****                     tcb->putTCBinQueue(tcb);
 285:src/riscv.cpp **** 
 286:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
 287:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 288:src/riscv.cpp **** 
 289:src/riscv.cpp ****                     break;
 290:src/riscv.cpp ****                 case SEM_OPEN:
 291:src/riscv.cpp **** 
 292:src/riscv.cpp ****                     break;
 293:src/riscv.cpp ****                 case SEM_CLOSE:
 294:src/riscv.cpp **** 
 295:src/riscv.cpp ****                     break;
 296:src/riscv.cpp ****                 case SEM_WAIT:
 297:src/riscv.cpp **** 
 298:src/riscv.cpp ****                     break;
 299:src/riscv.cpp ****                 case SEM_SIGNAL:
 300:src/riscv.cpp **** 
 301:src/riscv.cpp ****                     break;
 302:src/riscv.cpp ****                 case TIME_SLEEP:
GAS LISTING /tmp/ccad2L7I.s 			page 16


 303:src/riscv.cpp **** 
 304:src/riscv.cpp ****                     break;
 305:src/riscv.cpp ****                 case GETC:
 306:src/riscv.cpp **** 
 307:src/riscv.cpp ****                     break;
 308:src/riscv.cpp ****                 case PUTC:
 309:src/riscv.cpp **** 
 310:src/riscv.cpp ****                     break;
 311:src/riscv.cpp ****                 case CHANGE_MOD:
 312:src/riscv.cpp ****                     Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 313:src/riscv.cpp ****                     printString("\nUSAO U CHANGE MOD IZ SISTEMSKOG\n");
 314:src/riscv.cpp **** 
 315:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
 316:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 317:src/riscv.cpp ****                     break;
 318:src/riscv.cpp ****                 default:
 319:src/riscv.cpp ****                     // interrupt: no; cause code: environment call from S-mode(9)
 320:src/riscv.cpp ****                     uint64 sepc = r_sepc() + 4; uint64 sstatus = r_sstatus();
 321:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 322:src/riscv.cpp ****                     TCB::dispatch();
 323:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 324:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
 325:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 326:src/riscv.cpp **** 
 327:src/riscv.cpp ****                     break;
 328:src/riscv.cpp **** 
 329:src/riscv.cpp ****             }
 330:src/riscv.cpp **** 
 331:src/riscv.cpp **** 
 332:src/riscv.cpp ****             break;
 333:src/riscv.cpp ****         default:
 334:src/riscv.cpp ****             // unexpected
 335:src/riscv.cpp ****             pc = r_sepc();
 336:src/riscv.cpp ****             printString("\nUnexpected trap cause; value of scause = ");
 337:src/riscv.cpp ****             printInt(r_scause());
 338:src/riscv.cpp **** 
 339:src/riscv.cpp ****             printString("; \nvalue of sepc(pc) = ");
 340:src/riscv.cpp ****             printInt(pc);
 341:src/riscv.cpp ****             printString("; value of sstatus = ");
 342:src/riscv.cpp ****             printInt(r_sstatus());
 343:src/riscv.cpp ****             printString("; \nvalue of stval = ");
 344:src/riscv.cpp ****             printInt(r_stval());
 345:src/riscv.cpp ****             break;
 346:src/riscv.cpp **** 
 347:src/riscv.cpp ****     }
 348:src/riscv.cpp **** 
 349:src/riscv.cpp **** }
 319              		.loc 1 349 1 is_stmt 0
 320 0138 83308111 		ld	ra,280(sp)
 321              		.cfi_remember_state
 322              		.cfi_restore 1
 323 013c 03340111 		ld	s0,272(sp)
 324              		.cfi_restore 8
 325              		.cfi_def_cfa 2, 288
 326 0140 83348110 		ld	s1,264(sp)
 327              		.cfi_restore 9
 328 0144 03390110 		ld	s2,256(sp)
GAS LISTING /tmp/ccad2L7I.s 			page 17


 329              		.cfi_restore 18
 330 0148 13010112 		addi	sp,sp,288
 331              		.cfi_def_cfa_offset 0
 332 014c 67800000 		jr	ra
 333              	.L37:
 334              		.cfi_restore_state
 335              	.LBB289:
 336              	.LBB288:
 337              	.LBB167:
 338              	.LBB158:
  39:src/riscv.cpp ****                 TCB::timeSliceCounter = 0; // nit krece da se izvrsava iz pocetka
 339              		.loc 1 39 17 is_stmt 1
 340              	.LBB159:
 341              	.LBB160:
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  97:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r" (scause));
  98:src/../h/riscv.hpp **** }
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 102:src/../h/riscv.hpp ****     uint64 volatile sepc;
 342              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 343              		.loc 2 103 5
 344              		.loc 2 103 65 is_stmt 0
 345              	#APP
 346              	# 103 "src/../h/riscv.hpp" 1
 104              	    return sepc;
 347              		csrr a5, sepc
 348              	# 0 "" 2
 349              	#NO_APP
 350 0154 2338F4EE 		sd	a5,-272(s0)
 351              		.loc 2 104 5 is_stmt 1
 352              		.loc 2 104 12 is_stmt 0
 353 0158 833404EF 		ld	s1,-272(s0)
 354              	.LVL13:
 355              	.LBE160:
 356              	.LBE159:
  39:src/riscv.cpp ****                 TCB::timeSliceCounter = 0; // nit krece da se izvrsava iz pocetka
 357              		.loc 1 39 41 is_stmt 1
 358              	.LBB161:
 359              	.LBB162:
 105:src/../h/riscv.hpp **** }
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r" (sepc));
 109:src/../h/riscv.hpp **** }
 110:src/../h/riscv.hpp **** 
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 113:src/../h/riscv.hpp ****     uint64 volatile stvec;
 114:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r" (stvec));
 115:src/../h/riscv.hpp ****     return stvec;
 116:src/../h/riscv.hpp **** }
 117:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccad2L7I.s 			page 18


 118:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r" (stvec));
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** 
 123:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 124:src/../h/riscv.hpp ****     uint64 volatile stval;
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r" (stval));
 126:src/../h/riscv.hpp ****     return stval;
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r" (stval));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()  {
 134:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 360              		.loc 2 134 5
 135:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 361              		.loc 2 135 5
 362              		.loc 2 135 77 is_stmt 0
 363              	#APP
 364              	# 135 "src/../h/riscv.hpp" 1
 136              	    return sstatus;
 365              		csrr a5, sstatus
 366              	# 0 "" 2
 367              	#NO_APP
 368 0160 2334F4EE 		sd	a5,-280(s0)
 369              		.loc 2 136 5 is_stmt 1
 370              		.loc 2 136 12 is_stmt 0
 371 0164 033984EE 		ld	s2,-280(s0)
 372              	.LVL14:
 373              	.LBE162:
 374              	.LBE161:
  40:src/riscv.cpp ****                 TCB::dispatch();
 375              		.loc 1 40 17 is_stmt 1
  40:src/riscv.cpp ****                 TCB::dispatch();
 376              		.loc 1 40 39 is_stmt 0
 377 0168 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 377      83B70700 
 378 0170 23B00700 		sd	zero,0(a5)
  41:src/riscv.cpp ****                 w_sstatus(sstatus); w_sepc(sepc);
 379              		.loc 1 41 17 is_stmt 1
  41:src/riscv.cpp ****                 w_sstatus(sstatus); w_sepc(sepc);
 380              		.loc 1 41 30 is_stmt 0
 381 0174 97000000 		call	_ZN3TCB8dispatchEv@plt
 381      E7800000 
 382              	.LVL15:
  42:src/riscv.cpp ****             }
 383              		.loc 1 42 17 is_stmt 1
 384              	.LBB163:
 385              	.LBB164:
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 140:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r" (sstatus));
 386              		.loc 2 140 5
GAS LISTING /tmp/ccad2L7I.s 			page 19


 387              		.loc 2 140 78 is_stmt 0
 388              	#APP
 389              	# 140 "src/../h/riscv.hpp" 1
 141              	}
 390              		csrw sstatus, s2
 391              	# 0 "" 2
 392              	.LVL16:
 393              	#NO_APP
 394              	.LBE164:
 395              	.LBE163:
  42:src/riscv.cpp ****             }
 396              		.loc 1 42 37 is_stmt 1
 397              	.LBB165:
 398              	.LBB166:
 108:src/../h/riscv.hpp **** }
 399              		.loc 2 108 5
 108:src/../h/riscv.hpp **** }
 400              		.loc 2 108 66 is_stmt 0
 401              	#APP
 402              	# 108 "src/../h/riscv.hpp" 1
 109:src/../h/riscv.hpp **** 
 403              		csrw sepc, s1
 404              	# 0 "" 2
 405              		.loc 2 109 1
 406              	#NO_APP
 407 0184 6FF01FFB 		j	.L11
 408              	.LVL17:
 409              	.L7:
 410              	.LBE166:
 411              	.LBE165:
 412              	.LBE158:
 413              	.LBE167:
  54:src/riscv.cpp ****            // printString("\nUsao u ecall iz korisnickog rezima\n");
 414              		.loc 1 54 9 is_stmt 1
  58:src/riscv.cpp **** 
 415              		.loc 1 58 13
  58:src/riscv.cpp **** 
 416              		.loc 1 58 77 is_stmt 0
 417              	#APP
 418              	# 58 "src/riscv.cpp" 1
 419              		ld a5, 10 * 8(fp)
 420              	# 0 "" 2
 421              	.LVL18:
  60:src/riscv.cpp ****                 case MEM_ALLOC:
 422              		.loc 1 60 13 is_stmt 1
 423              	#NO_APP
 424 018c 13073004 		li	a4,67
 425              	.LVL19:
 426 0190 636CF71C 		bgtu	a5,a4,.L13
 427 0194 93972700 		slli	a5,a5,2
 428              	.LVL20:
 429 0198 17070000 		lla	a4,.L15
 429      13070700 
 430 01a0 B387E700 		add	a5,a5,a4
 431 01a4 83A70700 		lw	a5,0(a5)
 432 01a8 B387E700 		add	a5,a5,a4
 433 01ac 67800700 		jr	a5
GAS LISTING /tmp/ccad2L7I.s 			page 20


 434              		.section	.rodata
 435              		.align	2
 436              		.align	2
 437              	.L15:
 438 0110 00000000 		.word	.L13-.L15
 439 0114 00000000 		.word	.L22-.L15
 440 0118 00000000 		.word	.L21-.L15
 441 011c 00000000 		.word	.L13-.L15
 442 0120 00000000 		.word	.L13-.L15
 443 0124 00000000 		.word	.L13-.L15
 444 0128 00000000 		.word	.L13-.L15
 445 012c 00000000 		.word	.L13-.L15
 446 0130 00000000 		.word	.L13-.L15
 447 0134 00000000 		.word	.L13-.L15
 448 0138 00000000 		.word	.L13-.L15
 449 013c 00000000 		.word	.L13-.L15
 450 0140 00000000 		.word	.L13-.L15
 451 0144 00000000 		.word	.L13-.L15
 452 0148 00000000 		.word	.L13-.L15
 453 014c 00000000 		.word	.L13-.L15
 454 0150 00000000 		.word	.L13-.L15
 455 0154 00000000 		.word	.L20-.L15
 456 0158 00000000 		.word	.L19-.L15
 457 015c 00000000 		.word	.L18-.L15
 458 0160 00000000 		.word	.L17-.L15
 459 0164 00000000 		.word	.L13-.L15
 460 0168 00000000 		.word	.L13-.L15
 461 016c 00000000 		.word	.L13-.L15
 462 0170 00000000 		.word	.L13-.L15
 463 0174 00000000 		.word	.L13-.L15
 464 0178 00000000 		.word	.L13-.L15
 465 017c 00000000 		.word	.L13-.L15
 466 0180 00000000 		.word	.L13-.L15
 467 0184 00000000 		.word	.L13-.L15
 468 0188 00000000 		.word	.L13-.L15
 469 018c 00000000 		.word	.L13-.L15
 470 0190 00000000 		.word	.L13-.L15
 471 0194 00000000 		.word	.L16-.L15
 472 0198 00000000 		.word	.L16-.L15
 473 019c 00000000 		.word	.L16-.L15
 474 01a0 00000000 		.word	.L16-.L15
 475 01a4 00000000 		.word	.L13-.L15
 476 01a8 00000000 		.word	.L13-.L15
 477 01ac 00000000 		.word	.L13-.L15
 478 01b0 00000000 		.word	.L13-.L15
 479 01b4 00000000 		.word	.L13-.L15
 480 01b8 00000000 		.word	.L13-.L15
 481 01bc 00000000 		.word	.L13-.L15
 482 01c0 00000000 		.word	.L13-.L15
 483 01c4 00000000 		.word	.L13-.L15
 484 01c8 00000000 		.word	.L13-.L15
 485 01cc 00000000 		.word	.L13-.L15
 486 01d0 00000000 		.word	.L13-.L15
 487 01d4 00000000 		.word	.L16-.L15
 488 01d8 00000000 		.word	.L13-.L15
 489 01dc 00000000 		.word	.L13-.L15
 490 01e0 00000000 		.word	.L13-.L15
GAS LISTING /tmp/ccad2L7I.s 			page 21


 491 01e4 00000000 		.word	.L13-.L15
 492 01e8 00000000 		.word	.L13-.L15
 493 01ec 00000000 		.word	.L13-.L15
 494 01f0 00000000 		.word	.L13-.L15
 495 01f4 00000000 		.word	.L13-.L15
 496 01f8 00000000 		.word	.L13-.L15
 497 01fc 00000000 		.word	.L13-.L15
 498 0200 00000000 		.word	.L13-.L15
 499 0204 00000000 		.word	.L13-.L15
 500 0208 00000000 		.word	.L13-.L15
 501 020c 00000000 		.word	.L13-.L15
 502 0210 00000000 		.word	.L13-.L15
 503 0214 00000000 		.word	.L16-.L15
 504 0218 00000000 		.word	.L16-.L15
 505 021c 00000000 		.word	.L14-.L15
 506              		.text
 507              	.L22:
 508              	.LBB168:
  61:src/riscv.cpp ****                     // printString("\nUsao u MEM_ALLOC\n");
 509              		.loc 1 61 17
  64:src/riscv.cpp **** 
 510              		.loc 1 64 21
  64:src/riscv.cpp **** 
 511              		.loc 1 64 86 is_stmt 0
 512              	#APP
 513              	# 64 "src/riscv.cpp" 1
 514              		ld a1, 11 * 8(fp)
 515              	# 0 "" 2
 516              	.LVL21:
  70:src/riscv.cpp **** 
 517              		.loc 1 70 21 is_stmt 1
  70:src/riscv.cpp **** 
 518              		.loc 1 70 47 is_stmt 0
 519              	#NO_APP
 520 01b4 17050000 		lla	a0,_ZZN15MemoryAllocator11getInstanceEvE8instance
 520      13050500 
 521 01bc 97000000 		call	_ZN15MemoryAllocator8myMallocEm@plt
 521      E7800000 
 522              	.LVL22:
  76:src/riscv.cpp **** 
 523              		.loc 1 76 21 is_stmt 1
  76:src/riscv.cpp **** 
 524              		.loc 1 76 80 is_stmt 0
 525              	#APP
 526              	# 76 "src/riscv.cpp" 1
  78:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 527              		sd a0, 10*8(fp)
 528              	# 0 "" 2
 529              		.loc 1 78 21 is_stmt 1
 530              	#NO_APP
 531              	.LBB169:
 532              	.LBB170:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 533              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 534              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
GAS LISTING /tmp/ccad2L7I.s 			page 22


 535              		.loc 2 103 65 is_stmt 0
 536              	#APP
 537              	# 103 "src/../h/riscv.hpp" 1
 538              		csrr a5, sepc
 539              	# 0 "" 2
 540              	#NO_APP
 541 01cc 233CF4EE 		sd	a5,-264(s0)
 104:src/../h/riscv.hpp **** }
 542              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 543              		.loc 2 104 12 is_stmt 0
 544 01d0 833784EF 		ld	a5,-264(s0)
 545              	.LBE170:
 546              	.LBE169:
  78:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 547              		.loc 1 78 27
 548 01d4 93874700 		addi	a5,a5,4
 549              	.LVL23:
 550              	.LBB171:
 551              	.LBB172:
 108:src/../h/riscv.hpp **** }
 552              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 553              		.loc 2 108 66 is_stmt 0
 554              	#APP
 555              	# 108 "src/../h/riscv.hpp" 1
 556              		csrw sepc, a5
 557              	# 0 "" 2
 558              	.LVL24:
 559              	#NO_APP
 560              	.LBE172:
 561              	.LBE171:
  79:src/riscv.cpp **** 
 562              		.loc 1 79 21 is_stmt 1
  79:src/riscv.cpp **** 
 563              		.loc 1 79 56 is_stmt 0
 564              	#APP
 565              	# 79 "src/riscv.cpp" 1
  82:src/riscv.cpp **** 
 566              		csrc sip, 0x02
 567              	# 0 "" 2
 568              		.loc 1 82 21 is_stmt 1
 569              	.LVL25:
 570              	#NO_APP
 571              	.L16:
 572              	.LBE168:
 192:src/riscv.cpp ****             __asm__ volatile ("csrc sip, 0x02");
 573              		.loc 1 192 13
 574              	.LBB221:
 575              	.LBB222:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 576              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 577              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 578              		.loc 2 103 65 is_stmt 0
 579              	#APP
GAS LISTING /tmp/ccad2L7I.s 			page 23


 580              	# 103 "src/../h/riscv.hpp" 1
 581              		csrr a5, sepc
 582              	# 0 "" 2
 583              	#NO_APP
 584 01e4 233CF4F4 		sd	a5,-168(s0)
 104:src/../h/riscv.hpp **** }
 585              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 586              		.loc 2 104 12 is_stmt 0
 587 01e8 833784F5 		ld	a5,-168(s0)
 588              	.LBE222:
 589              	.LBE221:
 192:src/riscv.cpp ****             __asm__ volatile ("csrc sip, 0x02");
 590              		.loc 1 192 19
 591 01ec 93874700 		addi	a5,a5,4
 592              	.LVL26:
 593              	.LBB223:
 594              	.LBB224:
 108:src/../h/riscv.hpp **** }
 595              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 596              		.loc 2 108 66 is_stmt 0
 597              	#APP
 598              	# 108 "src/../h/riscv.hpp" 1
 599              		csrw sepc, a5
 600              	# 0 "" 2
 601              	.LVL27:
 602              	#NO_APP
 603              	.LBE224:
 604              	.LBE223:
 193:src/riscv.cpp **** 
 605              		.loc 1 193 13 is_stmt 1
 193:src/riscv.cpp **** 
 606              		.loc 1 193 48 is_stmt 0
 607              	#APP
 608              	# 193 "src/riscv.cpp" 1
 195:src/riscv.cpp **** 
 609              		csrc sip, 0x02
 610              	# 0 "" 2
 611              		.loc 1 195 13 is_stmt 1
 612              	#NO_APP
 613 01f8 6FF01FF4 		j	.L3
 614              	.L21:
 615              	.LBB225:
  84:src/riscv.cpp **** 
 616              		.loc 1 84 17
  86:src/riscv.cpp **** 
 617              		.loc 1 86 21
  86:src/riscv.cpp **** 
 618              		.loc 1 86 84 is_stmt 0
 619              	#APP
 620              	# 86 "src/riscv.cpp" 1
 621              		ld a1, 11 * 8(fp)
 622              	# 0 "" 2
 623              	.LVL28:
  88:src/riscv.cpp **** 
 624              		.loc 1 88 21 is_stmt 1
GAS LISTING /tmp/ccad2L7I.s 			page 24


  88:src/riscv.cpp **** 
 625              		.loc 1 88 38 is_stmt 0
 626              	#NO_APP
 627 0200 17050000 		lla	a0,_ZZN15MemoryAllocator11getInstanceEvE8instance
 627      13050500 
 628 0208 97000000 		call	_ZN15MemoryAllocator6myFreeEPv@plt
 628      E7800000 
 629              	.LVL29:
  90:src/riscv.cpp **** 
 630              		.loc 1 90 21 is_stmt 1
  90:src/riscv.cpp **** 
 631              		.loc 1 90 80 is_stmt 0
 632              	#APP
 633              	# 90 "src/riscv.cpp" 1
  92:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 634              		sd a0, 10*8(fp)
 635              	# 0 "" 2
 636              		.loc 1 92 21 is_stmt 1
 637              	#NO_APP
 638              	.LBB173:
 639              	.LBB174:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 640              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 641              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 642              		.loc 2 103 65 is_stmt 0
 643              	#APP
 644              	# 103 "src/../h/riscv.hpp" 1
 645              		csrr a5, sepc
 646              	# 0 "" 2
 647              	#NO_APP
 648 0218 2330F4F0 		sd	a5,-256(s0)
 104:src/../h/riscv.hpp **** }
 649              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 650              		.loc 2 104 12 is_stmt 0
 651 021c 833704F0 		ld	a5,-256(s0)
 652              	.LBE174:
 653              	.LBE173:
  92:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 654              		.loc 1 92 27
 655 0220 93874700 		addi	a5,a5,4
 656              	.LVL30:
 657              	.LBB175:
 658              	.LBB176:
 108:src/../h/riscv.hpp **** }
 659              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 660              		.loc 2 108 66 is_stmt 0
 661              	#APP
 662              	# 108 "src/../h/riscv.hpp" 1
 663              		csrw sepc, a5
 664              	# 0 "" 2
 665              	.LVL31:
 666              	#NO_APP
 667              	.LBE176:
GAS LISTING /tmp/ccad2L7I.s 			page 25


 668              	.LBE175:
  93:src/riscv.cpp **** 
 669              		.loc 1 93 21 is_stmt 1
  93:src/riscv.cpp **** 
 670              		.loc 1 93 56 is_stmt 0
 671              	#APP
 672              	# 93 "src/riscv.cpp" 1
  95:src/riscv.cpp ****                 case THREAD_CREATE:
 673              		csrc sip, 0x02
 674              	# 0 "" 2
 675              		.loc 1 95 21 is_stmt 1
 676              	#NO_APP
 677 022c 6FF05FFB 		j	.L16
 678              	.LVL32:
 679              	.L20:
  96:src/riscv.cpp ****                     //  printString("Usao u THREAD_CREATE");
 680              		.loc 1 96 17
  99:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 12 * 8(fp)" : [par1] "=r" (body) ); // pop a2 fr
 681              		.loc 1 99 21
  99:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 12 * 8(fp)" : [par1] "=r" (body) ); // pop a2 fr
 682              		.loc 1 99 88 is_stmt 0
 683              	#APP
 684              	# 99 "src/riscv.cpp" 1
 685              		ld s1, 11 * 8(fp)
 686              	# 0 "" 2
 687              	.LVL33:
 100:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 13 * 8(fp)" : [par1] "=r" (arg) ); // pop a3 fro
 688              		.loc 1 100 21 is_stmt 1
 100:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 13 * 8(fp)" : [par1] "=r" (arg) ); // pop a3 fro
 689              		.loc 1 100 86 is_stmt 0
 690              	# 100 "src/riscv.cpp" 1
 691              		ld a0, 12 * 8(fp)
 692              	# 0 "" 2
 693              	.LVL34:
 101:src/riscv.cpp ****                     __asm__ volatile ("ld %[stack_space], 14 * 8(fp)" : [stack_space] "=r" (stack_s
 694              		.loc 1 101 21 is_stmt 1
 101:src/riscv.cpp ****                     __asm__ volatile ("ld %[stack_space], 14 * 8(fp)" : [stack_space] "=r" (stack_s
 695              		.loc 1 101 85 is_stmt 0
 696              	# 101 "src/riscv.cpp" 1
 697              		ld a1, 13 * 8(fp)
 698              	# 0 "" 2
 699              	.LVL35:
 102:src/riscv.cpp **** 
 700              		.loc 1 102 21 is_stmt 1
 102:src/riscv.cpp **** 
 701              		.loc 1 102 107 is_stmt 0
 702              	# 102 "src/riscv.cpp" 1
 703              		ld a2, 14 * 8(fp)
 704              	# 0 "" 2
 705              	.LVL36:
 104:src/riscv.cpp ****                     if(*handle) ret =  0;
 706              		.loc 1 104 21 is_stmt 1
 104:src/riscv.cpp ****                     if(*handle) ret =  0;
 707              		.loc 1 104 48 is_stmt 0
 708              	#NO_APP
 709 0240 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_S0_@plt
 709      E7800000 
GAS LISTING /tmp/ccad2L7I.s 			page 26


 710              	.LVL37:
 104:src/riscv.cpp ****                     if(*handle) ret =  0;
 711              		.loc 1 104 29
 712 0248 23B0A400 		sd	a0,0(s1)
 105:src/riscv.cpp ****                     else ret = -3;
 713              		.loc 1 105 21 is_stmt 1
 714 024c 63040502 		beqz	a0,.L34
 105:src/riscv.cpp ****                     else ret = -3;
 715              		.loc 1 105 37 is_stmt 0
 716 0250 93070000 		li	a5,0
 717              	.L23:
 718              	.LVL38:
 111:src/riscv.cpp **** 
 719              		.loc 1 111 21 is_stmt 1
 111:src/riscv.cpp **** 
 720              		.loc 1 111 80 is_stmt 0
 721              	#APP
 722              	# 111 "src/riscv.cpp" 1
 113:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 723              		sd a5, 10*8(fp)
 724              	# 0 "" 2
 725              		.loc 1 113 21 is_stmt 1
 726              	#NO_APP
 727              	.LBB177:
 728              	.LBB178:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 729              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 730              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 731              		.loc 2 103 65 is_stmt 0
 732              	#APP
 733              	# 103 "src/../h/riscv.hpp" 1
 734              		csrr a5, sepc
 735              	# 0 "" 2
 736              	.LVL39:
 737              	#NO_APP
 738 025c 2334F4F0 		sd	a5,-248(s0)
 104:src/../h/riscv.hpp **** }
 739              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 740              		.loc 2 104 12 is_stmt 0
 741 0260 833784F0 		ld	a5,-248(s0)
 742              	.LBE178:
 743              	.LBE177:
 113:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 744              		.loc 1 113 27
 745 0264 93874700 		addi	a5,a5,4
 746              	.LVL40:
 747              	.LBB179:
 748              	.LBB180:
 108:src/../h/riscv.hpp **** }
 749              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 750              		.loc 2 108 66 is_stmt 0
 751              	#APP
 752              	# 108 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/ccad2L7I.s 			page 27


 753              		csrw sepc, a5
 754              	# 0 "" 2
 755              	.LVL41:
 756              	#NO_APP
 757              	.LBE180:
 758              	.LBE179:
 114:src/riscv.cpp **** 
 759              		.loc 1 114 21 is_stmt 1
 114:src/riscv.cpp **** 
 760              		.loc 1 114 56 is_stmt 0
 761              	#APP
 762              	# 114 "src/riscv.cpp" 1
 118:src/riscv.cpp ****                 case THREAD_EXIT:
 763              		csrc sip, 0x02
 764              	# 0 "" 2
 765              		.loc 1 118 21 is_stmt 1
 766              	#NO_APP
 767 0270 6FF01FF7 		j	.L16
 768              	.L34:
 106:src/riscv.cpp **** 
 769              		.loc 1 106 30 is_stmt 0
 770 0274 9307D0FF 		li	a5,-3
 771 0278 6FF0DFFD 		j	.L23
 772              	.LVL42:
 773              	.L19:
 119:src/riscv.cpp **** 
 774              		.loc 1 119 17 is_stmt 1
 121:src/riscv.cpp **** 
 775              		.loc 1 121 21
 776              	.LBB181:
 777              	.LBB182:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 778              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 779              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 780              		.loc 2 103 65 is_stmt 0
 781              	#APP
 782              	# 103 "src/../h/riscv.hpp" 1
 783              		csrr a5, sepc
 784              	# 0 "" 2
 785              	#NO_APP
 786 0280 233CF4F0 		sd	a5,-232(s0)
 104:src/../h/riscv.hpp **** }
 787              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 788              		.loc 2 104 12 is_stmt 0
 789 0284 833484F1 		ld	s1,-232(s0)
 790              	.LBE182:
 791              	.LBE181:
 121:src/riscv.cpp **** 
 792              		.loc 1 121 26
 793 0288 93844400 		addi	s1,s1,4
 794              	.LVL43:
 121:src/riscv.cpp **** 
 795              		.loc 1 121 42 is_stmt 1
 796              	.LBB183:
GAS LISTING /tmp/ccad2L7I.s 			page 28


 797              	.LBB184:
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 798              		.loc 2 134 5
 135:src/../h/riscv.hpp ****     return sstatus;
 799              		.loc 2 135 5
 135:src/../h/riscv.hpp ****     return sstatus;
 800              		.loc 2 135 77 is_stmt 0
 801              	#APP
 802              	# 135 "src/../h/riscv.hpp" 1
 803              		csrr a5, sstatus
 804              	# 0 "" 2
 805              	#NO_APP
 806 0290 2338F4F0 		sd	a5,-240(s0)
 136:src/../h/riscv.hpp **** }
 807              		.loc 2 136 5 is_stmt 1
 136:src/../h/riscv.hpp **** }
 808              		.loc 2 136 12 is_stmt 0
 809 0294 033904F1 		ld	s2,-240(s0)
 810              	.LVL44:
 811              	.LBE184:
 812              	.LBE183:
 123:src/riscv.cpp ****                     TCB::running->setFinished(true);
 813              		.loc 1 123 21 is_stmt 1
 123:src/riscv.cpp ****                     TCB::running->setFinished(true);
 814              		.loc 1 123 43 is_stmt 0
 815 0298 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 815      83B70700 
 816 02a0 23B00700 		sd	zero,0(a5)
 124:src/riscv.cpp ****                     TCB::dispatch();
 817              		.loc 1 124 21 is_stmt 1
 124:src/riscv.cpp ****                     TCB::dispatch();
 818              		.loc 1 124 46 is_stmt 0
 819 02a4 97070000 		la	a5,_ZN3TCB7runningE
 819      83B70700 
 820 02ac 83B70700 		ld	a5,0(a5)
 821              	.LVL45:
 822              	.LBB185:
 823              	.LBB186:
  42:src/../h/../h/tcb.hpp **** 
 824              		.loc 4 42 36 is_stmt 1
  42:src/../h/../h/tcb.hpp **** 
 825              		.loc 4 42 45 is_stmt 0
 826 02b0 13071000 		li	a4,1
 827 02b4 2388E702 		sb	a4,48(a5)
 828              	.LVL46:
 829              	.LBE186:
 830              	.LBE185:
 125:src/riscv.cpp **** 
 831              		.loc 1 125 21 is_stmt 1
 125:src/riscv.cpp **** 
 832              		.loc 1 125 34 is_stmt 0
 833 02b8 97000000 		call	_ZN3TCB8dispatchEv@plt
 833      E7800000 
 834              	.LVL47:
 127:src/riscv.cpp **** 
 835              		.loc 1 127 21 is_stmt 1
 836              	.LBB187:
GAS LISTING /tmp/ccad2L7I.s 			page 29


 837              	.LBB188:
 140:src/../h/riscv.hpp **** }
 838              		.loc 2 140 5
 140:src/../h/riscv.hpp **** }
 839              		.loc 2 140 78 is_stmt 0
 840              	#APP
 841              	# 140 "src/../h/riscv.hpp" 1
 842              		csrw sstatus, s2
 843              	# 0 "" 2
 844              	.LVL48:
 845              	#NO_APP
 846              	.LBE188:
 847              	.LBE187:
 127:src/riscv.cpp **** 
 848              		.loc 1 127 41 is_stmt 1
 849              	.LBB189:
 850              	.LBB190:
 108:src/../h/riscv.hpp **** }
 851              		.loc 2 108 5
 108:src/../h/riscv.hpp **** }
 852              		.loc 2 108 66 is_stmt 0
 853              	#APP
 854              	# 108 "src/../h/riscv.hpp" 1
 109:src/../h/riscv.hpp **** 
 855              		csrw sepc, s1
 856              	# 0 "" 2
 857              		.loc 2 109 1
 858              	#NO_APP
 859 02c8 6FF09FF1 		j	.L16
 860              	.LVL49:
 861              	.L18:
 862              	.LBE190:
 863              	.LBE189:
 130:src/riscv.cpp **** 
 864              		.loc 1 130 17 is_stmt 1
 132:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 865              		.loc 1 132 21
 866              	.LBB191:
 867              	.LBB192:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 868              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 869              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 870              		.loc 2 103 65 is_stmt 0
 871              	#APP
 872              	# 103 "src/../h/riscv.hpp" 1
 873              		csrr a5, sepc
 874              	# 0 "" 2
 875              	#NO_APP
 876 02d0 2334F4F2 		sd	a5,-216(s0)
 104:src/../h/riscv.hpp **** }
 877              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 878              		.loc 2 104 12 is_stmt 0
 879 02d4 833484F2 		ld	s1,-216(s0)
 880              	.LBE192:
GAS LISTING /tmp/ccad2L7I.s 			page 30


 881              	.LBE191:
 132:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 882              		.loc 1 132 26
 883 02d8 93844400 		addi	s1,s1,4
 884              	.LVL50:
 132:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 885              		.loc 1 132 42 is_stmt 1
 886              	.LBB193:
 887              	.LBB194:
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 888              		.loc 2 134 5
 135:src/../h/riscv.hpp ****     return sstatus;
 889              		.loc 2 135 5
 135:src/../h/riscv.hpp ****     return sstatus;
 890              		.loc 2 135 77 is_stmt 0
 891              	#APP
 892              	# 135 "src/../h/riscv.hpp" 1
 893              		csrr a5, sstatus
 894              	# 0 "" 2
 895              	#NO_APP
 896 02e0 2330F4F2 		sd	a5,-224(s0)
 136:src/../h/riscv.hpp **** }
 897              		.loc 2 136 5 is_stmt 1
 136:src/../h/riscv.hpp **** }
 898              		.loc 2 136 12 is_stmt 0
 899 02e4 033904F2 		ld	s2,-224(s0)
 900              	.LVL51:
 901              	.LBE194:
 902              	.LBE193:
 133:src/riscv.cpp ****             //        printString("\nIde dispatch iz user\n");
 903              		.loc 1 133 21 is_stmt 1
 133:src/riscv.cpp ****             //        printString("\nIde dispatch iz user\n");
 904              		.loc 1 133 43 is_stmt 0
 905 02e8 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 905      83B70700 
 906 02f0 23B00700 		sd	zero,0(a5)
 135:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 907              		.loc 1 135 21 is_stmt 1
 135:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 908              		.loc 1 135 34 is_stmt 0
 909 02f4 97000000 		call	_ZN3TCB8dispatchEv@plt
 909      E7800000 
 910              	.LVL52:
 136:src/riscv.cpp **** 
 911              		.loc 1 136 21 is_stmt 1
 912              	.LBB195:
 913              	.LBB196:
 140:src/../h/riscv.hpp **** }
 914              		.loc 2 140 5
 140:src/../h/riscv.hpp **** }
 915              		.loc 2 140 78 is_stmt 0
 916              	#APP
 917              	# 140 "src/../h/riscv.hpp" 1
 918              		csrw sstatus, s2
 919              	# 0 "" 2
 920              	.LVL53:
 921              	#NO_APP
GAS LISTING /tmp/ccad2L7I.s 			page 31


 922              	.LBE196:
 923              	.LBE195:
 136:src/riscv.cpp **** 
 924              		.loc 1 136 41 is_stmt 1
 925              	.LBB197:
 926              	.LBB198:
 108:src/../h/riscv.hpp **** }
 927              		.loc 2 108 5
 108:src/../h/riscv.hpp **** }
 928              		.loc 2 108 66 is_stmt 0
 929              	#APP
 930              	# 108 "src/../h/riscv.hpp" 1
 109:src/../h/riscv.hpp **** 
 931              		csrw sepc, s1
 932              	# 0 "" 2
 933              		.loc 2 109 1
 934              	#NO_APP
 935 0304 6FF0DFED 		j	.L16
 936              	.LVL54:
 937              	.L17:
 938              	.LBE198:
 939              	.LBE197:
 140:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 11 * 8(fp)" : [par1] "=r" (tcb) ); // pop a1 fro
 940              		.loc 1 140 17 is_stmt 1
 141:src/riscv.cpp **** 
 941              		.loc 1 141 21
 141:src/riscv.cpp **** 
 942              		.loc 1 141 85 is_stmt 0
 943              	#APP
 944              	# 141 "src/riscv.cpp" 1
 945              		ld a0, 11 * 8(fp)
 946              	# 0 "" 2
 947              	.LVL55:
 143:src/riscv.cpp **** 
 948              		.loc 1 143 21 is_stmt 1
 143:src/riscv.cpp **** 
 949              		.loc 1 143 39 is_stmt 0
 950              	#NO_APP
 951 030c 93050500 		mv	a1,a0
 952 0310 97000000 		call	_ZN3TCB13putTCBinQueueEPS_@plt
 952      E7800000 
 953              	.LVL56:
 145:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 954              		.loc 1 145 21 is_stmt 1
 955              	.LBB199:
 956              	.LBB200:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 957              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 958              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 959              		.loc 2 103 65 is_stmt 0
 960              	#APP
 961              	# 103 "src/../h/riscv.hpp" 1
 962              		csrr a5, sepc
 963              	# 0 "" 2
 964              	#NO_APP
GAS LISTING /tmp/ccad2L7I.s 			page 32


 965 031c 2338F4F2 		sd	a5,-208(s0)
 104:src/../h/riscv.hpp **** }
 966              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 967              		.loc 2 104 12 is_stmt 0
 968 0320 833704F3 		ld	a5,-208(s0)
 969              	.LBE200:
 970              	.LBE199:
 145:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 971              		.loc 1 145 27
 972 0324 93874700 		addi	a5,a5,4
 973              	.LVL57:
 974              	.LBB201:
 975              	.LBB202:
 108:src/../h/riscv.hpp **** }
 976              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 977              		.loc 2 108 66 is_stmt 0
 978              	#APP
 979              	# 108 "src/../h/riscv.hpp" 1
 980              		csrw sepc, a5
 981              	# 0 "" 2
 982              	.LVL58:
 983              	#NO_APP
 984              	.LBE202:
 985              	.LBE201:
 146:src/riscv.cpp **** 
 986              		.loc 1 146 21 is_stmt 1
 146:src/riscv.cpp **** 
 987              		.loc 1 146 56 is_stmt 0
 988              	#APP
 989              	# 146 "src/riscv.cpp" 1
 148:src/riscv.cpp ****                 case SEM_OPEN:
 990              		csrc sip, 0x02
 991              	# 0 "" 2
 992              		.loc 1 148 21 is_stmt 1
 993              	#NO_APP
 994 0330 6FF01FEB 		j	.L16
 995              	.L14:
 170:src/riscv.cpp ****                     printString("\nUSAO U CHANGE MOD IZ USER\n");
 996              		.loc 1 170 17
 171:src/riscv.cpp ****                     Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 997              		.loc 1 171 21
 171:src/riscv.cpp ****                     Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 998              		.loc 1 171 32 is_stmt 0
 999 0334 17050000 		lla	a0,.LC0
 999      13050500 
 1000 033c 97000000 		call	_Z11printStringPKc@plt
 1000      E7800000 
 1001              	.LVL59:
 172:src/riscv.cpp **** 
 1002              		.loc 1 172 21 is_stmt 1
 1003              	.LBB203:
 1004              	.LBB204:
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
GAS LISTING /tmp/ccad2L7I.s 			page 33


 145:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r" (mask));
 146:src/../h/riscv.hpp **** }
 147:src/../h/riscv.hpp **** 
 148:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 149:src/../h/riscv.hpp ****     __asm__ volatile ("crsc sip, %[mask]" : : [mask] "r" (mask));
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** 
 153:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 154:src/../h/riscv.hpp ****     uint64 volatile sip;
 155:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r" (sip));
 156:src/../h/riscv.hpp ****     return sip;
 157:src/../h/riscv.hpp **** }
 158:src/../h/riscv.hpp **** 
 159:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 160:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r" (sip));
 161:src/../h/riscv.hpp **** }
 162:src/../h/riscv.hpp **** 
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 165:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r" (mask));
 166:src/../h/riscv.hpp **** }
 167:src/../h/riscv.hpp **** 
 168:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r" (mask));
 1005              		.loc 2 169 5
 1006              		.loc 2 169 69 is_stmt 0
 1007 0344 93070010 		li	a5,256
 1008              	#APP
 1009              	# 169 "src/../h/riscv.hpp" 1
 170              	}
 1010              		csrc sstatus, a5
 1011              	# 0 "" 2
 1012              	.LVL60:
 1013              	#NO_APP
 1014              	.LBE204:
 1015              	.LBE203:
 175:src/riscv.cpp ****                         __asm__ volatile ("csrc sip, 0x02");
 1016              		.loc 1 175 25 is_stmt 1
 1017              	.LBB205:
 1018              	.LBB206:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1019              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1020              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1021              		.loc 2 103 65 is_stmt 0
 1022              	#APP
 1023              	# 103 "src/../h/riscv.hpp" 1
 1024              		csrr a5, sepc
 1025              	# 0 "" 2
 1026              	#NO_APP
 1027 0350 233CF4F2 		sd	a5,-200(s0)
 104:src/../h/riscv.hpp **** }
 1028              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1029              		.loc 2 104 12 is_stmt 0
GAS LISTING /tmp/ccad2L7I.s 			page 34


 1030 0354 833784F3 		ld	a5,-200(s0)
 1031              	.LBE206:
 1032              	.LBE205:
 175:src/riscv.cpp ****                         __asm__ volatile ("csrc sip, 0x02");
 1033              		.loc 1 175 31
 1034 0358 93874700 		addi	a5,a5,4
 1035              	.LVL61:
 1036              	.LBB207:
 1037              	.LBB208:
 108:src/../h/riscv.hpp **** }
 1038              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 1039              		.loc 2 108 66 is_stmt 0
 1040              	#APP
 1041              	# 108 "src/../h/riscv.hpp" 1
 1042              		csrw sepc, a5
 1043              	# 0 "" 2
 1044              	.LVL62:
 1045              	#NO_APP
 1046              	.LBE208:
 1047              	.LBE207:
 176:src/riscv.cpp ****                     break;
 1048              		.loc 1 176 25 is_stmt 1
 176:src/riscv.cpp ****                     break;
 1049              		.loc 1 176 60 is_stmt 0
 1050              	#APP
 1051              	# 176 "src/riscv.cpp" 1
 177:src/riscv.cpp ****                 default:
 1052              		csrc sip, 0x02
 1053              	# 0 "" 2
 1054              		.loc 1 177 21 is_stmt 1
 1055              	#NO_APP
 1056 0364 6FF0DFE7 		j	.L16
 1057              	.L13:
 178:src/riscv.cpp ****                     // interrupt: no; cause code: environment call from S-mode(9) == YIELD
 1058              		.loc 1 178 17
 180:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 1059              		.loc 1 180 21
 1060              	.LBB209:
 1061              	.LBB210:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1062              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1063              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1064              		.loc 2 103 65 is_stmt 0
 1065              	#APP
 1066              	# 103 "src/../h/riscv.hpp" 1
 1067              		csrr a5, sepc
 1068              	# 0 "" 2
 1069              	#NO_APP
 1070 036c 2338F4F4 		sd	a5,-176(s0)
 104:src/../h/riscv.hpp **** }
 1071              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1072              		.loc 2 104 12 is_stmt 0
 1073 0370 833404F5 		ld	s1,-176(s0)
GAS LISTING /tmp/ccad2L7I.s 			page 35


 1074              	.LBE210:
 1075              	.LBE209:
 180:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 1076              		.loc 1 180 46
 1077 0374 93844400 		addi	s1,s1,4
 1078              	.LVL63:
 180:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 1079              		.loc 1 180 49 is_stmt 1
 1080              	.LBB211:
 1081              	.LBB212:
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 1082              		.loc 2 134 5
 135:src/../h/riscv.hpp ****     return sstatus;
 1083              		.loc 2 135 5
 135:src/../h/riscv.hpp ****     return sstatus;
 1084              		.loc 2 135 77 is_stmt 0
 1085              	#APP
 1086              	# 135 "src/../h/riscv.hpp" 1
 1087              		csrr a5, sstatus
 1088              	# 0 "" 2
 1089              	#NO_APP
 1090 037c 2334F4F4 		sd	a5,-184(s0)
 136:src/../h/riscv.hpp **** }
 1091              		.loc 2 136 5 is_stmt 1
 136:src/../h/riscv.hpp **** }
 1092              		.loc 2 136 12 is_stmt 0
 1093 0380 033984F4 		ld	s2,-184(s0)
 1094              	.LVL64:
 1095              	.LBE212:
 1096              	.LBE211:
 181:src/riscv.cpp ****                     TCB::dispatch();
 1097              		.loc 1 181 21 is_stmt 1
 181:src/riscv.cpp ****                     TCB::dispatch();
 1098              		.loc 1 181 43 is_stmt 0
 1099 0384 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 1099      83B70700 
 1100 038c 23B00700 		sd	zero,0(a5)
 182:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 1101              		.loc 1 182 21 is_stmt 1
 182:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 1102              		.loc 1 182 34 is_stmt 0
 1103 0390 97000000 		call	_ZN3TCB8dispatchEv@plt
 1103      E7800000 
 1104              	.LVL65:
 183:src/riscv.cpp **** 
 1105              		.loc 1 183 21 is_stmt 1
 1106              	.LBB213:
 1107              	.LBB214:
 140:src/../h/riscv.hpp **** }
 1108              		.loc 2 140 5
 140:src/../h/riscv.hpp **** }
 1109              		.loc 2 140 78 is_stmt 0
 1110              	#APP
 1111              	# 140 "src/../h/riscv.hpp" 1
 1112              		csrw sstatus, s2
 1113              	# 0 "" 2
 1114              	.LVL66:
GAS LISTING /tmp/ccad2L7I.s 			page 36


 1115              	#NO_APP
 1116              	.LBE214:
 1117              	.LBE213:
 183:src/riscv.cpp **** 
 1118              		.loc 1 183 41 is_stmt 1
 1119              	.LBB215:
 1120              	.LBB216:
 108:src/../h/riscv.hpp **** }
 1121              		.loc 2 108 5
 108:src/../h/riscv.hpp **** }
 1122              		.loc 2 108 66 is_stmt 0
 1123              	#APP
 1124              	# 108 "src/../h/riscv.hpp" 1
 1125              		csrw sepc, s1
 1126              	# 0 "" 2
 1127              	.LVL67:
 1128              	#NO_APP
 1129              	.LBE216:
 1130              	.LBE215:
 185:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1131              		.loc 1 185 21 is_stmt 1
 1132              	.LBB217:
 1133              	.LBB218:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1134              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1135              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1136              		.loc 2 103 65 is_stmt 0
 1137              	#APP
 1138              	# 103 "src/../h/riscv.hpp" 1
 1139              		csrr a5, sepc
 1140              	# 0 "" 2
 1141              	#NO_APP
 1142 03a4 2330F4F4 		sd	a5,-192(s0)
 104:src/../h/riscv.hpp **** }
 1143              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1144              		.loc 2 104 12 is_stmt 0
 1145 03a8 833704F4 		ld	a5,-192(s0)
 1146              	.LBE218:
 1147              	.LBE217:
 185:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1148              		.loc 1 185 27
 1149 03ac 93874700 		addi	a5,a5,4
 1150              	.LVL68:
 1151              	.LBB219:
 1152              	.LBB220:
 108:src/../h/riscv.hpp **** }
 1153              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 1154              		.loc 2 108 66 is_stmt 0
 1155              	#APP
 1156              	# 108 "src/../h/riscv.hpp" 1
 1157              		csrw sepc, a5
 1158              	# 0 "" 2
 1159              	.LVL69:
GAS LISTING /tmp/ccad2L7I.s 			page 37


 1160              	#NO_APP
 1161              	.LBE220:
 1162              	.LBE219:
 186:src/riscv.cpp **** 
 1163              		.loc 1 186 21 is_stmt 1
 186:src/riscv.cpp **** 
 1164              		.loc 1 186 56 is_stmt 0
 1165              	#APP
 1166              	# 186 "src/riscv.cpp" 1
 188:src/riscv.cpp **** 
 1167              		csrc sip, 0x02
 1168              	# 0 "" 2
 1169              		.loc 1 188 21 is_stmt 1
 1170              	#NO_APP
 1171 03b8 6FF09FE2 		j	.L16
 1172              	.LVL70:
 1173              	.L32:
 1174              	.LBE225:
 1175              	.LBB226:
 203:src/riscv.cpp ****                    // printString("\nUsao u MEM_ALLOC\n");
 1176              		.loc 1 203 17
 206:src/riscv.cpp **** 
 1177              		.loc 1 206 21
 206:src/riscv.cpp **** 
 1178              		.loc 1 206 86 is_stmt 0
 1179              	#APP
 1180              	# 206 "src/riscv.cpp" 1
 1181              		ld a1, 11 * 8(fp)
 1182              	# 0 "" 2
 1183              	.LVL71:
 212:src/riscv.cpp **** 
 1184              		.loc 1 212 21 is_stmt 1
 212:src/riscv.cpp **** 
 1185              		.loc 1 212 47 is_stmt 0
 1186              	#NO_APP
 1187 03c0 17050000 		lla	a0,_ZZN15MemoryAllocator11getInstanceEvE8instance
 1187      13050500 
 1188 03c8 97000000 		call	_ZN15MemoryAllocator8myMallocEm@plt
 1188      E7800000 
 1189              	.LVL72:
 218:src/riscv.cpp **** 
 1190              		.loc 1 218 21 is_stmt 1
 218:src/riscv.cpp **** 
 1191              		.loc 1 218 80 is_stmt 0
 1192              	#APP
 1193              	# 218 "src/riscv.cpp" 1
 220:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1194              		sd a0, 10*8(fp)
 1195              	# 0 "" 2
 1196              		.loc 1 220 21 is_stmt 1
 1197              	#NO_APP
 1198              	.LBB227:
 1199              	.LBB228:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1200              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1201              		.loc 2 103 5
GAS LISTING /tmp/ccad2L7I.s 			page 38


 103:src/../h/riscv.hpp ****     return sepc;
 1202              		.loc 2 103 65 is_stmt 0
 1203              	#APP
 1204              	# 103 "src/../h/riscv.hpp" 1
 1205              		csrr a5, sepc
 1206              	# 0 "" 2
 1207              	#NO_APP
 1208 03d8 2330F4F6 		sd	a5,-160(s0)
 104:src/../h/riscv.hpp **** }
 1209              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1210              		.loc 2 104 12 is_stmt 0
 1211 03dc 833704F6 		ld	a5,-160(s0)
 1212              	.LBE228:
 1213              	.LBE227:
 220:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1214              		.loc 1 220 27
 1215 03e0 93874700 		addi	a5,a5,4
 1216              	.LVL73:
 1217              	.LBB229:
 1218              	.LBB230:
 108:src/../h/riscv.hpp **** }
 1219              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 1220              		.loc 2 108 66 is_stmt 0
 1221              	#APP
 1222              	# 108 "src/../h/riscv.hpp" 1
 1223              		csrw sepc, a5
 1224              	# 0 "" 2
 1225              	.LVL74:
 1226              	#NO_APP
 1227              	.LBE230:
 1228              	.LBE229:
 221:src/riscv.cpp **** 
 1229              		.loc 1 221 21 is_stmt 1
 221:src/riscv.cpp **** 
 1230              		.loc 1 221 56 is_stmt 0
 1231              	#APP
 1232              	# 221 "src/riscv.cpp" 1
 224:src/riscv.cpp **** 
 1233              		csrc sip, 0x02
 1234              	# 0 "" 2
 1235              		.loc 1 224 21 is_stmt 1
 1236              	#NO_APP
 1237 03ec 6FF0DFD4 		j	.L3
 1238              	.LVL75:
 1239              	.L31:
 226:src/riscv.cpp **** 
 1240              		.loc 1 226 17
 228:src/riscv.cpp **** 
 1241              		.loc 1 228 21
 228:src/riscv.cpp **** 
 1242              		.loc 1 228 84 is_stmt 0
 1243              	#APP
 1244              	# 228 "src/riscv.cpp" 1
 1245              		ld a1, 11 * 8(fp)
 1246              	# 0 "" 2
GAS LISTING /tmp/ccad2L7I.s 			page 39


 1247              	.LVL76:
 230:src/riscv.cpp **** 
 1248              		.loc 1 230 21 is_stmt 1
 230:src/riscv.cpp **** 
 1249              		.loc 1 230 38 is_stmt 0
 1250              	#NO_APP
 1251 03f4 17050000 		lla	a0,_ZZN15MemoryAllocator11getInstanceEvE8instance
 1251      13050500 
 1252 03fc 97000000 		call	_ZN15MemoryAllocator6myFreeEPv@plt
 1252      E7800000 
 1253              	.LVL77:
 232:src/riscv.cpp **** 
 1254              		.loc 1 232 21 is_stmt 1
 232:src/riscv.cpp **** 
 1255              		.loc 1 232 80 is_stmt 0
 1256              	#APP
 1257              	# 232 "src/riscv.cpp" 1
 234:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1258              		sd a0, 10*8(fp)
 1259              	# 0 "" 2
 1260              		.loc 1 234 21 is_stmt 1
 1261              	#NO_APP
 1262              	.LBB231:
 1263              	.LBB232:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1264              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1265              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1266              		.loc 2 103 65 is_stmt 0
 1267              	#APP
 1268              	# 103 "src/../h/riscv.hpp" 1
 1269              		csrr a5, sepc
 1270              	# 0 "" 2
 1271              	#NO_APP
 1272 040c 2334F4F6 		sd	a5,-152(s0)
 104:src/../h/riscv.hpp **** }
 1273              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1274              		.loc 2 104 12 is_stmt 0
 1275 0410 833784F6 		ld	a5,-152(s0)
 1276              	.LBE232:
 1277              	.LBE231:
 234:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1278              		.loc 1 234 27
 1279 0414 93874700 		addi	a5,a5,4
 1280              	.LVL78:
 1281              	.LBB233:
 1282              	.LBB234:
 108:src/../h/riscv.hpp **** }
 1283              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 1284              		.loc 2 108 66 is_stmt 0
 1285              	#APP
 1286              	# 108 "src/../h/riscv.hpp" 1
 1287              		csrw sepc, a5
 1288              	# 0 "" 2
GAS LISTING /tmp/ccad2L7I.s 			page 40


 1289              	.LVL79:
 1290              	#NO_APP
 1291              	.LBE234:
 1292              	.LBE233:
 235:src/riscv.cpp **** 
 1293              		.loc 1 235 21 is_stmt 1
 235:src/riscv.cpp **** 
 1294              		.loc 1 235 56 is_stmt 0
 1295              	#APP
 1296              	# 235 "src/riscv.cpp" 1
 237:src/riscv.cpp ****                 case THREAD_CREATE:
 1297              		csrc sip, 0x02
 1298              	# 0 "" 2
 1299              		.loc 1 237 21 is_stmt 1
 1300              	#NO_APP
 1301 0420 6FF09FD1 		j	.L3
 1302              	.LVL80:
 1303              	.L30:
 238:src/riscv.cpp ****                   //  printString("Usao u THREAD_CREATE");
 1304              		.loc 1 238 17
 241:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 12 * 8(fp)" : [par1] "=r" (body) ); // pop a2 fr
 1305              		.loc 1 241 21
 241:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 12 * 8(fp)" : [par1] "=r" (body) ); // pop a2 fr
 1306              		.loc 1 241 88 is_stmt 0
 1307              	#APP
 1308              	# 241 "src/riscv.cpp" 1
 1309              		ld s1, 11 * 8(fp)
 1310              	# 0 "" 2
 1311              	.LVL81:
 242:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 13 * 8(fp)" : [par1] "=r" (arg) ); // pop a3 fro
 1312              		.loc 1 242 21 is_stmt 1
 242:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 13 * 8(fp)" : [par1] "=r" (arg) ); // pop a3 fro
 1313              		.loc 1 242 86 is_stmt 0
 1314              	# 242 "src/riscv.cpp" 1
 1315              		ld a0, 12 * 8(fp)
 1316              	# 0 "" 2
 1317              	.LVL82:
 243:src/riscv.cpp ****                     __asm__ volatile ("ld %[stack_space], 14 * 8(fp)" : [stack_space] "=r" (stack_s
 1318              		.loc 1 243 21 is_stmt 1
 243:src/riscv.cpp ****                     __asm__ volatile ("ld %[stack_space], 14 * 8(fp)" : [stack_space] "=r" (stack_s
 1319              		.loc 1 243 85 is_stmt 0
 1320              	# 243 "src/riscv.cpp" 1
 1321              		ld a1, 13 * 8(fp)
 1322              	# 0 "" 2
 1323              	.LVL83:
 244:src/riscv.cpp **** 
 1324              		.loc 1 244 21 is_stmt 1
 244:src/riscv.cpp **** 
 1325              		.loc 1 244 107 is_stmt 0
 1326              	# 244 "src/riscv.cpp" 1
 1327              		ld a2, 14 * 8(fp)
 1328              	# 0 "" 2
 1329              	.LVL84:
 246:src/riscv.cpp ****                     if(*handle) ret =  0;
 1330              		.loc 1 246 21 is_stmt 1
 246:src/riscv.cpp ****                     if(*handle) ret =  0;
 1331              		.loc 1 246 48 is_stmt 0
GAS LISTING /tmp/ccad2L7I.s 			page 41


 1332              	#NO_APP
 1333 0434 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_S0_@plt
 1333      E7800000 
 1334              	.LVL85:
 246:src/riscv.cpp ****                     if(*handle) ret =  0;
 1335              		.loc 1 246 29
 1336 043c 23B0A400 		sd	a0,0(s1)
 247:src/riscv.cpp ****                     else ret = -3;
 1337              		.loc 1 247 21 is_stmt 1
 1338 0440 63040502 		beqz	a0,.L35
 247:src/riscv.cpp ****                     else ret = -3;
 1339              		.loc 1 247 37 is_stmt 0
 1340 0444 93070000 		li	a5,0
 1341              	.L33:
 1342              	.LVL86:
 253:src/riscv.cpp **** 
 1343              		.loc 1 253 21 is_stmt 1
 253:src/riscv.cpp **** 
 1344              		.loc 1 253 80 is_stmt 0
 1345              	#APP
 1346              	# 253 "src/riscv.cpp" 1
 255:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1347              		sd a5, 10*8(fp)
 1348              	# 0 "" 2
 1349              		.loc 1 255 21 is_stmt 1
 1350              	#NO_APP
 1351              	.LBB235:
 1352              	.LBB236:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1353              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1354              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1355              		.loc 2 103 65 is_stmt 0
 1356              	#APP
 1357              	# 103 "src/../h/riscv.hpp" 1
 1358              		csrr a5, sepc
 1359              	# 0 "" 2
 1360              	.LVL87:
 1361              	#NO_APP
 1362 0450 2338F4F6 		sd	a5,-144(s0)
 104:src/../h/riscv.hpp **** }
 1363              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1364              		.loc 2 104 12 is_stmt 0
 1365 0454 833704F7 		ld	a5,-144(s0)
 1366              	.LBE236:
 1367              	.LBE235:
 255:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1368              		.loc 1 255 27
 1369 0458 93874700 		addi	a5,a5,4
 1370              	.LVL88:
 1371              	.LBB237:
 1372              	.LBB238:
 108:src/../h/riscv.hpp **** }
 1373              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccad2L7I.s 			page 42


 1374              		.loc 2 108 66 is_stmt 0
 1375              	#APP
 1376              	# 108 "src/../h/riscv.hpp" 1
 1377              		csrw sepc, a5
 1378              	# 0 "" 2
 1379              	.LVL89:
 1380              	#NO_APP
 1381              	.LBE238:
 1382              	.LBE237:
 256:src/riscv.cpp **** 
 1383              		.loc 1 256 21 is_stmt 1
 256:src/riscv.cpp **** 
 1384              		.loc 1 256 56 is_stmt 0
 1385              	#APP
 1386              	# 256 "src/riscv.cpp" 1
 260:src/riscv.cpp ****                 case THREAD_EXIT:
 1387              		csrc sip, 0x02
 1388              	# 0 "" 2
 1389              		.loc 1 260 21 is_stmt 1
 1390              	#NO_APP
 1391 0464 6FF05FCD 		j	.L3
 1392              	.L35:
 248:src/riscv.cpp **** 
 1393              		.loc 1 248 30 is_stmt 0
 1394 0468 9307D0FF 		li	a5,-3
 1395 046c 6FF0DFFD 		j	.L33
 1396              	.LVL90:
 1397              	.L29:
 261:src/riscv.cpp **** 
 1398              		.loc 1 261 17 is_stmt 1
 263:src/riscv.cpp **** 
 1399              		.loc 1 263 21
 1400              	.LBB239:
 1401              	.LBB240:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1402              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1403              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1404              		.loc 2 103 65 is_stmt 0
 1405              	#APP
 1406              	# 103 "src/../h/riscv.hpp" 1
 1407              		csrr a5, sepc
 1408              	# 0 "" 2
 1409              	#NO_APP
 1410 0474 2330F4F8 		sd	a5,-128(s0)
 104:src/../h/riscv.hpp **** }
 1411              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1412              		.loc 2 104 12 is_stmt 0
 1413 0478 833404F8 		ld	s1,-128(s0)
 1414              	.LBE240:
 1415              	.LBE239:
 263:src/riscv.cpp **** 
 1416              		.loc 1 263 26
 1417 047c 93844400 		addi	s1,s1,4
 1418              	.LVL91:
GAS LISTING /tmp/ccad2L7I.s 			page 43


 263:src/riscv.cpp **** 
 1419              		.loc 1 263 42 is_stmt 1
 1420              	.LBB241:
 1421              	.LBB242:
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 1422              		.loc 2 134 5
 135:src/../h/riscv.hpp ****     return sstatus;
 1423              		.loc 2 135 5
 135:src/../h/riscv.hpp ****     return sstatus;
 1424              		.loc 2 135 77 is_stmt 0
 1425              	#APP
 1426              	# 135 "src/../h/riscv.hpp" 1
 1427              		csrr a5, sstatus
 1428              	# 0 "" 2
 1429              	#NO_APP
 1430 0484 233CF4F6 		sd	a5,-136(s0)
 136:src/../h/riscv.hpp **** }
 1431              		.loc 2 136 5 is_stmt 1
 136:src/../h/riscv.hpp **** }
 1432              		.loc 2 136 12 is_stmt 0
 1433 0488 033984F7 		ld	s2,-136(s0)
 1434              	.LVL92:
 1435              	.LBE242:
 1436              	.LBE241:
 265:src/riscv.cpp ****                     TCB::running->setFinished(true);
 1437              		.loc 1 265 21 is_stmt 1
 265:src/riscv.cpp ****                     TCB::running->setFinished(true);
 1438              		.loc 1 265 43 is_stmt 0
 1439 048c 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 1439      83B70700 
 1440 0494 23B00700 		sd	zero,0(a5)
 266:src/riscv.cpp ****                     TCB::dispatch();
 1441              		.loc 1 266 21 is_stmt 1
 266:src/riscv.cpp ****                     TCB::dispatch();
 1442              		.loc 1 266 46 is_stmt 0
 1443 0498 97070000 		la	a5,_ZN3TCB7runningE
 1443      83B70700 
 1444 04a0 83B70700 		ld	a5,0(a5)
 1445              	.LVL93:
 1446              	.LBB243:
 1447              	.LBB244:
  42:src/../h/../h/tcb.hpp **** 
 1448              		.loc 4 42 36 is_stmt 1
  42:src/../h/../h/tcb.hpp **** 
 1449              		.loc 4 42 45 is_stmt 0
 1450 04a4 13071000 		li	a4,1
 1451 04a8 2388E702 		sb	a4,48(a5)
 1452              	.LVL94:
 1453              	.LBE244:
 1454              	.LBE243:
 267:src/riscv.cpp **** 
 1455              		.loc 1 267 21 is_stmt 1
 267:src/riscv.cpp **** 
 1456              		.loc 1 267 34 is_stmt 0
 1457 04ac 97000000 		call	_ZN3TCB8dispatchEv@plt
 1457      E7800000 
 1458              	.LVL95:
GAS LISTING /tmp/ccad2L7I.s 			page 44


 269:src/riscv.cpp **** 
 1459              		.loc 1 269 21 is_stmt 1
 1460              	.LBB245:
 1461              	.LBB246:
 140:src/../h/riscv.hpp **** }
 1462              		.loc 2 140 5
 140:src/../h/riscv.hpp **** }
 1463              		.loc 2 140 78 is_stmt 0
 1464              	#APP
 1465              	# 140 "src/../h/riscv.hpp" 1
 1466              		csrw sstatus, s2
 1467              	# 0 "" 2
 1468              	.LVL96:
 1469              	#NO_APP
 1470              	.LBE246:
 1471              	.LBE245:
 269:src/riscv.cpp **** 
 1472              		.loc 1 269 41 is_stmt 1
 1473              	.LBB247:
 1474              	.LBB248:
 108:src/../h/riscv.hpp **** }
 1475              		.loc 2 108 5
 108:src/../h/riscv.hpp **** }
 1476              		.loc 2 108 66 is_stmt 0
 1477              	#APP
 1478              	# 108 "src/../h/riscv.hpp" 1
 109:src/../h/riscv.hpp **** 
 1479              		csrw sepc, s1
 1480              	# 0 "" 2
 1481              		.loc 2 109 1
 1482              	#NO_APP
 1483 04bc 6FF0DFC7 		j	.L3
 1484              	.LVL97:
 1485              	.L28:
 1486              	.LBE248:
 1487              	.LBE247:
 272:src/riscv.cpp **** 
 1488              		.loc 1 272 17 is_stmt 1
 274:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 1489              		.loc 1 274 21
 1490              	.LBB249:
 1491              	.LBB250:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1492              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1493              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1494              		.loc 2 103 65 is_stmt 0
 1495              	#APP
 1496              	# 103 "src/../h/riscv.hpp" 1
 1497              		csrr a5, sepc
 1498              	# 0 "" 2
 1499              	#NO_APP
 1500 04c4 2338F4F8 		sd	a5,-112(s0)
 104:src/../h/riscv.hpp **** }
 1501              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccad2L7I.s 			page 45


 1502              		.loc 2 104 12 is_stmt 0
 1503 04c8 833404F9 		ld	s1,-112(s0)
 1504              	.LBE250:
 1505              	.LBE249:
 274:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 1506              		.loc 1 274 26
 1507 04cc 93844400 		addi	s1,s1,4
 1508              	.LVL98:
 274:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 1509              		.loc 1 274 42 is_stmt 1
 1510              	.LBB251:
 1511              	.LBB252:
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 1512              		.loc 2 134 5
 135:src/../h/riscv.hpp ****     return sstatus;
 1513              		.loc 2 135 5
 135:src/../h/riscv.hpp ****     return sstatus;
 1514              		.loc 2 135 77 is_stmt 0
 1515              	#APP
 1516              	# 135 "src/../h/riscv.hpp" 1
 1517              		csrr a5, sstatus
 1518              	# 0 "" 2
 1519              	#NO_APP
 1520 04d4 2334F4F8 		sd	a5,-120(s0)
 136:src/../h/riscv.hpp **** }
 1521              		.loc 2 136 5 is_stmt 1
 136:src/../h/riscv.hpp **** }
 1522              		.loc 2 136 12 is_stmt 0
 1523 04d8 033984F8 		ld	s2,-120(s0)
 1524              	.LVL99:
 1525              	.LBE252:
 1526              	.LBE251:
 275:src/riscv.cpp ****                     TCB::dispatch();
 1527              		.loc 1 275 21 is_stmt 1
 275:src/riscv.cpp ****                     TCB::dispatch();
 1528              		.loc 1 275 43 is_stmt 0
 1529 04dc 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 1529      83B70700 
 1530 04e4 23B00700 		sd	zero,0(a5)
 276:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 1531              		.loc 1 276 21 is_stmt 1
 276:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 1532              		.loc 1 276 34 is_stmt 0
 1533 04e8 97000000 		call	_ZN3TCB8dispatchEv@plt
 1533      E7800000 
 1534              	.LVL100:
 277:src/riscv.cpp **** 
 1535              		.loc 1 277 21 is_stmt 1
 1536              	.LBB253:
 1537              	.LBB254:
 140:src/../h/riscv.hpp **** }
 1538              		.loc 2 140 5
 140:src/../h/riscv.hpp **** }
 1539              		.loc 2 140 78 is_stmt 0
 1540              	#APP
 1541              	# 140 "src/../h/riscv.hpp" 1
 1542              		csrw sstatus, s2
GAS LISTING /tmp/ccad2L7I.s 			page 46


 1543              	# 0 "" 2
 1544              	.LVL101:
 1545              	#NO_APP
 1546              	.LBE254:
 1547              	.LBE253:
 277:src/riscv.cpp **** 
 1548              		.loc 1 277 41 is_stmt 1
 1549              	.LBB255:
 1550              	.LBB256:
 108:src/../h/riscv.hpp **** }
 1551              		.loc 2 108 5
 108:src/../h/riscv.hpp **** }
 1552              		.loc 2 108 66 is_stmt 0
 1553              	#APP
 1554              	# 108 "src/../h/riscv.hpp" 1
 109:src/../h/riscv.hpp **** 
 1555              		csrw sepc, s1
 1556              	# 0 "" 2
 1557              		.loc 2 109 1
 1558              	#NO_APP
 1559 04f8 6FF01FC4 		j	.L3
 1560              	.LVL102:
 1561              	.L27:
 1562              	.LBE256:
 1563              	.LBE255:
 281:src/riscv.cpp ****                     __asm__ volatile ("ld %[par1], 11 * 8(fp)" : [par1] "=r" (tcb) ); // pop a1 fro
 1564              		.loc 1 281 17 is_stmt 1
 282:src/riscv.cpp **** 
 1565              		.loc 1 282 21
 282:src/riscv.cpp **** 
 1566              		.loc 1 282 85 is_stmt 0
 1567              	#APP
 1568              	# 282 "src/riscv.cpp" 1
 1569              		ld a0, 11 * 8(fp)
 1570              	# 0 "" 2
 1571              	.LVL103:
 284:src/riscv.cpp **** 
 1572              		.loc 1 284 21 is_stmt 1
 284:src/riscv.cpp **** 
 1573              		.loc 1 284 39 is_stmt 0
 1574              	#NO_APP
 1575 0500 93050500 		mv	a1,a0
 1576 0504 97000000 		call	_ZN3TCB13putTCBinQueueEPS_@plt
 1576      E7800000 
 1577              	.LVL104:
 286:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1578              		.loc 1 286 21 is_stmt 1
 1579              	.LBB257:
 1580              	.LBB258:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1581              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1582              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1583              		.loc 2 103 65 is_stmt 0
 1584              	#APP
 1585              	# 103 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/ccad2L7I.s 			page 47


 1586              		csrr a5, sepc
 1587              	# 0 "" 2
 1588              	#NO_APP
 1589 0510 233CF4F8 		sd	a5,-104(s0)
 104:src/../h/riscv.hpp **** }
 1590              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1591              		.loc 2 104 12 is_stmt 0
 1592 0514 833784F9 		ld	a5,-104(s0)
 1593              	.LBE258:
 1594              	.LBE257:
 286:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1595              		.loc 1 286 27
 1596 0518 93874700 		addi	a5,a5,4
 1597              	.LVL105:
 1598              	.LBB259:
 1599              	.LBB260:
 108:src/../h/riscv.hpp **** }
 1600              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 1601              		.loc 2 108 66 is_stmt 0
 1602              	#APP
 1603              	# 108 "src/../h/riscv.hpp" 1
 1604              		csrw sepc, a5
 1605              	# 0 "" 2
 1606              	.LVL106:
 1607              	#NO_APP
 1608              	.LBE260:
 1609              	.LBE259:
 287:src/riscv.cpp **** 
 1610              		.loc 1 287 21 is_stmt 1
 287:src/riscv.cpp **** 
 1611              		.loc 1 287 56 is_stmt 0
 1612              	#APP
 1613              	# 287 "src/riscv.cpp" 1
 289:src/riscv.cpp ****                 case SEM_OPEN:
 1614              		csrc sip, 0x02
 1615              	# 0 "" 2
 1616              		.loc 1 289 21 is_stmt 1
 1617              	#NO_APP
 1618 0524 6FF05FC1 		j	.L3
 1619              	.L25:
 311:src/riscv.cpp ****                     Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 1620              		.loc 1 311 17
 312:src/riscv.cpp ****                     printString("\nUSAO U CHANGE MOD IZ SISTEMSKOG\n");
 1621              		.loc 1 312 21
 1622              	.LVL107:
 1623              	.LBB261:
 1624              	.LBB262:
 169:src/../h/riscv.hpp **** }
 1625              		.loc 2 169 5
 169:src/../h/riscv.hpp **** }
 1626              		.loc 2 169 69 is_stmt 0
 1627 0528 93070010 		li	a5,256
 1628              	#APP
 1629              	# 169 "src/../h/riscv.hpp" 1
 1630              		csrc sstatus, a5
GAS LISTING /tmp/ccad2L7I.s 			page 48


 1631              	# 0 "" 2
 1632              	.LVL108:
 1633              	#NO_APP
 1634              	.LBE262:
 1635              	.LBE261:
 313:src/riscv.cpp **** 
 1636              		.loc 1 313 21 is_stmt 1
 313:src/riscv.cpp **** 
 1637              		.loc 1 313 32 is_stmt 0
 1638 0530 17050000 		lla	a0,.LC1
 1638      13050500 
 1639 0538 97000000 		call	_Z11printStringPKc@plt
 1639      E7800000 
 1640              	.LVL109:
 315:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1641              		.loc 1 315 21 is_stmt 1
 1642              	.LBB263:
 1643              	.LBB264:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1644              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1645              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1646              		.loc 2 103 65 is_stmt 0
 1647              	#APP
 1648              	# 103 "src/../h/riscv.hpp" 1
 1649              		csrr a5, sepc
 1650              	# 0 "" 2
 1651              	#NO_APP
 1652 0544 2330F4FA 		sd	a5,-96(s0)
 104:src/../h/riscv.hpp **** }
 1653              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1654              		.loc 2 104 12 is_stmt 0
 1655 0548 833704FA 		ld	a5,-96(s0)
 1656              	.LBE264:
 1657              	.LBE263:
 315:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1658              		.loc 1 315 27
 1659 054c 93874700 		addi	a5,a5,4
 1660              	.LVL110:
 1661              	.LBB265:
 1662              	.LBB266:
 108:src/../h/riscv.hpp **** }
 1663              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 1664              		.loc 2 108 66 is_stmt 0
 1665              	#APP
 1666              	# 108 "src/../h/riscv.hpp" 1
 1667              		csrw sepc, a5
 1668              	# 0 "" 2
 1669              	.LVL111:
 1670              	#NO_APP
 1671              	.LBE266:
 1672              	.LBE265:
 316:src/riscv.cpp ****                     break;
 1673              		.loc 1 316 21 is_stmt 1
GAS LISTING /tmp/ccad2L7I.s 			page 49


 316:src/riscv.cpp ****                     break;
 1674              		.loc 1 316 56 is_stmt 0
 1675              	#APP
 1676              	# 316 "src/riscv.cpp" 1
 317:src/riscv.cpp ****                 default:
 1677              		csrc sip, 0x02
 1678              	# 0 "" 2
 1679              		.loc 1 317 21 is_stmt 1
 1680              	#NO_APP
 1681 0558 6FF01FBE 		j	.L3
 1682              	.L24:
 318:src/riscv.cpp ****                     // interrupt: no; cause code: environment call from S-mode(9)
 1683              		.loc 1 318 17
 320:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 1684              		.loc 1 320 21
 1685              	.LBB267:
 1686              	.LBB268:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1687              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1688              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1689              		.loc 2 103 65 is_stmt 0
 1690              	#APP
 1691              	# 103 "src/../h/riscv.hpp" 1
 1692              		csrr a5, sepc
 1693              	# 0 "" 2
 1694              	#NO_APP
 1695 0560 233CF4FA 		sd	a5,-72(s0)
 104:src/../h/riscv.hpp **** }
 1696              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1697              		.loc 2 104 12 is_stmt 0
 1698 0564 833484FB 		ld	s1,-72(s0)
 1699              	.LBE268:
 1700              	.LBE267:
 320:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 1701              		.loc 1 320 46
 1702 0568 93844400 		addi	s1,s1,4
 1703              	.LVL112:
 320:src/riscv.cpp ****                     TCB::timeSliceCounter = 0;
 1704              		.loc 1 320 49 is_stmt 1
 1705              	.LBB269:
 1706              	.LBB270:
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 1707              		.loc 2 134 5
 135:src/../h/riscv.hpp ****     return sstatus;
 1708              		.loc 2 135 5
 135:src/../h/riscv.hpp ****     return sstatus;
 1709              		.loc 2 135 77 is_stmt 0
 1710              	#APP
 1711              	# 135 "src/../h/riscv.hpp" 1
 1712              		csrr a5, sstatus
 1713              	# 0 "" 2
 1714              	#NO_APP
 1715 0570 2338F4FA 		sd	a5,-80(s0)
 136:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccad2L7I.s 			page 50


 1716              		.loc 2 136 5 is_stmt 1
 136:src/../h/riscv.hpp **** }
 1717              		.loc 2 136 12 is_stmt 0
 1718 0574 033904FB 		ld	s2,-80(s0)
 1719              	.LVL113:
 1720              	.LBE270:
 1721              	.LBE269:
 321:src/riscv.cpp ****                     TCB::dispatch();
 1722              		.loc 1 321 21 is_stmt 1
 321:src/riscv.cpp ****                     TCB::dispatch();
 1723              		.loc 1 321 43 is_stmt 0
 1724 0578 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 1724      83B70700 
 1725 0580 23B00700 		sd	zero,0(a5)
 322:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 1726              		.loc 1 322 21 is_stmt 1
 322:src/riscv.cpp ****                     w_sstatus(sstatus); w_sepc(sepc);
 1727              		.loc 1 322 34 is_stmt 0
 1728 0584 97000000 		call	_ZN3TCB8dispatchEv@plt
 1728      E7800000 
 1729              	.LVL114:
 323:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
 1730              		.loc 1 323 21 is_stmt 1
 1731              	.LBB271:
 1732              	.LBB272:
 140:src/../h/riscv.hpp **** }
 1733              		.loc 2 140 5
 140:src/../h/riscv.hpp **** }
 1734              		.loc 2 140 78 is_stmt 0
 1735              	#APP
 1736              	# 140 "src/../h/riscv.hpp" 1
 1737              		csrw sstatus, s2
 1738              	# 0 "" 2
 1739              	.LVL115:
 1740              	#NO_APP
 1741              	.LBE272:
 1742              	.LBE271:
 323:src/riscv.cpp ****                     w_sepc(r_sepc() + 4UL);
 1743              		.loc 1 323 41 is_stmt 1
 1744              	.LBB273:
 1745              	.LBB274:
 108:src/../h/riscv.hpp **** }
 1746              		.loc 2 108 5
 108:src/../h/riscv.hpp **** }
 1747              		.loc 2 108 66 is_stmt 0
 1748              	#APP
 1749              	# 108 "src/../h/riscv.hpp" 1
 1750              		csrw sepc, s1
 1751              	# 0 "" 2
 1752              	.LVL116:
 1753              	#NO_APP
 1754              	.LBE274:
 1755              	.LBE273:
 324:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1756              		.loc 1 324 21 is_stmt 1
 1757              	.LBB275:
 1758              	.LBB276:
GAS LISTING /tmp/ccad2L7I.s 			page 51


 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1759              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1760              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1761              		.loc 2 103 65 is_stmt 0
 1762              	#APP
 1763              	# 103 "src/../h/riscv.hpp" 1
 1764              		csrr a5, sepc
 1765              	# 0 "" 2
 1766              	#NO_APP
 1767 0598 2334F4FA 		sd	a5,-88(s0)
 104:src/../h/riscv.hpp **** }
 1768              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1769              		.loc 2 104 12 is_stmt 0
 1770 059c 833784FA 		ld	a5,-88(s0)
 1771              	.LBE276:
 1772              	.LBE275:
 324:src/riscv.cpp ****                     __asm__ volatile ("csrc sip, 0x02");
 1773              		.loc 1 324 27
 1774 05a0 93874700 		addi	a5,a5,4
 1775              	.LVL117:
 1776              	.LBB277:
 1777              	.LBB278:
 108:src/../h/riscv.hpp **** }
 1778              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 1779              		.loc 2 108 66 is_stmt 0
 1780              	#APP
 1781              	# 108 "src/../h/riscv.hpp" 1
 1782              		csrw sepc, a5
 1783              	# 0 "" 2
 1784              	.LVL118:
 1785              	#NO_APP
 1786              	.LBE278:
 1787              	.LBE277:
 325:src/riscv.cpp **** 
 1788              		.loc 1 325 21 is_stmt 1
 325:src/riscv.cpp **** 
 1789              		.loc 1 325 56 is_stmt 0
 1790              	#APP
 1791              	# 325 "src/riscv.cpp" 1
 327:src/riscv.cpp **** 
 1792              		csrc sip, 0x02
 1793              	# 0 "" 2
 1794              		.loc 1 327 21 is_stmt 1
 1795              	#NO_APP
 1796 05ac 6FF0DFB8 		j	.L3
 1797              	.LVL119:
 1798              	.L9:
 1799              	.LBE226:
 333:src/riscv.cpp ****             // unexpected
 1800              		.loc 1 333 9
 335:src/riscv.cpp ****             printString("\nUnexpected trap cause; value of scause = ");
 1801              		.loc 1 335 13
 1802              	.LBB279:
GAS LISTING /tmp/ccad2L7I.s 			page 52


 1803              	.LBB280:
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 1804              		.loc 2 102 5
 103:src/../h/riscv.hpp ****     return sepc;
 1805              		.loc 2 103 5
 103:src/../h/riscv.hpp ****     return sepc;
 1806              		.loc 2 103 65 is_stmt 0
 1807              	#APP
 1808              	# 103 "src/../h/riscv.hpp" 1
 1809              		csrr a5, sepc
 1810              	# 0 "" 2
 1811              	#NO_APP
 1812 05b4 233CF4FC 		sd	a5,-40(s0)
 104:src/../h/riscv.hpp **** }
 1813              		.loc 2 104 5 is_stmt 1
 104:src/../h/riscv.hpp **** }
 1814              		.loc 2 104 12 is_stmt 0
 1815 05b8 833484FD 		ld	s1,-40(s0)
 1816              	.LVL120:
 1817              	.LBE280:
 1818              	.LBE279:
 336:src/riscv.cpp ****             printInt(r_scause());
 1819              		.loc 1 336 13 is_stmt 1
 336:src/riscv.cpp ****             printInt(r_scause());
 1820              		.loc 1 336 24 is_stmt 0
 1821 05bc 17050000 		lla	a0,.LC2
 1821      13050500 
 1822 05c4 97000000 		call	_Z11printStringPKc@plt
 1822      E7800000 
 1823              	.LVL121:
 337:src/riscv.cpp **** 
 1824              		.loc 1 337 13 is_stmt 1
 1825              	.LBB281:
 1826              	.LBB282:
  91:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r" (scause));
 1827              		.loc 2 91 5
  92:src/../h/riscv.hpp ****     return scause;
 1828              		.loc 2 92 5
  92:src/../h/riscv.hpp ****     return scause;
 1829              		.loc 2 92 73 is_stmt 0
 1830              	#APP
 1831              	# 92 "src/../h/riscv.hpp" 1
 1832              		csrr a5, scause
 1833              	# 0 "" 2
 1834              	#NO_APP
 1835 05d0 2338F4FC 		sd	a5,-48(s0)
  93:src/../h/riscv.hpp **** }
 1836              		.loc 2 93 5 is_stmt 1
  93:src/../h/riscv.hpp **** }
 1837              		.loc 2 93 12 is_stmt 0
 1838 05d4 033504FD 		ld	a0,-48(s0)
 1839              	.LBE282:
 1840              	.LBE281:
 337:src/riscv.cpp **** 
 1841              		.loc 1 337 21
 1842 05d8 13060000 		li	a2,0
 1843 05dc 9305A000 		li	a1,10
GAS LISTING /tmp/ccad2L7I.s 			page 53


 1844 05e0 1B050500 		sext.w	a0,a0
 1845 05e4 97000000 		call	_Z8printIntiii@plt
 1845      E7800000 
 1846              	.LVL122:
 339:src/riscv.cpp ****             printInt(pc);
 1847              		.loc 1 339 13 is_stmt 1
 339:src/riscv.cpp ****             printInt(pc);
 1848              		.loc 1 339 24 is_stmt 0
 1849 05ec 17050000 		lla	a0,.LC3
 1849      13050500 
 1850 05f4 97000000 		call	_Z11printStringPKc@plt
 1850      E7800000 
 1851              	.LVL123:
 340:src/riscv.cpp ****             printString("; value of sstatus = ");
 1852              		.loc 1 340 13 is_stmt 1
 340:src/riscv.cpp ****             printString("; value of sstatus = ");
 1853              		.loc 1 340 21 is_stmt 0
 1854 05fc 13060000 		li	a2,0
 1855 0600 9305A000 		li	a1,10
 1856 0604 1B850400 		sext.w	a0,s1
 1857 0608 97000000 		call	_Z8printIntiii@plt
 1857      E7800000 
 1858              	.LVL124:
 341:src/riscv.cpp ****             printInt(r_sstatus());
 1859              		.loc 1 341 13 is_stmt 1
 341:src/riscv.cpp ****             printInt(r_sstatus());
 1860              		.loc 1 341 24 is_stmt 0
 1861 0610 17050000 		lla	a0,.LC4
 1861      13050500 
 1862 0618 97000000 		call	_Z11printStringPKc@plt
 1862      E7800000 
 1863              	.LVL125:
 342:src/riscv.cpp ****             printString("; \nvalue of stval = ");
 1864              		.loc 1 342 13 is_stmt 1
 1865              	.LBB283:
 1866              	.LBB284:
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 1867              		.loc 2 134 5
 135:src/../h/riscv.hpp ****     return sstatus;
 1868              		.loc 2 135 5
 135:src/../h/riscv.hpp ****     return sstatus;
 1869              		.loc 2 135 77 is_stmt 0
 1870              	#APP
 1871              	# 135 "src/../h/riscv.hpp" 1
 1872              		csrr a5, sstatus
 1873              	# 0 "" 2
 1874              	#NO_APP
 1875 0624 2334F4FC 		sd	a5,-56(s0)
 136:src/../h/riscv.hpp **** }
 1876              		.loc 2 136 5 is_stmt 1
 136:src/../h/riscv.hpp **** }
 1877              		.loc 2 136 12 is_stmt 0
 1878 0628 033584FC 		ld	a0,-56(s0)
 1879              	.LBE284:
 1880              	.LBE283:
 342:src/riscv.cpp ****             printString("; \nvalue of stval = ");
 1881              		.loc 1 342 21
GAS LISTING /tmp/ccad2L7I.s 			page 54


 1882 062c 13060000 		li	a2,0
 1883 0630 9305A000 		li	a1,10
 1884 0634 1B050500 		sext.w	a0,a0
 1885 0638 97000000 		call	_Z8printIntiii@plt
 1885      E7800000 
 1886              	.LVL126:
 343:src/riscv.cpp ****             printInt(r_stval());
 1887              		.loc 1 343 13 is_stmt 1
 343:src/riscv.cpp ****             printInt(r_stval());
 1888              		.loc 1 343 24 is_stmt 0
 1889 0640 17050000 		lla	a0,.LC5
 1889      13050500 
 1890 0648 97000000 		call	_Z11printStringPKc@plt
 1890      E7800000 
 1891              	.LVL127:
 344:src/riscv.cpp ****             break;
 1892              		.loc 1 344 13 is_stmt 1
 1893              	.LBB285:
 1894              	.LBB286:
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r" (stval));
 1895              		.loc 2 124 5
 125:src/../h/riscv.hpp ****     return stval;
 1896              		.loc 2 125 5
 125:src/../h/riscv.hpp ****     return stval;
 1897              		.loc 2 125 69 is_stmt 0
 1898              	#APP
 1899              	# 125 "src/../h/riscv.hpp" 1
 1900              		csrr a5, stval
 1901              	# 0 "" 2
 1902              	#NO_APP
 1903 0654 2330F4FC 		sd	a5,-64(s0)
 126:src/../h/riscv.hpp **** }
 1904              		.loc 2 126 5 is_stmt 1
 126:src/../h/riscv.hpp **** }
 1905              		.loc 2 126 12 is_stmt 0
 1906 0658 033504FC 		ld	a0,-64(s0)
 1907              	.LBE286:
 1908              	.LBE285:
 344:src/riscv.cpp ****             break;
 1909              		.loc 1 344 21
 1910 065c 13060000 		li	a2,0
 1911 0660 9305A000 		li	a1,10
 1912 0664 1B050500 		sext.w	a0,a0
 1913 0668 97000000 		call	_Z8printIntiii@plt
 1913      E7800000 
 1914              	.LVL128:
 345:src/riscv.cpp **** 
 1915              		.loc 1 345 13 is_stmt 1
 1916              	.LBE288:
 1917              	.LBE289:
 1918              		.loc 1 349 1 is_stmt 0
 1919 0670 6FF09FAC 		j	.L3
 1920              		.cfi_endproc
 1921              	.LFE43:
 1923              		.weak	_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 1924              		.section	.bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance,"awG",@nobits,_ZGVZN15MemoryAllocat
 1925              		.align	3
GAS LISTING /tmp/ccad2L7I.s 			page 55


 1928              	_ZGVZN15MemoryAllocator11getInstanceEvE8instance:
 1929 0000 00000000 		.zero	8
 1929      00000000 
 1930              		.weak	_ZZN15MemoryAllocator11getInstanceEvE8instance
 1931              		.section	.bss._ZZN15MemoryAllocator11getInstanceEvE8instance,"awG",@nobits,_ZZN15MemoryAllocator11
 1932              		.align	3
 1935              	_ZZN15MemoryAllocator11getInstanceEvE8instance:
 1936 0000 00000000 		.zero	8
 1936      00000000 
 1937              		.text
 1938              	.Letext0:
 1939              		.file 5 "src/../h/../lib/hw.h"
 1940              		.file 6 "src/printing.hpp"
 1941              		.file 7 "src/../lib/console.h"
GAS LISTING /tmp/ccad2L7I.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccad2L7I.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccad2L7I.s:13     .text:0000000000000000 .L0 
     /tmp/ccad2L7I.s:14     .text:0000000000000000 .L0 
     /tmp/ccad2L7I.s:15     .text:0000000000000004 .L0 
     /tmp/ccad2L7I.s:17     .text:0000000000000008 .L0 
     /tmp/ccad2L7I.s:19     .text:000000000000000c .L0 
     /tmp/ccad2L7I.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:15     .text:000000000000000c .L0 
     /tmp/ccad2L7I.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:17     .text:0000000000000010 .L0 
     /tmp/ccad2L7I.s:33     .text:0000000000000014 .L0 
     /tmp/ccad2L7I.s:34     .text:0000000000000018 .L0 
     /tmp/ccad2L7I.s:35     .text:0000000000000018 .L0 
     /tmp/ccad2L7I.s:37     .text:000000000000001c .L0 
     /tmp/ccad2L7I.s:39     .text:0000000000000020 .L0 
     /tmp/ccad2L7I.s:65     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccad2L7I.s:68     .text:0000000000000020 .L0 
     /tmp/ccad2L7I.s:69     .text:0000000000000020 .L0 
     /tmp/ccad2L7I.s:70     .text:0000000000000024 .L0 
     /tmp/ccad2L7I.s:75     .text:0000000000000034 .L0 
     /tmp/ccad2L7I.s:76     .text:0000000000000034 .L0 
     /tmp/ccad2L7I.s:77     .text:0000000000000034 .L0 
     /tmp/ccad2L7I.s:78     .text:0000000000000034 .L0 
     /tmp/ccad2L7I.s:80     .text:0000000000000038 .L0 
     /tmp/ccad2L7I.s:85     .text:0000000000000038 .L0 
     /tmp/ccad2L7I.s:86     .text:0000000000000038 .L0 
     /tmp/ccad2L7I.s:87     .text:0000000000000038 .L0 
  src/../h/riscv.hpp:92     .text:0000000000000038 .L0 
     /tmp/ccad2L7I.s:95     .text:0000000000000040 .L0 
     /tmp/ccad2L7I.s:96     .text:0000000000000040 .L0 
     /tmp/ccad2L7I.s:101    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:102    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:103    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:104    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:105    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:106    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:107    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:108    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:112    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:113    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:1928   .bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance:0000000000000000 _ZGVZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccad2L7I.s:114    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:121    .text:0000000000000050 .L0 
     /tmp/ccad2L7I.s:122    .text:0000000000000050 .L0 
     /tmp/ccad2L7I.s:1935   .bss._ZZN15MemoryAllocator11getInstanceEvE8instance:0000000000000000 _ZZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccad2L7I.s:127    .text:0000000000000068 .L0 
     /tmp/ccad2L7I.s:128    .text:0000000000000068 .L0 
     /tmp/ccad2L7I.s:131    .text:0000000000000074 .L0 
     /tmp/ccad2L7I.s:133    .text:0000000000000078 .L0 
     /tmp/ccad2L7I.s:135    .text:000000000000007c .L0 
     /tmp/ccad2L7I.s:137    .text:0000000000000080 .L0 
     /tmp/ccad2L7I.s:139    .text:0000000000000084 .L0 
     /tmp/ccad2L7I.s:142    .text:000000000000008c .L0 
     /tmp/ccad2L7I.s:143    .text:000000000000008c .L0 
     /tmp/ccad2L7I.s:149    .text:0000000000000090 .L0 
GAS LISTING /tmp/ccad2L7I.s 			page 57


     /tmp/ccad2L7I.s:155    .text:0000000000000098 .L0 
     /tmp/ccad2L7I.s:157    .text:0000000000000098 .L0 
     /tmp/ccad2L7I.s:171    .text:00000000000000c8 .L0 
     /tmp/ccad2L7I.s:172    .text:00000000000000c8 .L0 
       src/riscv.cpp:200    .text:00000000000000c8 .L0 
     /tmp/ccad2L7I.s:180    .text:00000000000000cc .L0 
     /tmp/ccad2L7I.s:267    .text:00000000000000f0 .L0 
     /tmp/ccad2L7I.s:273    .text:0000000000000100 .L0 
     /tmp/ccad2L7I.s:274    .text:0000000000000100 .L0 
     /tmp/ccad2L7I.s:275    .text:0000000000000100 .L0 
     /tmp/ccad2L7I.s:278    .text:0000000000000108 .L0 
     /tmp/ccad2L7I.s:282    .text:000000000000010c .L0 
     /tmp/ccad2L7I.s:283    .text:000000000000010c .L0 
     /tmp/ccad2L7I.s:284    .text:000000000000010c .L0 
     /tmp/ccad2L7I.s:291    .text:0000000000000120 .L0 
     /tmp/ccad2L7I.s:292    .text:0000000000000120 .L0 
     /tmp/ccad2L7I.s:299    .text:000000000000012c .L0 
     /tmp/ccad2L7I.s:300    .text:000000000000012c .L0 
     /tmp/ccad2L7I.s:305    .text:0000000000000130 .L0 
     /tmp/ccad2L7I.s:309    .text:0000000000000134 .L0 
       src/riscv.cpp:45     .text:0000000000000134 .L0 
     /tmp/ccad2L7I.s:319    .text:0000000000000138 .L0 
     /tmp/ccad2L7I.s:320    .text:0000000000000138 .L0 
     /tmp/ccad2L7I.s:321    .text:000000000000013c .L0 
     /tmp/ccad2L7I.s:322    .text:000000000000013c .L0 
     /tmp/ccad2L7I.s:324    .text:0000000000000140 .L0 
     /tmp/ccad2L7I.s:325    .text:0000000000000140 .L0 
     /tmp/ccad2L7I.s:327    .text:0000000000000144 .L0 
     /tmp/ccad2L7I.s:329    .text:0000000000000148 .L0 
     /tmp/ccad2L7I.s:331    .text:000000000000014c .L0 
     /tmp/ccad2L7I.s:334    .text:0000000000000150 .L0 
     /tmp/ccad2L7I.s:342    .text:0000000000000150 .L0 
     /tmp/ccad2L7I.s:343    .text:0000000000000150 .L0 
     /tmp/ccad2L7I.s:344    .text:0000000000000150 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000150 .L0 
     /tmp/ccad2L7I.s:352    .text:0000000000000158 .L0 
     /tmp/ccad2L7I.s:353    .text:0000000000000158 .L0 
     /tmp/ccad2L7I.s:360    .text:000000000000015c .L0 
     /tmp/ccad2L7I.s:361    .text:000000000000015c .L0 
     /tmp/ccad2L7I.s:362    .text:000000000000015c .L0 
  src/../h/riscv.hpp:135    .text:000000000000015c .L0 
     /tmp/ccad2L7I.s:370    .text:0000000000000164 .L0 
     /tmp/ccad2L7I.s:371    .text:0000000000000164 .L0 
     /tmp/ccad2L7I.s:376    .text:0000000000000168 .L0 
     /tmp/ccad2L7I.s:377    .text:0000000000000168 .L0 
     /tmp/ccad2L7I.s:380    .text:0000000000000174 .L0 
     /tmp/ccad2L7I.s:381    .text:0000000000000174 .L0 
     /tmp/ccad2L7I.s:386    .text:000000000000017c .L0 
     /tmp/ccad2L7I.s:387    .text:000000000000017c .L0 
  src/../h/riscv.hpp:140    .text:000000000000017c .L0 
     /tmp/ccad2L7I.s:399    .text:0000000000000180 .L0 
     /tmp/ccad2L7I.s:400    .text:0000000000000180 .L0 
  src/../h/riscv.hpp:108    .text:0000000000000180 .L0 
     /tmp/ccad2L7I.s:407    .text:0000000000000184 .L0 
     /tmp/ccad2L7I.s:415    .text:0000000000000188 .L0 
     /tmp/ccad2L7I.s:416    .text:0000000000000188 .L0 
       src/riscv.cpp:58     .text:0000000000000188 .L0 
GAS LISTING /tmp/ccad2L7I.s 			page 58


     /tmp/ccad2L7I.s:424    .text:000000000000018c .L0 
     /tmp/ccad2L7I.s:510    .text:00000000000001b0 .L0 
     /tmp/ccad2L7I.s:511    .text:00000000000001b0 .L0 
       src/riscv.cpp:64     .text:00000000000001b0 .L0 
     /tmp/ccad2L7I.s:518    .text:00000000000001b4 .L0 
     /tmp/ccad2L7I.s:520    .text:00000000000001b4 .L0 
     /tmp/ccad2L7I.s:524    .text:00000000000001c4 .L0 
       src/riscv.cpp:76     .text:00000000000001c4 .L0 
     /tmp/ccad2L7I.s:533    .text:00000000000001c8 .L0 
     /tmp/ccad2L7I.s:534    .text:00000000000001c8 .L0 
     /tmp/ccad2L7I.s:535    .text:00000000000001c8 .L0 
  src/../h/riscv.hpp:103    .text:00000000000001c8 .L0 
     /tmp/ccad2L7I.s:543    .text:00000000000001d0 .L0 
     /tmp/ccad2L7I.s:544    .text:00000000000001d0 .L0 
     /tmp/ccad2L7I.s:548    .text:00000000000001d4 .L0 
     /tmp/ccad2L7I.s:553    .text:00000000000001d8 .L0 
  src/../h/riscv.hpp:108    .text:00000000000001d8 .L0 
     /tmp/ccad2L7I.s:563    .text:00000000000001dc .L0 
       src/riscv.cpp:79     .text:00000000000001dc .L0 
     /tmp/ccad2L7I.s:573    .text:00000000000001e0 .L0 
     /tmp/ccad2L7I.s:576    .text:00000000000001e0 .L0 
     /tmp/ccad2L7I.s:577    .text:00000000000001e0 .L0 
     /tmp/ccad2L7I.s:578    .text:00000000000001e0 .L0 
  src/../h/riscv.hpp:103    .text:00000000000001e0 .L0 
     /tmp/ccad2L7I.s:586    .text:00000000000001e8 .L0 
     /tmp/ccad2L7I.s:587    .text:00000000000001e8 .L0 
     /tmp/ccad2L7I.s:591    .text:00000000000001ec .L0 
     /tmp/ccad2L7I.s:596    .text:00000000000001f0 .L0 
  src/../h/riscv.hpp:108    .text:00000000000001f0 .L0 
     /tmp/ccad2L7I.s:606    .text:00000000000001f4 .L0 
       src/riscv.cpp:193    .text:00000000000001f4 .L0 
     /tmp/ccad2L7I.s:613    .text:00000000000001f8 .L0 
     /tmp/ccad2L7I.s:617    .text:00000000000001fc .L0 
     /tmp/ccad2L7I.s:618    .text:00000000000001fc .L0 
       src/riscv.cpp:86     .text:00000000000001fc .L0 
     /tmp/ccad2L7I.s:625    .text:0000000000000200 .L0 
     /tmp/ccad2L7I.s:627    .text:0000000000000200 .L0 
     /tmp/ccad2L7I.s:631    .text:0000000000000210 .L0 
       src/riscv.cpp:90     .text:0000000000000210 .L0 
     /tmp/ccad2L7I.s:640    .text:0000000000000214 .L0 
     /tmp/ccad2L7I.s:641    .text:0000000000000214 .L0 
     /tmp/ccad2L7I.s:642    .text:0000000000000214 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000214 .L0 
     /tmp/ccad2L7I.s:650    .text:000000000000021c .L0 
     /tmp/ccad2L7I.s:651    .text:000000000000021c .L0 
     /tmp/ccad2L7I.s:655    .text:0000000000000220 .L0 
     /tmp/ccad2L7I.s:660    .text:0000000000000224 .L0 
  src/../h/riscv.hpp:108    .text:0000000000000224 .L0 
     /tmp/ccad2L7I.s:670    .text:0000000000000228 .L0 
       src/riscv.cpp:93     .text:0000000000000228 .L0 
     /tmp/ccad2L7I.s:677    .text:000000000000022c .L0 
     /tmp/ccad2L7I.s:681    .text:0000000000000230 .L0 
     /tmp/ccad2L7I.s:682    .text:0000000000000230 .L0 
       src/riscv.cpp:99     .text:0000000000000230 .L0 
     /tmp/ccad2L7I.s:689    .text:0000000000000234 .L0 
       src/riscv.cpp:100    .text:0000000000000234 .L0 
     /tmp/ccad2L7I.s:695    .text:0000000000000238 .L0 
GAS LISTING /tmp/ccad2L7I.s 			page 59


       src/riscv.cpp:101    .text:0000000000000238 .L0 
     /tmp/ccad2L7I.s:701    .text:000000000000023c .L0 
       src/riscv.cpp:102    .text:000000000000023c .L0 
     /tmp/ccad2L7I.s:707    .text:0000000000000240 .L0 
     /tmp/ccad2L7I.s:709    .text:0000000000000240 .L0 
     /tmp/ccad2L7I.s:712    .text:0000000000000248 .L0 
     /tmp/ccad2L7I.s:714    .text:000000000000024c .L0 
     /tmp/ccad2L7I.s:716    .text:0000000000000250 .L0 
     /tmp/ccad2L7I.s:720    .text:0000000000000254 .L0 
       src/riscv.cpp:111    .text:0000000000000254 .L0 
     /tmp/ccad2L7I.s:729    .text:0000000000000258 .L0 
     /tmp/ccad2L7I.s:730    .text:0000000000000258 .L0 
     /tmp/ccad2L7I.s:731    .text:0000000000000258 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000258 .L0 
     /tmp/ccad2L7I.s:740    .text:0000000000000260 .L0 
     /tmp/ccad2L7I.s:741    .text:0000000000000260 .L0 
     /tmp/ccad2L7I.s:745    .text:0000000000000264 .L0 
     /tmp/ccad2L7I.s:750    .text:0000000000000268 .L0 
  src/../h/riscv.hpp:108    .text:0000000000000268 .L0 
     /tmp/ccad2L7I.s:760    .text:000000000000026c .L0 
       src/riscv.cpp:114    .text:000000000000026c .L0 
     /tmp/ccad2L7I.s:767    .text:0000000000000270 .L0 
     /tmp/ccad2L7I.s:770    .text:0000000000000274 .L0 
     /tmp/ccad2L7I.s:775    .text:000000000000027c .L0 
     /tmp/ccad2L7I.s:778    .text:000000000000027c .L0 
     /tmp/ccad2L7I.s:779    .text:000000000000027c .L0 
     /tmp/ccad2L7I.s:780    .text:000000000000027c .L0 
  src/../h/riscv.hpp:103    .text:000000000000027c .L0 
     /tmp/ccad2L7I.s:788    .text:0000000000000284 .L0 
     /tmp/ccad2L7I.s:789    .text:0000000000000284 .L0 
     /tmp/ccad2L7I.s:793    .text:0000000000000288 .L0 
     /tmp/ccad2L7I.s:798    .text:000000000000028c .L0 
     /tmp/ccad2L7I.s:799    .text:000000000000028c .L0 
     /tmp/ccad2L7I.s:800    .text:000000000000028c .L0 
  src/../h/riscv.hpp:135    .text:000000000000028c .L0 
     /tmp/ccad2L7I.s:808    .text:0000000000000294 .L0 
     /tmp/ccad2L7I.s:809    .text:0000000000000294 .L0 
     /tmp/ccad2L7I.s:814    .text:0000000000000298 .L0 
     /tmp/ccad2L7I.s:815    .text:0000000000000298 .L0 
     /tmp/ccad2L7I.s:818    .text:00000000000002a4 .L0 
     /tmp/ccad2L7I.s:819    .text:00000000000002a4 .L0 
     /tmp/ccad2L7I.s:825    .text:00000000000002b0 .L0 
     /tmp/ccad2L7I.s:826    .text:00000000000002b0 .L0 
     /tmp/ccad2L7I.s:832    .text:00000000000002b8 .L0 
     /tmp/ccad2L7I.s:833    .text:00000000000002b8 .L0 
     /tmp/ccad2L7I.s:838    .text:00000000000002c0 .L0 
     /tmp/ccad2L7I.s:839    .text:00000000000002c0 .L0 
  src/../h/riscv.hpp:140    .text:00000000000002c0 .L0 
     /tmp/ccad2L7I.s:851    .text:00000000000002c4 .L0 
     /tmp/ccad2L7I.s:852    .text:00000000000002c4 .L0 
  src/../h/riscv.hpp:108    .text:00000000000002c4 .L0 
     /tmp/ccad2L7I.s:859    .text:00000000000002c8 .L0 
     /tmp/ccad2L7I.s:865    .text:00000000000002cc .L0 
     /tmp/ccad2L7I.s:868    .text:00000000000002cc .L0 
     /tmp/ccad2L7I.s:869    .text:00000000000002cc .L0 
     /tmp/ccad2L7I.s:870    .text:00000000000002cc .L0 
  src/../h/riscv.hpp:103    .text:00000000000002cc .L0 
GAS LISTING /tmp/ccad2L7I.s 			page 60


     /tmp/ccad2L7I.s:878    .text:00000000000002d4 .L0 
     /tmp/ccad2L7I.s:879    .text:00000000000002d4 .L0 
     /tmp/ccad2L7I.s:883    .text:00000000000002d8 .L0 
     /tmp/ccad2L7I.s:888    .text:00000000000002dc .L0 
     /tmp/ccad2L7I.s:889    .text:00000000000002dc .L0 
     /tmp/ccad2L7I.s:890    .text:00000000000002dc .L0 
  src/../h/riscv.hpp:135    .text:00000000000002dc .L0 
     /tmp/ccad2L7I.s:898    .text:00000000000002e4 .L0 
     /tmp/ccad2L7I.s:899    .text:00000000000002e4 .L0 
     /tmp/ccad2L7I.s:904    .text:00000000000002e8 .L0 
     /tmp/ccad2L7I.s:905    .text:00000000000002e8 .L0 
     /tmp/ccad2L7I.s:908    .text:00000000000002f4 .L0 
     /tmp/ccad2L7I.s:909    .text:00000000000002f4 .L0 
     /tmp/ccad2L7I.s:914    .text:00000000000002fc .L0 
     /tmp/ccad2L7I.s:915    .text:00000000000002fc .L0 
  src/../h/riscv.hpp:140    .text:00000000000002fc .L0 
     /tmp/ccad2L7I.s:927    .text:0000000000000300 .L0 
     /tmp/ccad2L7I.s:928    .text:0000000000000300 .L0 
  src/../h/riscv.hpp:108    .text:0000000000000300 .L0 
     /tmp/ccad2L7I.s:935    .text:0000000000000304 .L0 
     /tmp/ccad2L7I.s:941    .text:0000000000000308 .L0 
     /tmp/ccad2L7I.s:942    .text:0000000000000308 .L0 
       src/riscv.cpp:141    .text:0000000000000308 .L0 
     /tmp/ccad2L7I.s:949    .text:000000000000030c .L0 
     /tmp/ccad2L7I.s:951    .text:000000000000030c .L0 
     /tmp/ccad2L7I.s:957    .text:0000000000000318 .L0 
     /tmp/ccad2L7I.s:958    .text:0000000000000318 .L0 
     /tmp/ccad2L7I.s:959    .text:0000000000000318 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000318 .L0 
     /tmp/ccad2L7I.s:967    .text:0000000000000320 .L0 
     /tmp/ccad2L7I.s:968    .text:0000000000000320 .L0 
     /tmp/ccad2L7I.s:972    .text:0000000000000324 .L0 
     /tmp/ccad2L7I.s:977    .text:0000000000000328 .L0 
  src/../h/riscv.hpp:108    .text:0000000000000328 .L0 
     /tmp/ccad2L7I.s:987    .text:000000000000032c .L0 
       src/riscv.cpp:146    .text:000000000000032c .L0 
     /tmp/ccad2L7I.s:994    .text:0000000000000330 .L0 
     /tmp/ccad2L7I.s:997    .text:0000000000000334 .L0 
     /tmp/ccad2L7I.s:998    .text:0000000000000334 .L0 
     /tmp/ccad2L7I.s:999    .text:0000000000000334 .L0 
     /tmp/ccad2L7I.s:1005   .text:0000000000000344 .L0 
     /tmp/ccad2L7I.s:1006   .text:0000000000000344 .L0 
     /tmp/ccad2L7I.s:1007   .text:0000000000000344 .L0 
     /tmp/ccad2L7I.s:1019   .text:000000000000034c .L0 
     /tmp/ccad2L7I.s:1020   .text:000000000000034c .L0 
     /tmp/ccad2L7I.s:1021   .text:000000000000034c .L0 
  src/../h/riscv.hpp:103    .text:000000000000034c .L0 
     /tmp/ccad2L7I.s:1029   .text:0000000000000354 .L0 
     /tmp/ccad2L7I.s:1030   .text:0000000000000354 .L0 
     /tmp/ccad2L7I.s:1034   .text:0000000000000358 .L0 
     /tmp/ccad2L7I.s:1039   .text:000000000000035c .L0 
  src/../h/riscv.hpp:108    .text:000000000000035c .L0 
     /tmp/ccad2L7I.s:1049   .text:0000000000000360 .L0 
       src/riscv.cpp:176    .text:0000000000000360 .L0 
     /tmp/ccad2L7I.s:1056   .text:0000000000000364 .L0 
     /tmp/ccad2L7I.s:1059   .text:0000000000000368 .L0 
     /tmp/ccad2L7I.s:1062   .text:0000000000000368 .L0 
GAS LISTING /tmp/ccad2L7I.s 			page 61


     /tmp/ccad2L7I.s:1063   .text:0000000000000368 .L0 
     /tmp/ccad2L7I.s:1064   .text:0000000000000368 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000368 .L0 
     /tmp/ccad2L7I.s:1072   .text:0000000000000370 .L0 
     /tmp/ccad2L7I.s:1073   .text:0000000000000370 .L0 
     /tmp/ccad2L7I.s:1077   .text:0000000000000374 .L0 
     /tmp/ccad2L7I.s:1082   .text:0000000000000378 .L0 
     /tmp/ccad2L7I.s:1083   .text:0000000000000378 .L0 
     /tmp/ccad2L7I.s:1084   .text:0000000000000378 .L0 
  src/../h/riscv.hpp:135    .text:0000000000000378 .L0 
     /tmp/ccad2L7I.s:1092   .text:0000000000000380 .L0 
     /tmp/ccad2L7I.s:1093   .text:0000000000000380 .L0 
     /tmp/ccad2L7I.s:1098   .text:0000000000000384 .L0 
     /tmp/ccad2L7I.s:1099   .text:0000000000000384 .L0 
     /tmp/ccad2L7I.s:1102   .text:0000000000000390 .L0 
     /tmp/ccad2L7I.s:1103   .text:0000000000000390 .L0 
     /tmp/ccad2L7I.s:1108   .text:0000000000000398 .L0 
     /tmp/ccad2L7I.s:1109   .text:0000000000000398 .L0 
  src/../h/riscv.hpp:140    .text:0000000000000398 .L0 
     /tmp/ccad2L7I.s:1121   .text:000000000000039c .L0 
     /tmp/ccad2L7I.s:1122   .text:000000000000039c .L0 
  src/../h/riscv.hpp:108    .text:000000000000039c .L0 
     /tmp/ccad2L7I.s:1134   .text:00000000000003a0 .L0 
     /tmp/ccad2L7I.s:1135   .text:00000000000003a0 .L0 
     /tmp/ccad2L7I.s:1136   .text:00000000000003a0 .L0 
  src/../h/riscv.hpp:103    .text:00000000000003a0 .L0 
     /tmp/ccad2L7I.s:1144   .text:00000000000003a8 .L0 
     /tmp/ccad2L7I.s:1145   .text:00000000000003a8 .L0 
     /tmp/ccad2L7I.s:1149   .text:00000000000003ac .L0 
     /tmp/ccad2L7I.s:1154   .text:00000000000003b0 .L0 
  src/../h/riscv.hpp:108    .text:00000000000003b0 .L0 
     /tmp/ccad2L7I.s:1164   .text:00000000000003b4 .L0 
       src/riscv.cpp:186    .text:00000000000003b4 .L0 
     /tmp/ccad2L7I.s:1171   .text:00000000000003b8 .L0 
     /tmp/ccad2L7I.s:1177   .text:00000000000003bc .L0 
     /tmp/ccad2L7I.s:1178   .text:00000000000003bc .L0 
       src/riscv.cpp:206    .text:00000000000003bc .L0 
     /tmp/ccad2L7I.s:1185   .text:00000000000003c0 .L0 
     /tmp/ccad2L7I.s:1187   .text:00000000000003c0 .L0 
     /tmp/ccad2L7I.s:1191   .text:00000000000003d0 .L0 
       src/riscv.cpp:218    .text:00000000000003d0 .L0 
     /tmp/ccad2L7I.s:1200   .text:00000000000003d4 .L0 
     /tmp/ccad2L7I.s:1201   .text:00000000000003d4 .L0 
     /tmp/ccad2L7I.s:1202   .text:00000000000003d4 .L0 
  src/../h/riscv.hpp:103    .text:00000000000003d4 .L0 
     /tmp/ccad2L7I.s:1210   .text:00000000000003dc .L0 
     /tmp/ccad2L7I.s:1211   .text:00000000000003dc .L0 
     /tmp/ccad2L7I.s:1215   .text:00000000000003e0 .L0 
     /tmp/ccad2L7I.s:1220   .text:00000000000003e4 .L0 
  src/../h/riscv.hpp:108    .text:00000000000003e4 .L0 
     /tmp/ccad2L7I.s:1230   .text:00000000000003e8 .L0 
       src/riscv.cpp:221    .text:00000000000003e8 .L0 
     /tmp/ccad2L7I.s:1237   .text:00000000000003ec .L0 
     /tmp/ccad2L7I.s:1241   .text:00000000000003f0 .L0 
     /tmp/ccad2L7I.s:1242   .text:00000000000003f0 .L0 
       src/riscv.cpp:228    .text:00000000000003f0 .L0 
     /tmp/ccad2L7I.s:1249   .text:00000000000003f4 .L0 
GAS LISTING /tmp/ccad2L7I.s 			page 62


     /tmp/ccad2L7I.s:1251   .text:00000000000003f4 .L0 
     /tmp/ccad2L7I.s:1255   .text:0000000000000404 .L0 
       src/riscv.cpp:232    .text:0000000000000404 .L0 
     /tmp/ccad2L7I.s:1264   .text:0000000000000408 .L0 
     /tmp/ccad2L7I.s:1265   .text:0000000000000408 .L0 
     /tmp/ccad2L7I.s:1266   .text:0000000000000408 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000408 .L0 
     /tmp/ccad2L7I.s:1274   .text:0000000000000410 .L0 
     /tmp/ccad2L7I.s:1275   .text:0000000000000410 .L0 
     /tmp/ccad2L7I.s:1279   .text:0000000000000414 .L0 
     /tmp/ccad2L7I.s:1284   .text:0000000000000418 .L0 
  src/../h/riscv.hpp:108    .text:0000000000000418 .L0 
     /tmp/ccad2L7I.s:1294   .text:000000000000041c .L0 
       src/riscv.cpp:235    .text:000000000000041c .L0 
     /tmp/ccad2L7I.s:1301   .text:0000000000000420 .L0 
     /tmp/ccad2L7I.s:1305   .text:0000000000000424 .L0 
     /tmp/ccad2L7I.s:1306   .text:0000000000000424 .L0 
       src/riscv.cpp:241    .text:0000000000000424 .L0 
     /tmp/ccad2L7I.s:1313   .text:0000000000000428 .L0 
       src/riscv.cpp:242    .text:0000000000000428 .L0 
     /tmp/ccad2L7I.s:1319   .text:000000000000042c .L0 
       src/riscv.cpp:243    .text:000000000000042c .L0 
     /tmp/ccad2L7I.s:1325   .text:0000000000000430 .L0 
       src/riscv.cpp:244    .text:0000000000000430 .L0 
     /tmp/ccad2L7I.s:1331   .text:0000000000000434 .L0 
     /tmp/ccad2L7I.s:1333   .text:0000000000000434 .L0 
     /tmp/ccad2L7I.s:1336   .text:000000000000043c .L0 
     /tmp/ccad2L7I.s:1338   .text:0000000000000440 .L0 
     /tmp/ccad2L7I.s:1340   .text:0000000000000444 .L0 
     /tmp/ccad2L7I.s:1344   .text:0000000000000448 .L0 
       src/riscv.cpp:253    .text:0000000000000448 .L0 
     /tmp/ccad2L7I.s:1353   .text:000000000000044c .L0 
     /tmp/ccad2L7I.s:1354   .text:000000000000044c .L0 
     /tmp/ccad2L7I.s:1355   .text:000000000000044c .L0 
  src/../h/riscv.hpp:103    .text:000000000000044c .L0 
     /tmp/ccad2L7I.s:1364   .text:0000000000000454 .L0 
     /tmp/ccad2L7I.s:1365   .text:0000000000000454 .L0 
     /tmp/ccad2L7I.s:1369   .text:0000000000000458 .L0 
     /tmp/ccad2L7I.s:1374   .text:000000000000045c .L0 
  src/../h/riscv.hpp:108    .text:000000000000045c .L0 
     /tmp/ccad2L7I.s:1384   .text:0000000000000460 .L0 
       src/riscv.cpp:256    .text:0000000000000460 .L0 
     /tmp/ccad2L7I.s:1391   .text:0000000000000464 .L0 
     /tmp/ccad2L7I.s:1394   .text:0000000000000468 .L0 
     /tmp/ccad2L7I.s:1399   .text:0000000000000470 .L0 
     /tmp/ccad2L7I.s:1402   .text:0000000000000470 .L0 
     /tmp/ccad2L7I.s:1403   .text:0000000000000470 .L0 
     /tmp/ccad2L7I.s:1404   .text:0000000000000470 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000470 .L0 
     /tmp/ccad2L7I.s:1412   .text:0000000000000478 .L0 
     /tmp/ccad2L7I.s:1413   .text:0000000000000478 .L0 
     /tmp/ccad2L7I.s:1417   .text:000000000000047c .L0 
     /tmp/ccad2L7I.s:1422   .text:0000000000000480 .L0 
     /tmp/ccad2L7I.s:1423   .text:0000000000000480 .L0 
     /tmp/ccad2L7I.s:1424   .text:0000000000000480 .L0 
  src/../h/riscv.hpp:135    .text:0000000000000480 .L0 
     /tmp/ccad2L7I.s:1432   .text:0000000000000488 .L0 
GAS LISTING /tmp/ccad2L7I.s 			page 63


     /tmp/ccad2L7I.s:1433   .text:0000000000000488 .L0 
     /tmp/ccad2L7I.s:1438   .text:000000000000048c .L0 
     /tmp/ccad2L7I.s:1439   .text:000000000000048c .L0 
     /tmp/ccad2L7I.s:1442   .text:0000000000000498 .L0 
     /tmp/ccad2L7I.s:1443   .text:0000000000000498 .L0 
     /tmp/ccad2L7I.s:1449   .text:00000000000004a4 .L0 
     /tmp/ccad2L7I.s:1450   .text:00000000000004a4 .L0 
     /tmp/ccad2L7I.s:1456   .text:00000000000004ac .L0 
     /tmp/ccad2L7I.s:1457   .text:00000000000004ac .L0 
     /tmp/ccad2L7I.s:1462   .text:00000000000004b4 .L0 
     /tmp/ccad2L7I.s:1463   .text:00000000000004b4 .L0 
  src/../h/riscv.hpp:140    .text:00000000000004b4 .L0 
     /tmp/ccad2L7I.s:1475   .text:00000000000004b8 .L0 
     /tmp/ccad2L7I.s:1476   .text:00000000000004b8 .L0 
  src/../h/riscv.hpp:108    .text:00000000000004b8 .L0 
     /tmp/ccad2L7I.s:1483   .text:00000000000004bc .L0 
     /tmp/ccad2L7I.s:1489   .text:00000000000004c0 .L0 
     /tmp/ccad2L7I.s:1492   .text:00000000000004c0 .L0 
     /tmp/ccad2L7I.s:1493   .text:00000000000004c0 .L0 
     /tmp/ccad2L7I.s:1494   .text:00000000000004c0 .L0 
  src/../h/riscv.hpp:103    .text:00000000000004c0 .L0 
     /tmp/ccad2L7I.s:1502   .text:00000000000004c8 .L0 
     /tmp/ccad2L7I.s:1503   .text:00000000000004c8 .L0 
     /tmp/ccad2L7I.s:1507   .text:00000000000004cc .L0 
     /tmp/ccad2L7I.s:1512   .text:00000000000004d0 .L0 
     /tmp/ccad2L7I.s:1513   .text:00000000000004d0 .L0 
     /tmp/ccad2L7I.s:1514   .text:00000000000004d0 .L0 
  src/../h/riscv.hpp:135    .text:00000000000004d0 .L0 
     /tmp/ccad2L7I.s:1522   .text:00000000000004d8 .L0 
     /tmp/ccad2L7I.s:1523   .text:00000000000004d8 .L0 
     /tmp/ccad2L7I.s:1528   .text:00000000000004dc .L0 
     /tmp/ccad2L7I.s:1529   .text:00000000000004dc .L0 
     /tmp/ccad2L7I.s:1532   .text:00000000000004e8 .L0 
     /tmp/ccad2L7I.s:1533   .text:00000000000004e8 .L0 
     /tmp/ccad2L7I.s:1538   .text:00000000000004f0 .L0 
     /tmp/ccad2L7I.s:1539   .text:00000000000004f0 .L0 
  src/../h/riscv.hpp:140    .text:00000000000004f0 .L0 
     /tmp/ccad2L7I.s:1551   .text:00000000000004f4 .L0 
     /tmp/ccad2L7I.s:1552   .text:00000000000004f4 .L0 
  src/../h/riscv.hpp:108    .text:00000000000004f4 .L0 
     /tmp/ccad2L7I.s:1559   .text:00000000000004f8 .L0 
     /tmp/ccad2L7I.s:1565   .text:00000000000004fc .L0 
     /tmp/ccad2L7I.s:1566   .text:00000000000004fc .L0 
       src/riscv.cpp:282    .text:00000000000004fc .L0 
     /tmp/ccad2L7I.s:1573   .text:0000000000000500 .L0 
     /tmp/ccad2L7I.s:1575   .text:0000000000000500 .L0 
     /tmp/ccad2L7I.s:1581   .text:000000000000050c .L0 
     /tmp/ccad2L7I.s:1582   .text:000000000000050c .L0 
     /tmp/ccad2L7I.s:1583   .text:000000000000050c .L0 
  src/../h/riscv.hpp:103    .text:000000000000050c .L0 
     /tmp/ccad2L7I.s:1591   .text:0000000000000514 .L0 
     /tmp/ccad2L7I.s:1592   .text:0000000000000514 .L0 
     /tmp/ccad2L7I.s:1596   .text:0000000000000518 .L0 
     /tmp/ccad2L7I.s:1601   .text:000000000000051c .L0 
  src/../h/riscv.hpp:108    .text:000000000000051c .L0 
     /tmp/ccad2L7I.s:1611   .text:0000000000000520 .L0 
       src/riscv.cpp:287    .text:0000000000000520 .L0 
GAS LISTING /tmp/ccad2L7I.s 			page 64


     /tmp/ccad2L7I.s:1618   .text:0000000000000524 .L0 
     /tmp/ccad2L7I.s:1621   .text:0000000000000528 .L0 
     /tmp/ccad2L7I.s:1625   .text:0000000000000528 .L0 
     /tmp/ccad2L7I.s:1626   .text:0000000000000528 .L0 
     /tmp/ccad2L7I.s:1627   .text:0000000000000528 .L0 
     /tmp/ccad2L7I.s:1637   .text:0000000000000530 .L0 
     /tmp/ccad2L7I.s:1638   .text:0000000000000530 .L0 
     /tmp/ccad2L7I.s:1644   .text:0000000000000540 .L0 
     /tmp/ccad2L7I.s:1645   .text:0000000000000540 .L0 
     /tmp/ccad2L7I.s:1646   .text:0000000000000540 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000540 .L0 
     /tmp/ccad2L7I.s:1654   .text:0000000000000548 .L0 
     /tmp/ccad2L7I.s:1655   .text:0000000000000548 .L0 
     /tmp/ccad2L7I.s:1659   .text:000000000000054c .L0 
     /tmp/ccad2L7I.s:1664   .text:0000000000000550 .L0 
  src/../h/riscv.hpp:108    .text:0000000000000550 .L0 
     /tmp/ccad2L7I.s:1674   .text:0000000000000554 .L0 
       src/riscv.cpp:316    .text:0000000000000554 .L0 
     /tmp/ccad2L7I.s:1681   .text:0000000000000558 .L0 
     /tmp/ccad2L7I.s:1684   .text:000000000000055c .L0 
     /tmp/ccad2L7I.s:1687   .text:000000000000055c .L0 
     /tmp/ccad2L7I.s:1688   .text:000000000000055c .L0 
     /tmp/ccad2L7I.s:1689   .text:000000000000055c .L0 
  src/../h/riscv.hpp:103    .text:000000000000055c .L0 
     /tmp/ccad2L7I.s:1697   .text:0000000000000564 .L0 
     /tmp/ccad2L7I.s:1698   .text:0000000000000564 .L0 
     /tmp/ccad2L7I.s:1702   .text:0000000000000568 .L0 
     /tmp/ccad2L7I.s:1707   .text:000000000000056c .L0 
     /tmp/ccad2L7I.s:1708   .text:000000000000056c .L0 
     /tmp/ccad2L7I.s:1709   .text:000000000000056c .L0 
  src/../h/riscv.hpp:135    .text:000000000000056c .L0 
     /tmp/ccad2L7I.s:1717   .text:0000000000000574 .L0 
     /tmp/ccad2L7I.s:1718   .text:0000000000000574 .L0 
     /tmp/ccad2L7I.s:1723   .text:0000000000000578 .L0 
     /tmp/ccad2L7I.s:1724   .text:0000000000000578 .L0 
     /tmp/ccad2L7I.s:1727   .text:0000000000000584 .L0 
     /tmp/ccad2L7I.s:1728   .text:0000000000000584 .L0 
     /tmp/ccad2L7I.s:1733   .text:000000000000058c .L0 
     /tmp/ccad2L7I.s:1734   .text:000000000000058c .L0 
  src/../h/riscv.hpp:140    .text:000000000000058c .L0 
     /tmp/ccad2L7I.s:1746   .text:0000000000000590 .L0 
     /tmp/ccad2L7I.s:1747   .text:0000000000000590 .L0 
  src/../h/riscv.hpp:108    .text:0000000000000590 .L0 
     /tmp/ccad2L7I.s:1759   .text:0000000000000594 .L0 
     /tmp/ccad2L7I.s:1760   .text:0000000000000594 .L0 
     /tmp/ccad2L7I.s:1761   .text:0000000000000594 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000594 .L0 
     /tmp/ccad2L7I.s:1769   .text:000000000000059c .L0 
     /tmp/ccad2L7I.s:1770   .text:000000000000059c .L0 
     /tmp/ccad2L7I.s:1774   .text:00000000000005a0 .L0 
     /tmp/ccad2L7I.s:1779   .text:00000000000005a4 .L0 
  src/../h/riscv.hpp:108    .text:00000000000005a4 .L0 
     /tmp/ccad2L7I.s:1789   .text:00000000000005a8 .L0 
       src/riscv.cpp:325    .text:00000000000005a8 .L0 
     /tmp/ccad2L7I.s:1796   .text:00000000000005ac .L0 
     /tmp/ccad2L7I.s:1801   .text:00000000000005b0 .L0 
     /tmp/ccad2L7I.s:1804   .text:00000000000005b0 .L0 
GAS LISTING /tmp/ccad2L7I.s 			page 65


     /tmp/ccad2L7I.s:1805   .text:00000000000005b0 .L0 
     /tmp/ccad2L7I.s:1806   .text:00000000000005b0 .L0 
  src/../h/riscv.hpp:103    .text:00000000000005b0 .L0 
     /tmp/ccad2L7I.s:1814   .text:00000000000005b8 .L0 
     /tmp/ccad2L7I.s:1815   .text:00000000000005b8 .L0 
     /tmp/ccad2L7I.s:1820   .text:00000000000005bc .L0 
     /tmp/ccad2L7I.s:1821   .text:00000000000005bc .L0 
     /tmp/ccad2L7I.s:1827   .text:00000000000005cc .L0 
     /tmp/ccad2L7I.s:1828   .text:00000000000005cc .L0 
     /tmp/ccad2L7I.s:1829   .text:00000000000005cc .L0 
  src/../h/riscv.hpp:92     .text:00000000000005cc .L0 
     /tmp/ccad2L7I.s:1837   .text:00000000000005d4 .L0 
     /tmp/ccad2L7I.s:1838   .text:00000000000005d4 .L0 
     /tmp/ccad2L7I.s:1842   .text:00000000000005d8 .L0 
     /tmp/ccad2L7I.s:1848   .text:00000000000005ec .L0 
     /tmp/ccad2L7I.s:1849   .text:00000000000005ec .L0 
     /tmp/ccad2L7I.s:1853   .text:00000000000005fc .L0 
     /tmp/ccad2L7I.s:1854   .text:00000000000005fc .L0 
     /tmp/ccad2L7I.s:1860   .text:0000000000000610 .L0 
     /tmp/ccad2L7I.s:1861   .text:0000000000000610 .L0 
     /tmp/ccad2L7I.s:1867   .text:0000000000000620 .L0 
     /tmp/ccad2L7I.s:1868   .text:0000000000000620 .L0 
     /tmp/ccad2L7I.s:1869   .text:0000000000000620 .L0 
  src/../h/riscv.hpp:135    .text:0000000000000620 .L0 
     /tmp/ccad2L7I.s:1877   .text:0000000000000628 .L0 
     /tmp/ccad2L7I.s:1878   .text:0000000000000628 .L0 
     /tmp/ccad2L7I.s:1882   .text:000000000000062c .L0 
     /tmp/ccad2L7I.s:1888   .text:0000000000000640 .L0 
     /tmp/ccad2L7I.s:1889   .text:0000000000000640 .L0 
     /tmp/ccad2L7I.s:1895   .text:0000000000000650 .L0 
     /tmp/ccad2L7I.s:1896   .text:0000000000000650 .L0 
     /tmp/ccad2L7I.s:1897   .text:0000000000000650 .L0 
  src/../h/riscv.hpp:125    .text:0000000000000650 .L0 
     /tmp/ccad2L7I.s:1905   .text:0000000000000658 .L0 
     /tmp/ccad2L7I.s:1906   .text:0000000000000658 .L0 
     /tmp/ccad2L7I.s:1910   .text:000000000000065c .L0 
     /tmp/ccad2L7I.s:1918   .text:0000000000000670 .L0 
     /tmp/ccad2L7I.s:1919   .text:0000000000000670 .L0 
     /tmp/ccad2L7I.s:1920   .text:0000000000000674 .L0 
     /tmp/ccad2L7I.s:1942   .text:0000000000000674 .L0 
     /tmp/ccad2L7I.s:114    .text:0000000000000044 .L0 
     /tmp/ccad2L7I.s:122    .text:0000000000000050 .L0 
     /tmp/ccad2L7I.s:124    .text:000000000000005c .L0 
     /tmp/ccad2L7I.s:128    .text:0000000000000068 .L0 
     /tmp/ccad2L7I.s:149    .text:0000000000000090 .L0 
     /tmp/ccad2L7I.s:193    .rodata:0000000000000000 .L26
     /tmp/ccad2L7I.s:185    .text:00000000000000d8 .L0 
     /tmp/ccad2L7I.s:284    .text:000000000000010c .L0 
     /tmp/ccad2L7I.s:292    .text:0000000000000120 .L0 
     /tmp/ccad2L7I.s:377    .text:0000000000000168 .L0 
     /tmp/ccad2L7I.s:437    .rodata:0000000000000110 .L15
     /tmp/ccad2L7I.s:429    .text:0000000000000198 .L0 
     /tmp/ccad2L7I.s:520    .text:00000000000001b4 .L0 
     /tmp/ccad2L7I.s:627    .text:0000000000000200 .L0 
     /tmp/ccad2L7I.s:815    .text:0000000000000298 .L0 
     /tmp/ccad2L7I.s:819    .text:00000000000002a4 .L0 
     /tmp/ccad2L7I.s:905    .text:00000000000002e8 .L0 
GAS LISTING /tmp/ccad2L7I.s 			page 66


     /tmp/ccad2L7I.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccad2L7I.s:999    .text:0000000000000334 .L0 
     /tmp/ccad2L7I.s:1099   .text:0000000000000384 .L0 
     /tmp/ccad2L7I.s:1187   .text:00000000000003c0 .L0 
     /tmp/ccad2L7I.s:1251   .text:00000000000003f4 .L0 
     /tmp/ccad2L7I.s:1439   .text:000000000000048c .L0 
     /tmp/ccad2L7I.s:1443   .text:0000000000000498 .L0 
     /tmp/ccad2L7I.s:1529   .text:00000000000004dc .L0 
     /tmp/ccad2L7I.s:47     .rodata.str1.8:0000000000000020 .LC1
     /tmp/ccad2L7I.s:1638   .text:0000000000000530 .L0 
     /tmp/ccad2L7I.s:1724   .text:0000000000000578 .L0 
     /tmp/ccad2L7I.s:50     .rodata.str1.8:0000000000000048 .LC2
     /tmp/ccad2L7I.s:1821   .text:00000000000005bc .L0 
     /tmp/ccad2L7I.s:53     .rodata.str1.8:0000000000000078 .LC3
     /tmp/ccad2L7I.s:1849   .text:00000000000005ec .L0 
     /tmp/ccad2L7I.s:56     .rodata.str1.8:0000000000000090 .LC4
     /tmp/ccad2L7I.s:1861   .text:0000000000000610 .L0 
     /tmp/ccad2L7I.s:59     .rodata.str1.8:00000000000000a8 .LC5
     /tmp/ccad2L7I.s:1889   .text:0000000000000640 .L0 
     /tmp/ccad2L7I.s:150    .text:0000000000000098 .L4
     /tmp/ccad2L7I.s:280    .text:000000000000010c .L5
     /tmp/ccad2L7I.s:264    .text:00000000000000f0 .L6
     /tmp/ccad2L7I.s:409    .text:0000000000000188 .L7
     /tmp/ccad2L7I.s:1798   .text:00000000000005b0 .L9
     /tmp/ccad2L7I.s:1682   .text:000000000000055c .L24
     /tmp/ccad2L7I.s:316    .text:0000000000000138 .L3
     /tmp/ccad2L7I.s:333    .text:0000000000000150 .L37
     /tmp/ccad2L7I.s:306    .text:0000000000000134 .L11
     /tmp/ccad2L7I.s:1057   .text:0000000000000368 .L13
     /tmp/ccad2L7I.s:571    .text:00000000000001e0 .L16
     /tmp/ccad2L7I.s:768    .text:0000000000000274 .L34
     /tmp/ccad2L7I.s:717    .text:0000000000000254 .L23
     /tmp/ccad2L7I.s:1392   .text:0000000000000468 .L35
     /tmp/ccad2L7I.s:1341   .text:0000000000000448 .L33
     /tmp/ccad2L7I.s:1173   .text:00000000000003bc .L32
     /tmp/ccad2L7I.s:1239   .text:00000000000003f0 .L31
     /tmp/ccad2L7I.s:1303   .text:0000000000000424 .L30
     /tmp/ccad2L7I.s:1397   .text:0000000000000470 .L29
     /tmp/ccad2L7I.s:1485   .text:00000000000004c0 .L28
     /tmp/ccad2L7I.s:1561   .text:00000000000004fc .L27
     /tmp/ccad2L7I.s:1619   .text:0000000000000528 .L25
     /tmp/ccad2L7I.s:507    .text:00000000000001b0 .L22
     /tmp/ccad2L7I.s:614    .text:00000000000001fc .L21
     /tmp/ccad2L7I.s:679    .text:0000000000000230 .L20
     /tmp/ccad2L7I.s:773    .text:000000000000027c .L19
     /tmp/ccad2L7I.s:861    .text:00000000000002cc .L18
     /tmp/ccad2L7I.s:937    .text:0000000000000308 .L17
     /tmp/ccad2L7I.s:995    .text:0000000000000334 .L14
     /tmp/ccad2L7I.s:4236   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccad2L7I.s:6041   .debug_str:000000000000070c .LASF135
     /tmp/ccad2L7I.s:6087   .debug_str:0000000000000923 .LASF136
     /tmp/ccad2L7I.s:6069   .debug_str:00000000000008a4 .LASF137
     /tmp/ccad2L7I.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccad2L7I.s:1938   .text:0000000000000674 .Letext0
     /tmp/ccad2L7I.s:5809   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccad2L7I.s:5907   .debug_str:0000000000000307 .LASF0
     /tmp/ccad2L7I.s:5931   .debug_str:0000000000000400 .LASF1
GAS LISTING /tmp/ccad2L7I.s 			page 67


     /tmp/ccad2L7I.s:5993   .debug_str:00000000000005c0 .LASF2
     /tmp/ccad2L7I.s:5999   .debug_str:00000000000005f0 .LASF4
     /tmp/ccad2L7I.s:5917   .debug_str:0000000000000365 .LASF3
     /tmp/ccad2L7I.s:5819   .debug_str:0000000000000044 .LASF5
     /tmp/ccad2L7I.s:5973   .debug_str:0000000000000535 .LASF6
     /tmp/ccad2L7I.s:5925   .debug_str:00000000000003d5 .LASF7
     /tmp/ccad2L7I.s:5881   .debug_str:0000000000000206 .LASF8
     /tmp/ccad2L7I.s:5889   .debug_str:0000000000000252 .LASF9
     /tmp/ccad2L7I.s:5835   .debug_str:00000000000000c4 .LASF10
     /tmp/ccad2L7I.s:5875   .debug_str:00000000000001e9 .LASF11
     /tmp/ccad2L7I.s:5849   .debug_str:000000000000012c .LASF12
     /tmp/ccad2L7I.s:5833   .debug_str:00000000000000b4 .LASF13
     /tmp/ccad2L7I.s:6027   .debug_str:00000000000006a5 .LASF14
     /tmp/ccad2L7I.s:5865   .debug_str:00000000000001ad .LASF15
     /tmp/ccad2L7I.s:6015   .debug_str:000000000000064d .LASF16
     /tmp/ccad2L7I.s:6031   .debug_str:00000000000006cc .LASF54
     /tmp/ccad2L7I.s:5859   .debug_str:0000000000000197 .LASF37
     /tmp/ccad2L7I.s:5841   .debug_str:00000000000000eb .LASF39
     /tmp/ccad2L7I.s:6001   .debug_str:00000000000005f7 .LASF21
     /tmp/ccad2L7I.s:5817   .debug_str:0000000000000038 .LASF23
     /tmp/ccad2L7I.s:6033   .debug_str:00000000000006d4 .LASF17
     /tmp/ccad2L7I.s:5957   .debug_str:00000000000004c0 .LASF19
     /tmp/ccad2L7I.s:5883   .debug_str:0000000000000216 .LASF18
     /tmp/ccad2L7I.s:6035   .debug_str:00000000000006df .LASF20
     /tmp/ccad2L7I.s:5829   .debug_str:000000000000009a .LASF22
     /tmp/ccad2L7I.s:6055   .debug_str:0000000000000827 .LASF24
     /tmp/ccad2L7I.s:5981   .debug_str:000000000000056d .LASF25
     /tmp/ccad2L7I.s:5897   .debug_str:00000000000002b9 .LASF26
     /tmp/ccad2L7I.s:5937   .debug_str:0000000000000422 .LASF27
     /tmp/ccad2L7I.s:6063   .debug_str:0000000000000877 .LASF28
     /tmp/ccad2L7I.s:6025   .debug_str:0000000000000698 .LASF29
     /tmp/ccad2L7I.s:5893   .debug_str:000000000000028b .LASF30
     /tmp/ccad2L7I.s:5969   .debug_str:0000000000000520 .LASF138
     /tmp/ccad2L7I.s:6099   .debug_str:0000000000000970 .LASF31
     /tmp/ccad2L7I.s:5915   .debug_str:0000000000000346 .LASF32
     /tmp/ccad2L7I.s:6059   .debug_str:0000000000000858 .LASF33
     /tmp/ccad2L7I.s:5887   .debug_str:0000000000000232 .LASF34
     /tmp/ccad2L7I.s:6081   .debug_str:00000000000008fe .LASF35
     /tmp/ccad2L7I.s:6029   .debug_str:00000000000006b1 .LASF36
     /tmp/ccad2L7I.s:5935   .debug_str:000000000000041c .LASF38
     /tmp/ccad2L7I.s:6045   .debug_str:00000000000007d5 .LASF40
     /tmp/ccad2L7I.s:6037   .debug_str:00000000000006f7 .LASF139
     /tmp/ccad2L7I.s:6009   .debug_str:0000000000000627 .LASF140
     /tmp/ccad2L7I.s:5987   .debug_str:00000000000005a1 .LASF41
     /tmp/ccad2L7I.s:5909   .debug_str:0000000000000314 .LASF61
     /tmp/ccad2L7I.s:5813   .debug_str:000000000000000b .LASF42
     /tmp/ccad2L7I.s:6097   .debug_str:000000000000096a .LASF43
     /tmp/ccad2L7I.s:6051   .debug_str:00000000000007f8 .LASF44
     /tmp/ccad2L7I.s:6047   .debug_str:00000000000007e5 .LASF45
     /tmp/ccad2L7I.s:6013   .debug_str:0000000000000644 .LASF46
     /tmp/ccad2L7I.s:5967   .debug_str:0000000000000516 .LASF47
     /tmp/ccad2L7I.s:5847   .debug_str:0000000000000126 .LASF48
     /tmp/ccad2L7I.s:5831   .debug_str:00000000000000a6 .LASF49
     /tmp/ccad2L7I.s:6057   .debug_str:000000000000083e .LASF51
     /tmp/ccad2L7I.s:5851   .debug_str:000000000000013c .LASF50
     /tmp/ccad2L7I.s:5815   .debug_str:0000000000000010 .LASF52
     /tmp/ccad2L7I.s:6007   .debug_str:0000000000000616 .LASF141
GAS LISTING /tmp/ccad2L7I.s 			page 68


     /tmp/ccad2L7I.s:6091   .debug_str:000000000000093d .LASF142
     /tmp/ccad2L7I.s:5971   .debug_str:0000000000000525 .LASF53
     /tmp/ccad2L7I.s:5877   .debug_str:00000000000001f8 .LASF55
     /tmp/ccad2L7I.s:5929   .debug_str:00000000000003fb .LASF56
     /tmp/ccad2L7I.s:5837   .debug_str:00000000000000d3 .LASF57
     /tmp/ccad2L7I.s:5821   .debug_str:000000000000004b .LASF58
     /tmp/ccad2L7I.s:6061   .debug_str:0000000000000868 .LASF59
     /tmp/ccad2L7I.s:6053   .debug_str:0000000000000800 .LASF60
     /tmp/ccad2L7I.s:5827   .debug_str:0000000000000081 .LASF62
     /tmp/ccad2L7I.s:6049   .debug_str:00000000000007ef .LASF63
     /tmp/ccad2L7I.s:5871   .debug_str:00000000000001d7 .LASF64
     /tmp/ccad2L7I.s:5891   .debug_str:0000000000000260 .LASF65
     /tmp/ccad2L7I.s:6089   .debug_str:0000000000000931 .LASF83
     /tmp/ccad2L7I.s:5955   .debug_str:000000000000049c .LASF85
     /tmp/ccad2L7I.s:5941   .debug_str:0000000000000437 .LASF66
     /tmp/ccad2L7I.s:5923   .debug_str:00000000000003b5 .LASF67
     /tmp/ccad2L7I.s:5863   .debug_str:00000000000001a6 .LASF68
     /tmp/ccad2L7I.s:5845   .debug_str:0000000000000107 .LASF69
     /tmp/ccad2L7I.s:6103   .debug_str:0000000000000992 .LASF70
     /tmp/ccad2L7I.s:6073   .debug_str:00000000000008c9 .LASF71
     /tmp/ccad2L7I.s:5919   .debug_str:0000000000000377 .LASF72
     /tmp/ccad2L7I.s:5995   .debug_str:00000000000005ce .LASF73
     /tmp/ccad2L7I.s:5963   .debug_str:00000000000004e6 .LASF74
     /tmp/ccad2L7I.s:6105   .debug_str:0000000000000998 .LASF75
     /tmp/ccad2L7I.s:5947   .debug_str:000000000000046e .LASF76
     /tmp/ccad2L7I.s:6075   .debug_str:00000000000008e6 .LASF77
     /tmp/ccad2L7I.s:6065   .debug_str:0000000000000890 .LASF143
     /tmp/ccad2L7I.s:5873   .debug_str:00000000000001dd .LASF78
     /tmp/ccad2L7I.s:6039   .debug_str:00000000000006ff .LASF79
     /tmp/ccad2L7I.s:5855   .debug_str:0000000000000179 .LASF80
     /tmp/ccad2L7I.s:5895   .debug_str:00000000000002ae .LASF81
     /tmp/ccad2L7I.s:5905   .debug_str:00000000000002ef .LASF82
     /tmp/ccad2L7I.s:5933   .debug_str:0000000000000413 .LASF84
     /tmp/ccad2L7I.s:5945   .debug_str:0000000000000459 .LASF86
     /tmp/ccad2L7I.s:5989   .debug_str:00000000000005ac .LASF87
     /tmp/ccad2L7I.s:5823   .debug_str:0000000000000050 .LASF88
     /tmp/ccad2L7I.s:5979   .debug_str:0000000000000566 .LASF89
     /tmp/ccad2L7I.s:5983   .debug_str:000000000000057a .LASF90
     /tmp/ccad2L7I.s:5961   .debug_str:00000000000004df .LASF91
     /tmp/ccad2L7I.s:5927   .debug_str:00000000000003e8 .LASF92
     /tmp/ccad2L7I.s:6085   .debug_str:000000000000091b .LASF93
     /tmp/ccad2L7I.s:6023   .debug_str:0000000000000684 .LASF94
     /tmp/ccad2L7I.s:5959   .debug_str:00000000000004d7 .LASF95
     /tmp/ccad2L7I.s:5965   .debug_str:0000000000000502 .LASF96
     /tmp/ccad2L7I.s:5939   .debug_str:000000000000042f .LASF97
     /tmp/ccad2L7I.s:5985   .debug_str:000000000000058d .LASF98
     /tmp/ccad2L7I.s:6107   .debug_str:00000000000009a1 .LASF99
     /tmp/ccad2L7I.s:5913   .debug_str:0000000000000332 .LASF100
     /tmp/ccad2L7I.s:6021   .debug_str:000000000000067d .LASF101
     /tmp/ccad2L7I.s:6003   .debug_str:00000000000005fc .LASF102
     /tmp/ccad2L7I.s:6005   .debug_str:000000000000060f .LASF103
     /tmp/ccad2L7I.s:5839   .debug_str:00000000000000d8 .LASF104
     /tmp/ccad2L7I.s:6077   .debug_str:00000000000008ec .LASF105
     /tmp/ccad2L7I.s:6093   .debug_str:0000000000000948 .LASF106
     /tmp/ccad2L7I.s:6071   .debug_str:00000000000008bf .LASF107
     /tmp/ccad2L7I.s:5951   .debug_str:000000000000047f .LASF108
     /tmp/ccad2L7I.s:5811   .debug_str:0000000000000000 .LASF109
GAS LISTING /tmp/ccad2L7I.s 			page 69


     /tmp/ccad2L7I.s:5997   .debug_str:00000000000005d8 .LASF110
     /tmp/ccad2L7I.s:5991   .debug_str:00000000000005b5 .LASF111
     /tmp/ccad2L7I.s:6101   .debug_str:000000000000097a .LASF112
     /tmp/ccad2L7I.s:5861   .debug_str:00000000000001a0 .LASF113
     /tmp/ccad2L7I.s:5901   .debug_str:00000000000002d7 .LASF114
     /tmp/ccad2L7I.s:5911   .debug_str:000000000000032c .LASF115
     /tmp/ccad2L7I.s:5857   .debug_str:0000000000000185 .LASF116
     /tmp/ccad2L7I.s:6083   .debug_str:000000000000090c .LASF117
     /tmp/ccad2L7I.s:5825   .debug_str:0000000000000065 .LASF118
     /tmp/ccad2L7I.s:5977   .debug_str:0000000000000551 .LASF144
     /tmp/ccad2L7I.s:5921   .debug_str:0000000000000393 .LASF145
     /tmp/ccad2L7I.s:66     .text:0000000000000020 .LFB43
     /tmp/ccad2L7I.s:1921   .text:0000000000000674 .LFE43
     /tmp/ccad2L7I.s:6017   .debug_str:0000000000000663 .LASF119
     /tmp/ccad2L7I.s:5314   .debug_loc:0000000000000000 .LLST0
     /tmp/ccad2L7I.s:6043   .debug_str:00000000000007d0 .LASF120
     /tmp/ccad2L7I.s:5337   .debug_loc:000000000000006f .LLST1
     /tmp/ccad2L7I.s:6079   .debug_str:00000000000008f6 .LASF121
     /tmp/ccad2L7I.s:5356   .debug_loc:00000000000000cb .LLST2
     /tmp/ccad2L7I.s:5953   .debug_str:0000000000000495 .LASF122
     /tmp/ccad2L7I.s:5375   .debug_loc:0000000000000127 .LLST3
     /tmp/ccad2L7I.s:5386   .debug_loc:000000000000015d .LLST4
     /tmp/ccad2L7I.s:5397   .debug_loc:0000000000000193 .LLST5
     /tmp/ccad2L7I.s:5408   .debug_loc:00000000000001c9 .LLST6
     /tmp/ccad2L7I.s:5949   .debug_str:0000000000000473 .LASF123
     /tmp/ccad2L7I.s:5419   .debug_loc:00000000000001ff .LLST7
     /tmp/ccad2L7I.s:5867   .debug_str:00000000000001c3 .LASF124
     /tmp/ccad2L7I.s:5430   .debug_loc:0000000000000235 .LLST8
     /tmp/ccad2L7I.s:6011   .debug_str:000000000000063f .LASF125
     /tmp/ccad2L7I.s:5441   .debug_loc:000000000000026b .LLST9
     /tmp/ccad2L7I.s:5452   .debug_loc:00000000000002a1 .LLST10
     /tmp/ccad2L7I.s:5471   .debug_loc:00000000000002fd .LLST11
     /tmp/ccad2L7I.s:5482   .debug_loc:0000000000000333 .LLST12
     /tmp/ccad2L7I.s:338    .text:0000000000000150 .LBB158
     /tmp/ccad2L7I.s:412    .text:0000000000000188 .LBE158
     /tmp/ccad2L7I.s:5493   .debug_loc:0000000000000369 .LLST15
     /tmp/ccad2L7I.s:5500   .debug_loc:000000000000038c .LLST16
     /tmp/ccad2L7I.s:340    .text:0000000000000150 .LBB159
     /tmp/ccad2L7I.s:356    .text:000000000000015c .LBE159
     /tmp/ccad2L7I.s:358    .text:000000000000015c .LBB161
     /tmp/ccad2L7I.s:374    .text:0000000000000168 .LBE161
     /tmp/ccad2L7I.s:384    .text:000000000000017c .LBB163
     /tmp/ccad2L7I.s:395    .text:0000000000000180 .LBE163
     /tmp/ccad2L7I.s:5507   .debug_loc:00000000000003af .LLST17
     /tmp/ccad2L7I.s:397    .text:0000000000000180 .LBB165
     /tmp/ccad2L7I.s:411    .text:0000000000000188 .LBE165
     /tmp/ccad2L7I.s:5514   .debug_loc:00000000000003d2 .LLST18
     /tmp/ccad2L7I.s:382    .text:000000000000017c .LVL15
     /tmp/ccad2L7I.s:5801   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccad2L7I.s:5521   .debug_loc:00000000000003f5 .LLST19
     /tmp/ccad2L7I.s:5528   .debug_loc:0000000000000418 .LLST20
     /tmp/ccad2L7I.s:531    .text:00000000000001c8 .LBB169
     /tmp/ccad2L7I.s:546    .text:00000000000001d4 .LBE169
     /tmp/ccad2L7I.s:550    .text:00000000000001d8 .LBB171
     /tmp/ccad2L7I.s:561    .text:00000000000001dc .LBE171
     /tmp/ccad2L7I.s:5535   .debug_loc:000000000000043b .LLST21
     /tmp/ccad2L7I.s:638    .text:0000000000000214 .LBB173
GAS LISTING /tmp/ccad2L7I.s 			page 70


     /tmp/ccad2L7I.s:653    .text:0000000000000220 .LBE173
     /tmp/ccad2L7I.s:657    .text:0000000000000224 .LBB175
     /tmp/ccad2L7I.s:668    .text:0000000000000228 .LBE175
     /tmp/ccad2L7I.s:5542   .debug_loc:000000000000045e .LLST22
     /tmp/ccad2L7I.s:727    .text:0000000000000258 .LBB177
     /tmp/ccad2L7I.s:743    .text:0000000000000264 .LBE177
     /tmp/ccad2L7I.s:747    .text:0000000000000268 .LBB179
     /tmp/ccad2L7I.s:758    .text:000000000000026c .LBE179
     /tmp/ccad2L7I.s:5549   .debug_loc:0000000000000481 .LLST23
     /tmp/ccad2L7I.s:776    .text:000000000000027c .LBB181
     /tmp/ccad2L7I.s:791    .text:0000000000000288 .LBE181
     /tmp/ccad2L7I.s:796    .text:000000000000028c .LBB183
     /tmp/ccad2L7I.s:812    .text:0000000000000298 .LBE183
     /tmp/ccad2L7I.s:822    .text:00000000000002b0 .LBB185
     /tmp/ccad2L7I.s:830    .text:00000000000002b8 .LBE185
     /tmp/ccad2L7I.s:5556   .debug_loc:00000000000004a4 .LLST24
     /tmp/ccad2L7I.s:5564   .debug_loc:00000000000004c8 .LLST25
     /tmp/ccad2L7I.s:836    .text:00000000000002c0 .LBB187
     /tmp/ccad2L7I.s:847    .text:00000000000002c4 .LBE187
     /tmp/ccad2L7I.s:5571   .debug_loc:00000000000004eb .LLST26
     /tmp/ccad2L7I.s:849    .text:00000000000002c4 .LBB189
     /tmp/ccad2L7I.s:863    .text:00000000000002cc .LBE189
     /tmp/ccad2L7I.s:5578   .debug_loc:000000000000050e .LLST27
     /tmp/ccad2L7I.s:866    .text:00000000000002cc .LBB191
     /tmp/ccad2L7I.s:881    .text:00000000000002d8 .LBE191
     /tmp/ccad2L7I.s:886    .text:00000000000002dc .LBB193
     /tmp/ccad2L7I.s:902    .text:00000000000002e8 .LBE193
     /tmp/ccad2L7I.s:912    .text:00000000000002fc .LBB195
     /tmp/ccad2L7I.s:923    .text:0000000000000300 .LBE195
     /tmp/ccad2L7I.s:5585   .debug_loc:0000000000000531 .LLST28
     /tmp/ccad2L7I.s:925    .text:0000000000000300 .LBB197
     /tmp/ccad2L7I.s:939    .text:0000000000000308 .LBE197
     /tmp/ccad2L7I.s:5592   .debug_loc:0000000000000554 .LLST29
     /tmp/ccad2L7I.s:955    .text:0000000000000318 .LBB199
     /tmp/ccad2L7I.s:970    .text:0000000000000324 .LBE199
     /tmp/ccad2L7I.s:974    .text:0000000000000328 .LBB201
     /tmp/ccad2L7I.s:985    .text:000000000000032c .LBE201
     /tmp/ccad2L7I.s:5599   .debug_loc:0000000000000577 .LLST30
     /tmp/ccad2L7I.s:1003   .text:0000000000000344 .LBB203
     /tmp/ccad2L7I.s:1015   .text:000000000000034c .LBE203
     /tmp/ccad2L7I.s:5606   .debug_loc:000000000000059a .LLST31
     /tmp/ccad2L7I.s:1017   .text:000000000000034c .LBB205
     /tmp/ccad2L7I.s:1032   .text:0000000000000358 .LBE205
     /tmp/ccad2L7I.s:1036   .text:000000000000035c .LBB207
     /tmp/ccad2L7I.s:1047   .text:0000000000000360 .LBE207
     /tmp/ccad2L7I.s:5615   .debug_loc:00000000000005c0 .LLST32
     /tmp/ccad2L7I.s:1060   .text:0000000000000368 .LBB209
     /tmp/ccad2L7I.s:1075   .text:0000000000000374 .LBE209
     /tmp/ccad2L7I.s:1080   .text:0000000000000378 .LBB211
     /tmp/ccad2L7I.s:1096   .text:0000000000000384 .LBE211
     /tmp/ccad2L7I.s:1106   .text:0000000000000398 .LBB213
     /tmp/ccad2L7I.s:1117   .text:000000000000039c .LBE213
     /tmp/ccad2L7I.s:5622   .debug_loc:00000000000005e3 .LLST33
     /tmp/ccad2L7I.s:1119   .text:000000000000039c .LBB215
     /tmp/ccad2L7I.s:1130   .text:00000000000003a0 .LBE215
     /tmp/ccad2L7I.s:5629   .debug_loc:0000000000000606 .LLST34
     /tmp/ccad2L7I.s:1132   .text:00000000000003a0 .LBB217
GAS LISTING /tmp/ccad2L7I.s 			page 71


     /tmp/ccad2L7I.s:1147   .text:00000000000003ac .LBE217
     /tmp/ccad2L7I.s:1151   .text:00000000000003b0 .LBB219
     /tmp/ccad2L7I.s:1162   .text:00000000000003b4 .LBE219
     /tmp/ccad2L7I.s:5636   .debug_loc:0000000000000629 .LLST35
     /tmp/ccad2L7I.s:522    .text:00000000000001c4 .LVL22
     /tmp/ccad2L7I.s:629    .text:0000000000000210 .LVL29
     /tmp/ccad2L7I.s:710    .text:0000000000000248 .LVL37
     /tmp/ccad2L7I.s:834    .text:00000000000002c0 .LVL47
     /tmp/ccad2L7I.s:910    .text:00000000000002fc .LVL52
     /tmp/ccad2L7I.s:953    .text:0000000000000318 .LVL56
     /tmp/ccad2L7I.s:1001   .text:0000000000000344 .LVL59
     /tmp/ccad2L7I.s:1104   .text:0000000000000398 .LVL65
     /tmp/ccad2L7I.s:1175   .text:00000000000003bc .LBB226
     /tmp/ccad2L7I.s:1799   .text:00000000000005b0 .LBE226
     /tmp/ccad2L7I.s:5643   .debug_loc:000000000000064c .LLST37
     /tmp/ccad2L7I.s:5650   .debug_loc:000000000000066f .LLST38
     /tmp/ccad2L7I.s:1198   .text:00000000000003d4 .LBB227
     /tmp/ccad2L7I.s:1213   .text:00000000000003e0 .LBE227
     /tmp/ccad2L7I.s:1217   .text:00000000000003e4 .LBB229
     /tmp/ccad2L7I.s:1228   .text:00000000000003e8 .LBE229
     /tmp/ccad2L7I.s:5657   .debug_loc:0000000000000692 .LLST39
     /tmp/ccad2L7I.s:1262   .text:0000000000000408 .LBB231
     /tmp/ccad2L7I.s:1277   .text:0000000000000414 .LBE231
     /tmp/ccad2L7I.s:1281   .text:0000000000000418 .LBB233
     /tmp/ccad2L7I.s:1292   .text:000000000000041c .LBE233
     /tmp/ccad2L7I.s:5664   .debug_loc:00000000000006b5 .LLST40
     /tmp/ccad2L7I.s:1351   .text:000000000000044c .LBB235
     /tmp/ccad2L7I.s:1367   .text:0000000000000458 .LBE235
     /tmp/ccad2L7I.s:1371   .text:000000000000045c .LBB237
     /tmp/ccad2L7I.s:1382   .text:0000000000000460 .LBE237
     /tmp/ccad2L7I.s:5671   .debug_loc:00000000000006d8 .LLST41
     /tmp/ccad2L7I.s:1400   .text:0000000000000470 .LBB239
     /tmp/ccad2L7I.s:1415   .text:000000000000047c .LBE239
     /tmp/ccad2L7I.s:1420   .text:0000000000000480 .LBB241
     /tmp/ccad2L7I.s:1436   .text:000000000000048c .LBE241
     /tmp/ccad2L7I.s:1446   .text:00000000000004a4 .LBB243
     /tmp/ccad2L7I.s:1454   .text:00000000000004ac .LBE243
     /tmp/ccad2L7I.s:5678   .debug_loc:00000000000006fb .LLST42
     /tmp/ccad2L7I.s:5686   .debug_loc:000000000000071f .LLST43
     /tmp/ccad2L7I.s:1460   .text:00000000000004b4 .LBB245
     /tmp/ccad2L7I.s:1471   .text:00000000000004b8 .LBE245
     /tmp/ccad2L7I.s:5693   .debug_loc:0000000000000742 .LLST44
     /tmp/ccad2L7I.s:1473   .text:00000000000004b8 .LBB247
     /tmp/ccad2L7I.s:1487   .text:00000000000004c0 .LBE247
     /tmp/ccad2L7I.s:5700   .debug_loc:0000000000000765 .LLST45
     /tmp/ccad2L7I.s:1490   .text:00000000000004c0 .LBB249
     /tmp/ccad2L7I.s:1505   .text:00000000000004cc .LBE249
     /tmp/ccad2L7I.s:1510   .text:00000000000004d0 .LBB251
     /tmp/ccad2L7I.s:1526   .text:00000000000004dc .LBE251
     /tmp/ccad2L7I.s:1536   .text:00000000000004f0 .LBB253
     /tmp/ccad2L7I.s:1547   .text:00000000000004f4 .LBE253
     /tmp/ccad2L7I.s:5707   .debug_loc:0000000000000788 .LLST46
     /tmp/ccad2L7I.s:1549   .text:00000000000004f4 .LBB255
     /tmp/ccad2L7I.s:1563   .text:00000000000004fc .LBE255
     /tmp/ccad2L7I.s:5714   .debug_loc:00000000000007ab .LLST47
     /tmp/ccad2L7I.s:1579   .text:000000000000050c .LBB257
     /tmp/ccad2L7I.s:1594   .text:0000000000000518 .LBE257
GAS LISTING /tmp/ccad2L7I.s 			page 72


     /tmp/ccad2L7I.s:1598   .text:000000000000051c .LBB259
     /tmp/ccad2L7I.s:1609   .text:0000000000000520 .LBE259
     /tmp/ccad2L7I.s:5721   .debug_loc:00000000000007ce .LLST48
     /tmp/ccad2L7I.s:1623   .text:0000000000000528 .LBB261
     /tmp/ccad2L7I.s:1635   .text:0000000000000530 .LBE261
     /tmp/ccad2L7I.s:5728   .debug_loc:00000000000007f1 .LLST49
     /tmp/ccad2L7I.s:1642   .text:0000000000000540 .LBB263
     /tmp/ccad2L7I.s:1657   .text:000000000000054c .LBE263
     /tmp/ccad2L7I.s:1661   .text:0000000000000550 .LBB265
     /tmp/ccad2L7I.s:1672   .text:0000000000000554 .LBE265
     /tmp/ccad2L7I.s:5737   .debug_loc:0000000000000817 .LLST50
     /tmp/ccad2L7I.s:1685   .text:000000000000055c .LBB267
     /tmp/ccad2L7I.s:1700   .text:0000000000000568 .LBE267
     /tmp/ccad2L7I.s:1705   .text:000000000000056c .LBB269
     /tmp/ccad2L7I.s:1721   .text:0000000000000578 .LBE269
     /tmp/ccad2L7I.s:1731   .text:000000000000058c .LBB271
     /tmp/ccad2L7I.s:1742   .text:0000000000000590 .LBE271
     /tmp/ccad2L7I.s:5744   .debug_loc:000000000000083a .LLST51
     /tmp/ccad2L7I.s:1744   .text:0000000000000590 .LBB273
     /tmp/ccad2L7I.s:1755   .text:0000000000000594 .LBE273
     /tmp/ccad2L7I.s:5751   .debug_loc:000000000000085d .LLST52
     /tmp/ccad2L7I.s:1757   .text:0000000000000594 .LBB275
     /tmp/ccad2L7I.s:1772   .text:00000000000005a0 .LBE275
     /tmp/ccad2L7I.s:1776   .text:00000000000005a4 .LBB277
     /tmp/ccad2L7I.s:1787   .text:00000000000005a8 .LBE277
     /tmp/ccad2L7I.s:5758   .debug_loc:0000000000000880 .LLST53
     /tmp/ccad2L7I.s:1189   .text:00000000000003d0 .LVL72
     /tmp/ccad2L7I.s:1253   .text:0000000000000404 .LVL77
     /tmp/ccad2L7I.s:1334   .text:000000000000043c .LVL85
     /tmp/ccad2L7I.s:1458   .text:00000000000004b4 .LVL95
     /tmp/ccad2L7I.s:1534   .text:00000000000004f0 .LVL100
     /tmp/ccad2L7I.s:1577   .text:000000000000050c .LVL104
     /tmp/ccad2L7I.s:1640   .text:0000000000000540 .LVL109
     /tmp/ccad2L7I.s:1729   .text:000000000000058c .LVL114
     /tmp/ccad2L7I.s:82     .text:0000000000000038 .LBB146
     /tmp/ccad2L7I.s:99     .text:0000000000000044 .LBE146
     /tmp/ccad2L7I.s:109    .text:0000000000000044 .LBB148
     /tmp/ccad2L7I.s:154    .text:0000000000000098 .LBE148
     /tmp/ccad2L7I.s:117    .text:0000000000000050 .LBB150
     /tmp/ccad2L7I.s:147    .text:0000000000000090 .LBE150
     /tmp/ccad2L7I.s:5765   .debug_loc:00000000000008a3 .LLST13
     /tmp/ccad2L7I.s:295    .text:000000000000012c .LBB156
     /tmp/ccad2L7I.s:303    .text:0000000000000130 .LBE156
     /tmp/ccad2L7I.s:5774   .debug_loc:00000000000008cf .LLST14
     /tmp/ccad2L7I.s:574    .text:00000000000001e0 .LBB221
     /tmp/ccad2L7I.s:589    .text:00000000000001ec .LBE221
     /tmp/ccad2L7I.s:593    .text:00000000000001f0 .LBB223
     /tmp/ccad2L7I.s:604    .text:00000000000001f4 .LBE223
     /tmp/ccad2L7I.s:5781   .debug_loc:00000000000008f2 .LLST36
     /tmp/ccad2L7I.s:1802   .text:00000000000005b0 .LBB279
     /tmp/ccad2L7I.s:1818   .text:00000000000005bc .LBE279
     /tmp/ccad2L7I.s:1825   .text:00000000000005cc .LBB281
     /tmp/ccad2L7I.s:1840   .text:00000000000005d8 .LBE281
     /tmp/ccad2L7I.s:1865   .text:0000000000000620 .LBB283
     /tmp/ccad2L7I.s:1880   .text:000000000000062c .LBE283
     /tmp/ccad2L7I.s:1893   .text:0000000000000650 .LBB285
     /tmp/ccad2L7I.s:1908   .text:000000000000065c .LBE285
GAS LISTING /tmp/ccad2L7I.s 			page 73


     /tmp/ccad2L7I.s:276    .text:0000000000000108 .LVL8
     /tmp/ccad2L7I.s:1823   .text:00000000000005cc .LVL121
     /tmp/ccad2L7I.s:1846   .text:00000000000005ec .LVL122
     /tmp/ccad2L7I.s:1851   .text:00000000000005fc .LVL123
     /tmp/ccad2L7I.s:1858   .text:0000000000000610 .LVL124
     /tmp/ccad2L7I.s:1863   .text:0000000000000620 .LVL125
     /tmp/ccad2L7I.s:1886   .text:0000000000000640 .LVL126
     /tmp/ccad2L7I.s:1891   .text:0000000000000650 .LVL127
     /tmp/ccad2L7I.s:1914   .text:0000000000000670 .LVL128
     /tmp/ccad2L7I.s:10     .text:0000000000000000 .LFB42
     /tmp/ccad2L7I.s:40     .text:0000000000000020 .LFE42
     /tmp/ccad2L7I.s:6067   .debug_str:000000000000089f .LASF126
     /tmp/ccad2L7I.s:5903   .debug_str:00000000000002e9 .LASF127
     /tmp/ccad2L7I.s:5879   .debug_str:0000000000000201 .LASF128
     /tmp/ccad2L7I.s:5899   .debug_str:00000000000002d1 .LASF129
     /tmp/ccad2L7I.s:5843   .debug_str:00000000000000fe .LASF146
     /tmp/ccad2L7I.s:5853   .debug_str:000000000000014a .LASF147
     /tmp/ccad2L7I.s:5943   .debug_str:0000000000000440 .LASF148
     /tmp/ccad2L7I.s:6019   .debug_str:000000000000066a .LASF130
     /tmp/ccad2L7I.s:6095   .debug_str:000000000000095e .LASF132
     /tmp/ccad2L7I.s:5885   .debug_str:0000000000000222 .LASF131
     /tmp/ccad2L7I.s:5869   .debug_str:00000000000001c8 .LASF133
     /tmp/ccad2L7I.s:5975   .debug_str:0000000000000548 .LASF134
     /tmp/ccad2L7I.s:97     .text:0000000000000044 .LVL0
     /tmp/ccad2L7I.s:181    .text:00000000000000d0 .LVL5
     /tmp/ccad2L7I.s:263    .text:00000000000000f0 .LVL7
     /tmp/ccad2L7I.s:279    .text:000000000000010c .LVL9
     /tmp/ccad2L7I.s:285    .text:0000000000000114 .LVL10
     /tmp/ccad2L7I.s:408    .text:0000000000000188 .LVL17
     /tmp/ccad2L7I.s:425    .text:0000000000000190 .LVL19
     /tmp/ccad2L7I.s:1797   .text:00000000000005b0 .LVL119
     /tmp/ccad2L7I.s:794    .text:000000000000028c .LVL43
     /tmp/ccad2L7I.s:860    .text:00000000000002cc .LVL49
     /tmp/ccad2L7I.s:884    .text:00000000000002dc .LVL50
     /tmp/ccad2L7I.s:936    .text:0000000000000308 .LVL54
     /tmp/ccad2L7I.s:1418   .text:0000000000000480 .LVL91
     /tmp/ccad2L7I.s:1484   .text:00000000000004c0 .LVL97
     /tmp/ccad2L7I.s:1508   .text:00000000000004d0 .LVL98
     /tmp/ccad2L7I.s:1560   .text:00000000000004fc .LVL102
     /tmp/ccad2L7I.s:810    .text:0000000000000298 .LVL44
     /tmp/ccad2L7I.s:900    .text:00000000000002e8 .LVL51
     /tmp/ccad2L7I.s:1434   .text:000000000000048c .LVL92
     /tmp/ccad2L7I.s:1524   .text:00000000000004dc .LVL99
     /tmp/ccad2L7I.s:687    .text:0000000000000234 .LVL33
     /tmp/ccad2L7I.s:772    .text:000000000000027c .LVL42
     /tmp/ccad2L7I.s:1311   .text:0000000000000428 .LVL81
     /tmp/ccad2L7I.s:1396   .text:0000000000000470 .LVL90
     /tmp/ccad2L7I.s:693    .text:0000000000000238 .LVL34
     /tmp/ccad2L7I.s:1317   .text:000000000000042c .LVL82
     /tmp/ccad2L7I.s:947    .text:000000000000030c .LVL55
     /tmp/ccad2L7I.s:1571   .text:0000000000000500 .LVL103
     /tmp/ccad2L7I.s:699    .text:000000000000023c .LVL35
     /tmp/ccad2L7I.s:1323   .text:0000000000000430 .LVL83
     /tmp/ccad2L7I.s:705    .text:0000000000000240 .LVL36
     /tmp/ccad2L7I.s:1329   .text:0000000000000434 .LVL84
     /tmp/ccad2L7I.s:177    .text:00000000000000cc .LVL4
     /tmp/ccad2L7I.s:184    .text:00000000000000d8 .LVL6
GAS LISTING /tmp/ccad2L7I.s 			page 74


     /tmp/ccad2L7I.s:421    .text:000000000000018c .LVL18
     /tmp/ccad2L7I.s:428    .text:0000000000000198 .LVL20
     /tmp/ccad2L7I.s:516    .text:00000000000001b4 .LVL21
     /tmp/ccad2L7I.s:1183   .text:00000000000003c0 .LVL71
     /tmp/ccad2L7I.s:678    .text:0000000000000230 .LVL32
     /tmp/ccad2L7I.s:718    .text:0000000000000254 .LVL38
     /tmp/ccad2L7I.s:736    .text:000000000000025c .LVL39
     /tmp/ccad2L7I.s:1302   .text:0000000000000424 .LVL80
     /tmp/ccad2L7I.s:1342   .text:0000000000000448 .LVL86
     /tmp/ccad2L7I.s:1360   .text:0000000000000450 .LVL87
     /tmp/ccad2L7I.s:569    .text:00000000000001e0 .LVL25
     /tmp/ccad2L7I.s:1238   .text:00000000000003f0 .LVL75
     /tmp/ccad2L7I.s:623    .text:0000000000000200 .LVL28
     /tmp/ccad2L7I.s:1247   .text:00000000000003f4 .LVL76
     /tmp/ccad2L7I.s:354    .text:000000000000015c .LVL13
     /tmp/ccad2L7I.s:372    .text:0000000000000168 .LVL14
     /tmp/ccad2L7I.s:392    .text:0000000000000180 .LVL16
     /tmp/ccad2L7I.s:1078   .text:0000000000000378 .LVL63
     /tmp/ccad2L7I.s:1172   .text:00000000000003bc .LVL70
     /tmp/ccad2L7I.s:1094   .text:0000000000000384 .LVL64
     /tmp/ccad2L7I.s:549    .text:00000000000001d8 .LVL23
     /tmp/ccad2L7I.s:558    .text:00000000000001dc .LVL24
     /tmp/ccad2L7I.s:656    .text:0000000000000224 .LVL30
     /tmp/ccad2L7I.s:665    .text:0000000000000228 .LVL31
     /tmp/ccad2L7I.s:746    .text:0000000000000268 .LVL40
     /tmp/ccad2L7I.s:755    .text:000000000000026c .LVL41
     /tmp/ccad2L7I.s:821    .text:00000000000002b0 .LVL45
     /tmp/ccad2L7I.s:828    .text:00000000000002b8 .LVL46
     /tmp/ccad2L7I.s:844    .text:00000000000002c4 .LVL48
     /tmp/ccad2L7I.s:920    .text:0000000000000300 .LVL53
     /tmp/ccad2L7I.s:973    .text:0000000000000328 .LVL57
     /tmp/ccad2L7I.s:982    .text:000000000000032c .LVL58
     /tmp/ccad2L7I.s:1012   .text:000000000000034c .LVL60
     /tmp/ccad2L7I.s:1035   .text:000000000000035c .LVL61
     /tmp/ccad2L7I.s:1044   .text:0000000000000360 .LVL62
     /tmp/ccad2L7I.s:1114   .text:000000000000039c .LVL66
     /tmp/ccad2L7I.s:1127   .text:00000000000003a0 .LVL67
     /tmp/ccad2L7I.s:1150   .text:00000000000003b0 .LVL68
     /tmp/ccad2L7I.s:1159   .text:00000000000003b4 .LVL69
     /tmp/ccad2L7I.s:1703   .text:000000000000056c .LVL112
     /tmp/ccad2L7I.s:1719   .text:0000000000000578 .LVL113
     /tmp/ccad2L7I.s:1216   .text:00000000000003e4 .LVL73
     /tmp/ccad2L7I.s:1225   .text:00000000000003e8 .LVL74
     /tmp/ccad2L7I.s:1280   .text:0000000000000418 .LVL78
     /tmp/ccad2L7I.s:1289   .text:000000000000041c .LVL79
     /tmp/ccad2L7I.s:1370   .text:000000000000045c .LVL88
     /tmp/ccad2L7I.s:1379   .text:0000000000000460 .LVL89
     /tmp/ccad2L7I.s:1445   .text:00000000000004a4 .LVL93
     /tmp/ccad2L7I.s:1452   .text:00000000000004ac .LVL94
     /tmp/ccad2L7I.s:1468   .text:00000000000004b8 .LVL96
     /tmp/ccad2L7I.s:1544   .text:00000000000004f4 .LVL101
     /tmp/ccad2L7I.s:1597   .text:000000000000051c .LVL105
     /tmp/ccad2L7I.s:1606   .text:0000000000000520 .LVL106
     /tmp/ccad2L7I.s:1622   .text:0000000000000528 .LVL107
     /tmp/ccad2L7I.s:1632   .text:0000000000000530 .LVL108
     /tmp/ccad2L7I.s:1660   .text:0000000000000550 .LVL110
     /tmp/ccad2L7I.s:1669   .text:0000000000000554 .LVL111
GAS LISTING /tmp/ccad2L7I.s 			page 75


     /tmp/ccad2L7I.s:1739   .text:0000000000000590 .LVL115
     /tmp/ccad2L7I.s:1752   .text:0000000000000594 .LVL116
     /tmp/ccad2L7I.s:1775   .text:00000000000005a4 .LVL117
     /tmp/ccad2L7I.s:1784   .text:00000000000005a8 .LVL118
     /tmp/ccad2L7I.s:116    .text:0000000000000050 .LVL1
     /tmp/ccad2L7I.s:144    .text:0000000000000090 .LVL2
     /tmp/ccad2L7I.s:294    .text:000000000000012c .LVL11
     /tmp/ccad2L7I.s:301    .text:0000000000000130 .LVL12
     /tmp/ccad2L7I.s:592    .text:00000000000001f0 .LVL26
     /tmp/ccad2L7I.s:601    .text:00000000000001f4 .LVL27
     /tmp/ccad2L7I.s:1943   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccad2L7I.s:508    .text:00000000000001b0 .LBB168
     /tmp/ccad2L7I.s:572    .text:00000000000001e0 .LBE168
     /tmp/ccad2L7I.s:615    .text:00000000000001fc .LBB225
     /tmp/ccad2L7I.s:1174   .text:00000000000003bc .LBE225

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
console_handler
_ZN3TCB16timeSliceCounterE
_ZN3TCB7runningE
_ZN3TCB8dispatchEv
_ZN15MemoryAllocator8myMallocEm
_ZN15MemoryAllocator6myFreeEPv
_ZN3TCB12createThreadEPFvPvES0_S0_
_ZN3TCB13putTCBinQueueEPS_
_Z11printStringPKc
_Z8printIntiii
